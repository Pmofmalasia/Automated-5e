[h:pm.SourcebookLibs = pm.GetBookInfo("Library","json")]
[h:pm.Classes = "[]"]
[h:pm.Feats = "[]"]
[h:pm.Races = "[]"]
[h:pm.Skills = "[]"]
[h:pm.Tools = "[]"]
[h:pm.ToolTypes = "[]"]
[h:pm.Abilities = "[]"]
[h:pm.AbilitiesToMerge = "[]"]
[h:pm.Conditions = "[]"]
[h:pm.ConditionTags = "[]"]
[h:pm.AbilityUpdates = "[]"]
[h:pm.MonsterFeatures = "[]"]
[h:pm.Subclasses = "[]"]
[h:pm.Subraces = "[]"]
[h:pm.CreatureTypes = "[]"]
[h:pm.CreatureSubtypes = "[]"]
[h:pm.Languages = "[]"]
[h:pm.Backgrounds = "[]"]
[h:pm.Attributes = "[]"]
[h:pm.DamageTypes = "[]"]
[h:pm.DamageTypeTags = "[]"]
[h:pm.CastingAbilities = "{}"]
[h:pm.SpellSchools = "[]"]
[h:pm.Spells = "[]"]
[h:pm.Objects = "[]"]
[h:pm.ObjectTypes = "[]"]
[h:pm.ObjectTags = "[]"]
[h:pm.ObjectMaterials = "[]"]
[h:pm.MaterialTags = "[]"]
[h:pm.WeaponTypes = "[]"]
[h:pm.WeaponTags = "[]"]
[h:pm.WeaponProperties = "[]"]
[h:pm.ArmorTypes = "[]"]
[h:pm.ArmorTags = "[]"]
[h:pm.ShieldTypes = "[]"]
[h:pm.AmmunitionTypes = "[]"]
[h:pm.SpellcastingFocusTypes = "[]"]
[h:pm.ClothingTypes = "[]"]
[h:pm.ArmorProperties = "[]"]
[h:pm.VisionTypes = "[]"]
[h:pm.SpellLists = "{}"]
[h:pm.Bestiary = "[]"]

[h:"<!-- Since languages may be setting specific, may want to add a function for DMs to exclude languages from certain sourcebooks. Can use this macro as the gate for blocking those books. -->"]
[h,foreach(book,pm.SourcebookLibs),CODE:{
	[h,if(getLibProperty("sb.Attributes","Lib:"+book)!=""): pm.Attributes = if(or(json.get(getLibProperty("AttributeSourcebooks"),book)==1,json.get(getLibProperty("AttributeSourcebooks"),book)==""),json.merge(pm.Attributes,getLibProperty("sb.Attributes","Lib:"+book)),pm.Attributes)]
	[h,if(getLibProperty("sb.Classes","Lib:"+book)!=""): pm.Classes = json.merge(pm.Classes,getLibProperty("sb.Classes","Lib:"+book))]
	[h,if(getLibProperty("sb.Subclasses","Lib:"+book)!=""): pm.Subclasses = json.merge(pm.Subclasses,getLibProperty("sb.Subclasses","Lib:"+book))]
	[h,if(getLibProperty("sb.Feats","Lib:"+book)!=""): pm.Feats = json.merge(pm.Feats,getLibProperty("sb.Feats","Lib:"+book))]
	[h,if(getLibProperty("sb.Backgrounds","Lib:"+book)!=""): pm.Backgrounds = json.merge(pm.Backgrounds,getLibProperty("sb.Backgrounds","Lib:"+book))]
	[h,if(getLibProperty("sb.Races","Lib:"+book)!=""): pm.Races = json.merge(pm.Races,getLibProperty("sb.Races","Lib:"+book))]
	[h,if(getLibProperty("sb.Subraces","Lib:"+book)!=""): pm.Subraces = json.merge(pm.Subraces,getLibProperty("sb.Subraces","Lib:"+book))]
	[h,if(getLibProperty("sb.CreatureTypes","Lib:"+book)!=""): pm.CreatureTypes = json.merge(pm.CreatureTypes,getLibProperty("sb.CreatureTypes","Lib:"+book))]
	[h,if(getLibProperty("sb.CreatureSubtypes","Lib:"+book)!=""): pm.CreatureSubtypes = json.merge(pm.CreatureSubtypes,getLibProperty("sb.CreatureSubtypes","Lib:"+book))]
	[h,if(getLibProperty("sb.Languages","Lib:"+book)!=""): pm.Languages = if(or(json.get(getLibProperty("LanguageSourcebooks"),book)==1,json.get(getLibProperty("LanguageSourcebooks"),book)==""),json.merge(pm.Languages,getLibProperty("sb.Languages","Lib:"+book)),pm.Languages)]
	[h,if(getLibProperty("sb.Skills","Lib:"+book)!=""): pm.Skills = json.merge(pm.Skills,getLibProperty("sb.Skills","Lib:"+book))]
	[h,if(getLibProperty("sb.Tools","Lib:"+book)!=""): pm.Tools = json.merge(pm.Tools,getLibProperty("sb.Tools","Lib:"+book))]
	[h,if(getLibProperty("sb.ToolTypes","Lib:"+book)!=""): pm.ToolTypes = json.merge(pm.ToolTypes,getLibProperty("sb.ToolTypes","Lib:"+book))]
	[h,if(getLibProperty("sb.Conditions","Lib:"+book)!=""): pm.Conditions = json.merge(pm.Conditions,getLibProperty("sb.Conditions","Lib:"+book))]
	[h,if(getLibProperty("sb.Abilities","Lib:"+book)!=""): pm.Abilities = json.merge(pm.Abilities,json.path.read(getLibProperty("sb.Abilities","Lib:"+book),"\$[*][?(@.CreatedForMerging!=1)]"))]
	[h,if(getLibProperty("sb.Abilities","Lib:"+book)!=""): pm.AbilitiesToMerge = json.merge(pm.AbilitiesToMerge,json.path.read(getLibProperty("sb.Abilities","Lib:"+book),"\$[*][?(@.CreatedForMerging==1)]"))]
	[h,if(getLibProperty("sb.AbilityUpdates","Lib:"+book)!=""): pm.AbilityUpdates = json.merge(pm.AbilityUpdates,getLibProperty("sb.AbilityUpdates","Lib:"+book))]
	[h,if(getLibProperty("sb.MonsterFeatures","Lib:"+book)!=""): pm.MonsterFeatures = json.merge(pm.MonsterFeatures,getLibProperty("sb.MonsterFeatures","Lib:"+book))]
	[h,if(getLibProperty("sb.DamageTypes","Lib:"+book)!=""): pm.DamageTypes = json.merge(pm.DamageTypes,getLibProperty("sb.DamageTypes","Lib:"+book))]
	[h,if(getLibProperty("sb.DamageTypeTags","Lib:"+book)!=""): pm.DamageTypeTags = json.merge(pm.DamageTypeTags,getLibProperty("sb.DamageTypeTags","Lib:"+book))]
	[h,if(getLibProperty("sb.ConditionTags","Lib:"+book)!=""): pm.ConditionTags = json.merge(pm.ConditionTags,getLibProperty("sb.ConditionTags","Lib:"+book))]
	[h,if(getLibProperty("sb.CastingAbilities","Lib:"+book)!=""): pm.CastingAbilities = json.merge(pm.CastingAbilities,getLibProperty("sb.CastingAbilities","Lib:"+book))]
	[h,if(getLibProperty("sb.SpellSchools","Lib:"+book)!=""): pm.SpellSchools = json.merge(pm.SpellSchools,getLibProperty("sb.SpellSchools","Lib:"+book))]
	[h,if(getLibProperty("sb.Spells","Lib:"+book)!=""): pm.Spells = json.merge(pm.Spells,getLibProperty("sb.Spells","Lib:"+book))]
	[h,if(getLibProperty("sb.Objects","Lib:"+book)!=""): pm.Objects = json.merge(pm.Objects,getLibProperty("sb.Objects","Lib:"+book))]
	[h,if(getLibProperty("sb.ObjectTypes","Lib:"+book)!=""): pm.ObjectTypes = json.merge(pm.ObjectTypes,getLibProperty("sb.ObjectTypes","Lib:"+book))]
	[h,if(getLibProperty("sb.ObjectTags","Lib:"+book)!=""): pm.ObjectTags = json.merge(pm.ObjectTags,getLibProperty("sb.ObjectTags","Lib:"+book))]
	[h,if(getLibProperty("sb.ObjectMaterials","Lib:"+book)!=""): pm.ObjectMaterials = json.merge(pm.ObjectMaterials,getLibProperty("sb.ObjectMaterials","Lib:"+book))]
	[h,if(getLibProperty("sb.MaterialTags","Lib:"+book)!=""): pm.MaterialTags = json.merge(pm.MaterialTags,getLibProperty("sb.MaterialTags","Lib:"+book))]
	[h,if(getLibProperty("sb.WeaponTypes","Lib:"+book)!=""): pm.WeaponTypes = json.merge(pm.WeaponTypes,getLibProperty("sb.WeaponTypes","Lib:"+book))]
	[h,if(getLibProperty("sb.WeaponProperties","Lib:"+book)!=""): pm.WeaponProperties = json.merge(pm.WeaponProperties,getLibProperty("sb.WeaponProperties","Lib:"+book))]
	[h,if(getLibProperty("sb.WeaponTags","Lib:"+book)!=""): pm.WeaponTags = json.merge(pm.WeaponTags,getLibProperty("sb.WeaponTags","Lib:"+book))]
	[h,if(getLibProperty("sb.ArmorTypes","Lib:"+book)!=""): pm.ArmorTypes = json.merge(pm.ArmorTypes,getLibProperty("sb.ArmorTypes","Lib:"+book))]
	[h,if(getLibProperty("sb.ShieldTypes","Lib:"+book)!=""): pm.ShieldTypes = json.merge(pm.ShieldTypes,getLibProperty("sb.ShieldTypes","Lib:"+book))]
	[h,if(getLibProperty("sb.AmmunitionTypes","Lib:"+book)!=""): pm.AmmunitionTypes = json.merge(pm.AmmunitionTypes,getLibProperty("sb.AmmunitionTypes","Lib:"+book))]
	[h,if(getLibProperty("sb.ClothingTypes","Lib:"+book)!=""): pm.ClothingTypes = json.merge(pm.ClothingTypes,getLibProperty("sb.ClothingTypes","Lib:"+book))]
	[h,if(getLibProperty("sb.SpellcastingFocusTypes","Lib:"+book)!=""): pm.SpellcastingFocusTypes = json.merge(pm.SpellcastingFocusTypes,getLibProperty("sb.SpellcastingFocusTypes","Lib:"+book))]
	[h,if(getLibProperty("sb.ArmorProperties","Lib:"+book)!=""): pm.ArmorProperties = json.merge(pm.ArmorProperties,getLibProperty("sb.ArmorProperties","Lib:"+book))]
	[h,if(getLibProperty("sb.VisionTypes","Lib:"+book)!=""): pm.VisionTypes = json.merge(pm.VisionTypes,getLibProperty("sb.VisionTypes","Lib:"+book))]
	[h,if(getLibProperty("sb.Bestiary","Lib:"+book)!=""): pm.Bestiary = json.merge(pm.Bestiary,getLibProperty("sb.Bestiary","Lib:"+book))]
	
	[h,if(getLibProperty("sb.ArmorTags","Lib:"+book)!=""): pm.ArmorTags = json.merge(pm.ArmorTags,getLibProperty("sb.ArmorTags","Lib:"+book))]
	[h:thisBookSpellLists = getLibProperty("sb.SpellLists","Lib:"+book)]
	[h,foreach(tempClass,json.fields(thisBookSpellLists)),CODE:{
		[h,if(json.get(pm.SpellLists,tempClass)==""):
			pm.SpellLists = json.set(pm.SpellLists,tempClass,json.get(thisBookSpellLists,tempClass));
			pm.SpellLists = json.set(pm.SpellLists,tempClass,json.sort(json.merge(json.get(pm.SpellLists,tempClass),json.get(thisBookSpellLists,tempClass))))
		]
	}]
}]

[h,foreach(ability,pm.AbilitiesToMerge),CODE:{
	[h:BaseAbility = json.get(json.path.read(pm.Abilities,"\$[*][?(@.Name=='"+json.get(ability,"Name")+"' && @.Class=='"+json.get(ability,"Class")+"' && @.Subclass=='"+json.get(ability,"Subclass")+"')]"),0)]
	[h,if(json.get(ability,"FightingStyleList")!=""): pm.Abilities = json.path.set(pm.Abilities,"\$[*][?(@.Name=='"+json.get(ability,"Name")+"' && @.Class=='"+json.get(ability,"Class")+"' && @.Subclass=='"+json.get(ability,"Subclass")+"')]['FightingStyleList']",json.merge(json.get(BaseAbility,"FightingStyleList"),json.get(ability,"FightingStyleList")))]
}]

[h:data.setData("addon:","pm.a5e.core","sb.Attributes",pm.Attributes)]
[h:data.setData("addon:","pm.a5e.core","sb.Classes",json.sort(pm.Classes,"a","DisplayName"))]
[h:data.setData("addon:","pm.a5e.core","sb.Feats",json.sort(pm.Feats,"a","DisplayName"))]
[h:data.setData("addon:","pm.a5e.core","sb.Backgrounds",json.sort(pm.Backgrounds,"a","DisplayName"))]
[h:data.setData("addon:","pm.a5e.core","sb.Races",json.sort(pm.Races,"a","DisplayName"))]
[h:data.setData("addon:","pm.a5e.core","sb.Languages",json.sort(pm.Languages,"a","DisplayName"))]
[h:data.setData("addon:","pm.a5e.core","sb.Skills",json.sort(pm.Skills,"a","DisplayName"))]
[h:data.setData("addon:","pm.a5e.core","sb.Tools",json.sort(pm.Tools,"a","DisplayName"))]
[h:data.setData("addon:","pm.a5e.core","sb.ToolTypes",json.sort(pm.ToolTypes,"a","DisplayName"))]
[h:data.setData("addon:","pm.a5e.core","sb.Subclasses",json.sort(pm.Subclasses,"a","DisplayName"))]
[h:data.setData("addon:","pm.a5e.core","sb.Subraces",json.sort(pm.Subraces,"a","Race","DisplayName"))]
[h:data.setData("addon:","pm.a5e.core","sb.CreatureTypes",json.sort(pm.CreatureTypes,"a","DisplayName"))]
[h:data.setData("addon:","pm.a5e.core","sb.CreatureSubtypes",json.sort(pm.CreatureSubtypes,"a","DisplayName"))]
[h:data.setData("addon:","pm.a5e.core","sb.Conditions",json.sort(pm.Conditions,"a","Class","Subclass","Level","DisplayName"))]
[h:data.setData("addon:","pm.a5e.core","sb.Abilities",json.sort(pm.Abilities,"a","Class","Subclass","Level","DisplayName"))]
[h:data.setData("addon:","pm.a5e.core","sb.AbilityUpdates",json.sort(pm.AbilityUpdates,"a","Class","Subclass","Level","DisplayName"))]
[h:data.setData("addon:","pm.a5e.core","sb.MonsterFeatures",json.sort(pm.MonsterFeatures,"a","Class","Subclass","Level","DisplayName"))]
[h:data.setData("addon:","pm.a5e.core","sb.DamageTypes",pm.DamageTypes)]
[h:data.setData("addon:","pm.a5e.core","sb.DamageTypeTags",json.sort(pm.DamageTypeTags,"a","DisplayName"))]
[h:data.setData("addon:","pm.a5e.core","sb.ConditionTags",json.sort(pm.ConditionTags,"a","DisplayName"))]
[h:data.setData("addon:","pm.a5e.core","sb.CastingAbilities",pm.CastingAbilities)]
[h:data.setData("addon:","pm.a5e.core","sb.SpellSchools",json.sort(pm.SpellSchools,"a","DisplayName"))]
[h:data.setData("addon:","pm.a5e.core","sb.Spells",json.sort(pm.Spells,"a","DisplayName"))]
[h:data.setData("addon:","pm.a5e.core","sb.Objects",json.sort(pm.Objects,"a","DisplayName"))]
[h:data.setData("addon:","pm.a5e.core","sb.ObjectTypes",json.sort(pm.ObjectTypes,"a","DisplayName"))]
[h:data.setData("addon:","pm.a5e.core","sb.ObjectTags",json.sort(pm.ObjectTags,"a","DisplayName"))]
[h:data.setData("addon:","pm.a5e.core","sb.ObjectMaterials",json.sort(pm.ObjectMaterials,"a","DisplayName"))]
[h:data.setData("addon:","pm.a5e.core","sb.MaterialTags",json.sort(pm.MaterialTags,"a","DisplayName"))]
[h:data.setData("addon:","pm.a5e.core","sb.WeaponTypes",json.sort(pm.WeaponTypes,"a","DisplayName"))]
[h:data.setData("addon:","pm.a5e.core","sb.WeaponProperties",json.sort(pm.WeaponProperties,"a","DisplayName"))]
[h:data.setData("addon:","pm.a5e.core","sb.WeaponTags",json.sort(pm.WeaponTags,"a","DisplayName"))]
[h:data.setData("addon:","pm.a5e.core","sb.ArmorTypes",json.sort(pm.ArmorTypes,"a","DisplayName"))]
[h:data.setData("addon:","pm.a5e.core","sb.ArmorTags",json.sort(pm.ArmorTags,"a","DisplayName"))]
[h:data.setData("addon:","pm.a5e.core","sb.ShieldTypes",json.sort(pm.ShieldTypes,"a","DisplayName"))]
[h:data.setData("addon:","pm.a5e.core","sb.AmmunitionTypes",json.sort(pm.AmmunitionTypes,"a","DisplayName"))]
[h:data.setData("addon:","pm.a5e.core","sb.ClothingTypes",json.sort(pm.ClothingTypes,"a","DisplayName"))]
[h:data.setData("addon:","pm.a5e.core","sb.SpellcastingFocusTypes",json.sort(pm.SpellcastingFocusTypes,"a","DisplayName"))]
[h:data.setData("addon:","pm.a5e.core","sb.ArmorProperties",json.sort(pm.ArmorProperties,"a","DisplayName"))]
[h:data.setData("addon:","pm.a5e.core","sb.Bestiary",json.sort(pm.Bestiary,"a","Name"))]
[h:data.setData("addon:","pm.a5e.core","sb.VisionTypes",pm.VisionTypes)]
[h:data.setData("addon:","pm.a5e.core","sb.SpellLists",pm.SpellLists)]

[h:broadcast("Sourcebook Data has been moved to the core library.")]