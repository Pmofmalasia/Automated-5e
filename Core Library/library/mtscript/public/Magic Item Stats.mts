[h:VulnTest=0]
[h:ResTest=0]
[h:ImmunTest=0]
[h:AbsorbTest=0]
[h:DRTest=0]
[h:DRamntTest=0]
[h:CondImmunTest=0]
[h:AttributeTest=0]
[h:SaveTest=0]
[h:CheckAdvTest=0]
[h:CheckDisTest=0]
[h:CheckBonusTest=0]
[h:CheckProfTest=0]
[h:CheckMessageTest=0]
[h:InitTest=0]
[h:DeathTest=0]
[h:ConcTest=0]
[h:HPTest=0]
[h:ACTest=0]
[h:MoveTest=0]
[h:WeaponProfTest=0]

<!-- If they are equal you dont want to go through the loop so 1 is the default and 0 is if there is a change -->
[h:NewItemList=macro.args]
[h,if(NewItemList==""),CODE:{};{
	[h:pm.ItemTests()]
}]
[h,if(AttributeTest),CODE:{
    
    [h:tStrBonus=json.get(MagicItemStats,"bStr")]
    [h:tDexBonus=json.get(MagicItemStats,"bDex")]
    [h:tConBonus=json.get(MagicItemStats,"bCon")]
    [h:tIntBonus=json.get(MagicItemStats,"bInt")]
    [h:tWisBonus=json.get(MagicItemStats,"bWis")]
    [h:tChaBonus=json.get(MagicItemStats,"bCha")]
    [h:tStrSet=json.get(MagicItemStats,"sStr")]
    [h:tDexSet=json.get(MagicItemStats,"sDex")]
    [h:tConSet=json.get(MagicItemStats,"sCon")]
    [h:tIntSet=json.get(MagicItemStats,"sInt")]
    [h:tWisSet=json.get(MagicItemStats,"sWis")]
    [h:tChaSet=json.get(MagicItemStats,"sCha")]
    [h:tStrSetOverride=json.get(MagicItemStats,"soStr")]
    [h:tDexSetOverride=json.get(MagicItemStats,"soDex")]
    [h:tConSetOverride=json.get(MagicItemStats,"soCon")]
    [h:tIntSetOverride=json.get(MagicItemStats,"soInt")]
    [h:tWisSetOverride=json.get(MagicItemStats,"soWis")]
    [h:tChaSetOverride=json.get(MagicItemStats,"soCha")]
    };{

    [h:tStrBonus=0]
    [h:tDexBonus=0]
    [h:tConBonus=0]
    [h:tIntBonus=0]
    [h:tWisBonus=0]
    [h:tChaBonus=0]
    [h:tStrSet=0]
    [h:tDexSet=0]
    [h:tConSet=0]
    [h:tIntSet=0]
    [h:tWisSet=0]
    [h:tChaSet=0]
    [h:tStrSetOverride=-1]
    [h:tDexSetOverride=-1]
    [h:tConSetOverride=-1]
    [h:tIntSetOverride=-1]
    [h:tWisSetOverride=-1]
    [h:tChaSetOverride=-1]
    
[h,count(json.length(MagicItemNames)),CODE:{

    [h:GivesBonusTest=if(and(or(json.get(json.get(MagicItemEquipment,roll.count),"reqEquip")==0,json.get(json.get(MagicItemEquipment,roll.count),"isEquipped")==1),or(json.get(json.get(MagicItemActivation,roll.count),"reqActive")==0,json.get(json.get(MagicItemActivation,roll.count),"isActive")==1),or(json.get(json.get(MagicItemAttuned,roll.count),"reqAttunement")==0,json.get(json.get(MagicItemAttuned,roll.count),"slotAttunement")>=1)),1,0)]
    
    [h:tStrBonus=if(GivesBonusTest,json.get(json.get(MagicItemAttributes,roll.count),"StrBonus")+tStrBonus,tStrBonus)]
    [h:tDexBonus=if(GivesBonusTest,json.get(json.get(MagicItemAttributes,roll.count),"DexBonus")+tDexBonus,tDexBonus)]
    [h:tConBonus=if(GivesBonusTest,json.get(json.get(MagicItemAttributes,roll.count),"ConBonus")+tConBonus,tConBonus)]
    [h:tIntBonus=if(GivesBonusTest,json.get(json.get(MagicItemAttributes,roll.count),"IntBonus")+tIntBonus,tIntBonus)]
    [h:tWisBonus=if(GivesBonusTest,json.get(json.get(MagicItemAttributes,roll.count),"WisBonus")+tWisBonus,tWisBonus)]
    [h:tChaBonus=if(GivesBonusTest,json.get(json.get(MagicItemAttributes,roll.count),"ChaBonus")+tChaBonus,tChaBonus)]
    
    [h:tStrSet=if(GivesBonusTest,max(json.get(json.get(MagicItemAttributes,roll.count),"StrSet"),tStrSet),tStrSet)]
    [h:tDexSet=if(GivesBonusTest,max(json.get(json.get(MagicItemAttributes,roll.count),"DexSet"),tDexSet),tDexSet)]
    [h:tConSet=if(GivesBonusTest,max(json.get(json.get(MagicItemAttributes,roll.count),"ConSet"),tConSet),tConSet)]
    [h:tIntSet=if(GivesBonusTest,max(json.get(json.get(MagicItemAttributes,roll.count),"IntSet"),tIntSet),tIntSet)]
    [h:tWisSet=if(GivesBonusTest,max(json.get(json.get(MagicItemAttributes,roll.count),"WisSet"),tWisSet),tWisSet)]
    [h:tChaSet=if(GivesBonusTest,max(json.get(json.get(MagicItemAttributes,roll.count),"ChaSet"),tChaSet),tChaSet)]
}]

[h,count(json.length(MagicItemNames)),CODE:{
    
    [h:GivesBonusTest=if(and(or(json.get(json.get(MagicItemEquipment,roll.count),"reqEquip")==0,json.get(json.get(MagicItemEquipment,roll.count),"isEquipped")==1),or(json.get(json.get(MagicItemActivation,roll.count),"reqActive")==0,json.get(json.get(MagicItemActivation,roll.count),"isActive")==1),or(json.get(json.get(MagicItemAttuned,roll.count),"reqAttunement")==0,json.get(json.get(MagicItemAttuned,roll.count),"slotAttunement")>=1)),1,0)]
    
    [h:tStrSetOverride=if(GivesBonusTest,if(tStrSetOverride==-1,min(json.get(json.get(MagicItemAttributes,roll.count),"StrSetOverride"),max(json.get(Attributes,"Strength")+tStrBonus,tStrSet)),min(json.get(json.get(MagicItemAttributes,roll.count),"StrSetOverride"),tStrSetOverride)),tStrSetOverride)]
    [h:tDexSetOverride=if(GivesBonusTest,if(tDexSetOverride==-1,min(json.get(json.get(MagicItemAttributes,roll.count),"DexSetOverride"),max(json.get(Attributes,"Dexterity")+tDexBonus,tDexSet)),min(json.get(json.get(MagicItemAttributes,roll.count),"DexSetOverride"),tDexSetOverride)),tDexSetOverride)]
    [h:tConSetOverride=if(GivesBonusTest,if(tConSetOverride==-1,min(json.get(json.get(MagicItemAttributes,roll.count),"ConSetOverride"),max(json.get(Attributes,"Constitution")+tConBonus,tConSet)),min(json.get(json.get(MagicItemAttributes,roll.count),"ConSetOverride"),tConSetOverride)),tConSetOverride)]
    [h:tIntSetOverride=if(GivesBonusTest,if(tIntSetOverride==-1,min(json.get(json.get(MagicItemAttributes,roll.count),"IntSetOverride"),max(json.get(Attributes,"Intelligence")+tIntBonus,tIntSet)),min(json.get(json.get(MagicItemAttributes,roll.count),"IntSetOverride"),tIntSetOverride)),tIntSetOverride)]
    [h:tWisSetOverride=if(GivesBonusTest,if(tWisSetOverride==-1,min(json.get(json.get(MagicItemAttributes,roll.count),"WisSetOverride"),max(json.get(Attributes,"pWisdom")+tWisBonus,tWisSet)),min(json.get(json.get(MagicItemAttributes,roll.count),"WisSetOverride"),tWisSetOverride)),tWisSetOverride)]
    [h:tChaSetOverride=if(GivesBonusTest,if(tChaSetOverride==-1,min(json.get(json.get(MagicItemAttributes,roll.count),"ChaSetOverride"),max(json.get(Attributes,"Charisma")+tChaBonus,tChaSet)),min(json.get(json.get(MagicItemAttributes,roll.count),"ChaSetOverride"),tChaSetOverride)),tChaSetOverride)]
}]
}]

<!--For all damage modification, 0 is no effect, 1 is physical damage only, 2 is magical damage only, and 3 is both physical and magical -->

[h,if(VulnTest),CODE:{
    [h:tbludgVuln=json.get(MagicItemStats,"ibludgVuln")]
    [h:tpierceVuln=json.get(MagicItemStats,"ipierceVuln")]
    [h:tslashVuln=json.get(MagicItemStats,"islashVuln")]
    [h:tacidVuln=json.get(MagicItemStats,"iacidVuln")]
    [h:tcoldVuln=json.get(MagicItemStats,"icoldVuln")]
    [h:tfireVuln=json.get(MagicItemStats,"ifireVuln")]
    [h:tforceVuln=json.get(MagicItemStats,"iforceVuln")]
    [h:tlightVuln=json.get(MagicItemStats,"ilightVuln")]
    [h:tnecroVuln=json.get(MagicItemStats,"inecroVuln")]
    [h:tpoisVuln=json.get(MagicItemStats,"ipoisVuln")]
    [h:tpsychVuln=json.get(MagicItemStats,"ipsychVuln")]
    [h:tradVuln=json.get(MagicItemStats,"iradVuln")]
    [h:tthunVuln=json.get(MagicItemStats,"ithunVuln")]
    [h:tabjVuln=json.get(MagicItemStats,"iabjVuln")]
    [h:tconjVuln=json.get(MagicItemStats,"iconjVuln")]
    [h:tdivVuln=json.get(MagicItemStats,"idivVuln")]
    [h:tenchVuln=json.get(MagicItemStats,"ienchVuln")]
    [h:tevocVuln=json.get(MagicItemStats,"ievocVuln")]
    [h:tillVuln=json.get(MagicItemStats,"iillVuln")]
    [h:tnecVuln=json.get(MagicItemStats,"inecVuln")]
    [h:ttranVuln=json.get(MagicItemStats,"itransVuln")]
};{
    [h:tbludgVuln=0]
    [h:tpierceVuln=0]
    [h:tslashVuln=0]
    [h:tacidVuln=0]
    [h:tcoldVuln=0]
    [h:tfireVuln=0]
    [h:tforceVuln=0]
    [h:tlightVuln=0]
    [h:tnecroVuln=0]
    [h:tpoisVuln=0]
    [h:tpsychVuln=0]
    [h:tradVuln=0]
    [h:tthunVuln=0]
    [h:tabjVuln=0]
    [h:tconjVuln=0]
    [h:tdivVuln=0]
    [h:tenchVuln=0]
    [h:tevocVuln=0]
    [h:tillVuln=0]
    [h:tnecVuln=0]
    [h:ttranVuln=0]
    
[h,count(json.length(MagicItemNames)),CODE:{
    
    [h:GivesBonusTest=if(and(or(json.get(json.get(MagicItemEquipment,roll.count),"reqEquip")==0,json.get(json.get(MagicItemEquipment,roll.count),"isEquipped")==1),or(json.get(json.get(MagicItemActivation,roll.count),"reqActive")==0,json.get(json.get(MagicItemActivation,roll.count),"isActive")==1),or(json.get(json.get(MagicItemAttuned,roll.count),"reqAttunement")==0,json.get(json.get(MagicItemAttuned,roll.count),"slotAttunement")>=1)),1,0)]
    
    [h:tbludgVuln=if(GivesBonusTest,if(or(json.get(json.get(MagicItemVuln,roll.count),"bludgVuln")==3,(tbludgVuln+json.get(json.get(MagicItemVuln,roll.count),"bludgVuln"))==3),3,max(json.get(json.get(MagicItemVuln,roll.count),"bludgVuln"),tbludgVuln)),tbludgVuln)]	
    [h:tpierceVuln=if(GivesBonusTest,if(or(json.get(json.get(MagicItemVuln,roll.count),"pierceVuln")==3,(tpierceVuln+json.get(json.get(MagicItemVuln,roll.count),"pierceVuln"))==3),3,max(json.get(json.get(MagicItemVuln,roll.count),"pierceVuln"),tpierceVuln)),tpierceVuln)]
    [h:tslashVuln=if(GivesBonusTest,if(or(json.get(json.get(MagicItemVuln,roll.count),"slashVuln")==3,(tslashVuln+json.get(json.get(MagicItemVuln,roll.count),"slashVuln"))==3),3,max(json.get(json.get(MagicItemVuln,roll.count),"slashVuln"),tslashVuln)),tslashVuln)]
    [h:tacidVuln=if(GivesBonusTest,if(or(json.get(json.get(MagicItemVuln,roll.count),"acidVuln")==3,(tacidVuln+json.get(json.get(MagicItemVuln,roll.count),"acidVuln"))==3),3,max(json.get(json.get(MagicItemVuln,roll.count),"acidVuln"),tacidVuln)),tacidVuln)]
    [h:tcoldVuln=if(GivesBonusTest,if(or(json.get(json.get(MagicItemVuln,roll.count),"coldVuln")==3,(tcoldVuln+json.get(json.get(MagicItemVuln,roll.count),"coldVuln"))==3),3,max(json.get(json.get(MagicItemVuln,roll.count),"coldVuln"),tcoldVuln)),tcoldVuln)]
    [h:tfireVuln=if(GivesBonusTest,if(or(json.get(json.get(MagicItemVuln,roll.count),"fireVuln")==3,(tfireVuln+json.get(json.get(MagicItemVuln,roll.count),"fireVuln"))==3),3,max(json.get(json.get(MagicItemVuln,roll.count),"fireVuln"),tfireVuln)),tfireVuln)]
    [h:tforceVuln=if(GivesBonusTest,if(or(json.get(json.get(MagicItemVuln,roll.count),"forceVuln")==3,(tforceVuln+json.get(json.get(MagicItemVuln,roll.count),"forceVuln"))==3),3,max(json.get(json.get(MagicItemVuln,roll.count),"forceVuln"),tforceVuln)),tforceVuln)]
    [h:tlightVuln=if(GivesBonusTest,if(or(json.get(json.get(MagicItemVuln,roll.count),"lightVuln")==3,(tlightVuln+json.get(json.get(MagicItemVuln,roll.count),"lightVuln"))==3),3,max(json.get(json.get(MagicItemVuln,roll.count),"lightVuln"),tlightVuln)),tlightVuln)]
    [h:tnecroVuln=if(GivesBonusTest,if(or(json.get(json.get(MagicItemVuln,roll.count),"necroVuln")==3,(tnecroVuln+json.get(json.get(MagicItemVuln,roll.count),"necroVuln"))==3),3,max(json.get(json.get(MagicItemVuln,roll.count),"necroVuln"),tnecroVuln)),tnecroVuln)]
    [h:tpoisVuln=if(GivesBonusTest,if(or(json.get(json.get(MagicItemVuln,roll.count),"poisVuln")==3,(tpoisVuln+json.get(json.get(MagicItemVuln,roll.count),"poisVuln"))==3),3,max(json.get(json.get(MagicItemVuln,roll.count),"poisVuln"),tpoisVuln)),tpoisVuln)]
    [h:tpsychVuln=if(GivesBonusTest,if(or(json.get(json.get(MagicItemVuln,roll.count),"psychVuln")==3,(tpsychVuln+json.get(json.get(MagicItemVuln,roll.count),"psychVuln"))==3),3,max(json.get(json.get(MagicItemVuln,roll.count),"psychVuln"),tpsychVuln)),tpsychVuln)]
    [h:tradVuln=if(GivesBonusTest,if(or(json.get(json.get(MagicItemVuln,roll.count),"radVuln")==3,(tradVuln+json.get(json.get(MagicItemVuln,roll.count),"radVuln"))==3),3,max(json.get(json.get(MagicItemVuln,roll.count),"radVuln"),tradVuln)),tradVuln)]
    [h:tthunVuln=if(GivesBonusTest,if(or(json.get(json.get(MagicItemVuln,roll.count),"thunVuln")==3,(tthunVuln+json.get(json.get(MagicItemVuln,roll.count),"thunVuln"))==3),3,max(json.get(json.get(MagicItemVuln,roll.count),"thunVuln"),tthunVuln)),tthunVuln)]
    [h:tabjVuln=if(GivesBonusTest,if(or(json.get(json.get(MagicItemVuln,roll.count),"abjVuln")==3,(tabjVuln+json.get(json.get(MagicItemVuln,roll.count),"abjVuln"))==3),3,max(json.get(json.get(MagicItemVuln,roll.count),"abjVuln"),tabjVuln)),tabjVuln)]
    [h:tconjVuln=if(GivesBonusTest,if(or(json.get(json.get(MagicItemVuln,roll.count),"conjVuln")==3,(tconjVuln+json.get(json.get(MagicItemVuln,roll.count),"conjVuln"))==3),3,max(json.get(json.get(MagicItemVuln,roll.count),"conjVuln"),tconjVuln)),tconjVuln)]
	[h:tdivVuln=if(GivesBonusTest,if(or(json.get(json.get(MagicItemVuln,roll.count),"divVuln")==3,(tdivVuln+json.get(json.get(MagicItemVuln,roll.count),"divVuln"))==3),3,max(json.get(json.get(MagicItemVuln,roll.count),"divVuln"),tdivVuln)),tdivVuln)]
	[h:tenchVuln=if(GivesBonusTest,if(or(json.get(json.get(MagicItemVuln,roll.count),"enchVuln")==3,(tenchVuln+json.get(json.get(MagicItemVuln,roll.count),"enchVuln"))==3),3,max(json.get(json.get(MagicItemVuln,roll.count),"enchVuln"),tenchVuln)),tenchVuln)]
	[h:tevocVuln=if(GivesBonusTest,if(or(json.get(json.get(MagicItemVuln,roll.count),"evocVuln")==3,(tevocVuln+json.get(json.get(MagicItemVuln,roll.count),"evocVuln"))==3),3,max(json.get(json.get(MagicItemVuln,roll.count),"evocVuln"),tevocVuln)),tevocVuln)]
	[h:tillVuln=if(GivesBonusTest,if(or(json.get(json.get(MagicItemVuln,roll.count),"illVuln")==3,(tillVuln+json.get(json.get(MagicItemVuln,roll.count),"illVuln"))==3),3,max(json.get(json.get(MagicItemVuln,roll.count),"illVuln"),tillVuln)),tillVuln)]
	[h:tnecVuln=if(GivesBonusTest,if(or(json.get(json.get(MagicItemVuln,roll.count),"necVuln")==3,(tnecVuln+json.get(json.get(MagicItemVuln,roll.count),"necVuln"))==3),3,max(json.get(json.get(MagicItemVuln,roll.count),"necVuln"),tnecVuln)),tnecVuln)]
	[h:ttranVuln=if(GivesBonusTest,if(or(json.get(json.get(MagicItemVuln,roll.count),"tranVuln")==3,(ttranVuln+json.get(json.get(MagicItemVuln,roll.count),"tranVuln"))==3),3,max(json.get(json.get(MagicItemVuln,roll.count),"tranVuln"),ttranVuln)),ttranVuln)]
}]}]

[h,if(ResTest),CODE:{
    [h:tbludgRes=json.get(MagicItemStats,"ibludgRes")]
    [h:tpierceRes=json.get(MagicItemStats,"ipierceRes")]
    [h:tslashRes=json.get(MagicItemStats,"islashRes")]
    [h:tacidRes=json.get(MagicItemStats,"iacidRes")]
    [h:tcoldRes=json.get(MagicItemStats,"icoldRes")]
    [h:tfireRes=json.get(MagicItemStats,"ifireRes")]
    [h:tforceRes=json.get(MagicItemStats,"iforceRes")]
    [h:tlightRes=json.get(MagicItemStats,"ilightRes")]
    [h:tnecroRes=json.get(MagicItemStats,"inecroRes")]
    [h:tpoisRes=json.get(MagicItemStats,"ipoisRes")]
    [h:tpsychRes=json.get(MagicItemStats,"ipsychRes")]
    [h:tradRes=json.get(MagicItemStats,"iradRes")]
    [h:tthunRes=json.get(MagicItemStats,"ithunRes")]
    [h:tabjRes=json.get(MagicItemStats,"iabjRes")]
    [h:tconjRes=json.get(MagicItemStats,"iconjRes")]
    [h:tdivRes=json.get(MagicItemStats,"idivRes")]
    [h:tenchRes=json.get(MagicItemStats,"ienchRes")]
    [h:tevocRes=json.get(MagicItemStats,"ievocRes")]
    [h:tillRes=json.get(MagicItemStats,"iillRes")]
    [h:tnecRes=json.get(MagicItemStats,"inecRes")]
    [h:ttranRes=json.get(MagicItemStats,"itransRes")]
};{
    [h:tbludgRes=0]
    [h:tpierceRes=0]
    [h:tslashRes=0]
    [h:tacidRes=0]
    [h:tcoldRes=0]
    [h:tfireRes=0]
    [h:tforceRes=0]
    [h:tlightRes=0]
    [h:tnecroRes=0]
    [h:tpoisRes=0]
    [h:tpsychRes=0]
    [h:tradRes=0]
    [h:tthunRes=0]
    [h:tabjRes=0]
    [h:tconjRes=0]
    [h:tdivRes=0]
    [h:tenchRes=0]
    [h:tevocRes=0]
    [h:tillRes=0]
    [h:tnecRes=0]
    [h:ttranRes=0]
[h,count(json.length(MagicItemNames)),CODE:{
    
    [h:GivesBonusTest=if(and(or(json.get(json.get(MagicItemEquipment,roll.count),"reqEquip")==0,json.get(json.get(MagicItemEquipment,roll.count),"isEquipped")==1),or(json.get(json.get(MagicItemActivation,roll.count),"reqActive")==0,json.get(json.get(MagicItemActivation,roll.count),"isActive")==1),or(json.get(json.get(MagicItemAttuned,roll.count),"reqAttunement")==0,json.get(json.get(MagicItemAttuned,roll.count),"slotAttunement")>=1)),1,0)]
    
    [h:tbludgRes=if(GivesBonusTest,if(or(json.get(json.get(MagicItemRes,roll.count),"bludgRes")==3,(tbludgRes+json.get(json.get(MagicItemRes,roll.count),"bludgRes"))==3),3,max(json.get(json.get(MagicItemRes,roll.count),"bludgRes"),tbludgRes)),tbludgRes)]
    [h:tpierceRes=if(GivesBonusTest,if(or(json.get(json.get(MagicItemRes,roll.count),"pierceRes")==3,(tpierceRes+json.get(json.get(MagicItemRes,roll.count),"pierceRes"))==3),3,max(json.get(json.get(MagicItemRes,roll.count),"pierceRes"),tpierceRes)),tpierceRes)]
    [h:tslashRes=if(GivesBonusTest,if(or(json.get(json.get(MagicItemRes,roll.count),"slashRes")==3,(tslashRes+json.get(json.get(MagicItemRes,roll.count),"slashRes"))==3),3,max(json.get(json.get(MagicItemRes,roll.count),"slashRes"),tslashRes)),tslashRes)]
    [h:tacidRes=if(GivesBonusTest,if(or(json.get(json.get(MagicItemRes,roll.count),"acidRes")==3,(tacidRes+json.get(json.get(MagicItemRes,roll.count),"acidRes"))==3),3,max(json.get(json.get(MagicItemRes,roll.count),"acidRes"),tacidRes)),tacidRes)]
    [h:tcoldRes=if(GivesBonusTest,if(or(json.get(json.get(MagicItemRes,roll.count),"coldRes")==3,(tcoldRes+json.get(json.get(MagicItemRes,roll.count),"coldRes"))==3),3,max(json.get(json.get(MagicItemRes,roll.count),"coldRes"),tcoldRes)),tcoldRes)]
    [h:tfireRes=if(GivesBonusTest,if(or(json.get(json.get(MagicItemRes,roll.count),"fireRes")==3,(tfireRes+json.get(json.get(MagicItemRes,roll.count),"fireRes"))==3),3,max(json.get(json.get(MagicItemRes,roll.count),"fireRes"),tfireRes)),tfireRes)]
    [h:tforceRes=if(GivesBonusTest,if(or(json.get(json.get(MagicItemRes,roll.count),"forceRes")==3,(tforceRes+json.get(json.get(MagicItemRes,roll.count),"forceRes"))==3),3,max(json.get(json.get(MagicItemRes,roll.count),"forceRes"),tforceRes)),tforceRes)]
    [h:tlightRes=if(GivesBonusTest,if(or(json.get(json.get(MagicItemRes,roll.count),"lightRes")==3,(tlightRes+json.get(json.get(MagicItemRes,roll.count),"lightRes"))==3),3,max(json.get(json.get(MagicItemRes,roll.count),"lightRes"),tlightRes)),tlightRes)]
    [h:tnecroRes=if(GivesBonusTest,if(or(json.get(json.get(MagicItemRes,roll.count),"necroRes")==3,(tnecroRes+json.get(json.get(MagicItemRes,roll.count),"necroRes"))==3),3,max(json.get(json.get(MagicItemRes,roll.count),"necroRes"),tnecroRes)),tnecroRes)]
    [h:tpoisRes=if(GivesBonusTest,if(or(json.get(json.get(MagicItemRes,roll.count),"poisRes")==3,(tpoisRes+json.get(json.get(MagicItemRes,roll.count),"poisRes"))==3),3,max(json.get(json.get(MagicItemRes,roll.count),"poisRes"),tpoisRes)),tpoisRes)]
    [h:tpsychRes=if(GivesBonusTest,if(or(json.get(json.get(MagicItemRes,roll.count),"psychRes")==3,(tpsychRes+json.get(json.get(MagicItemRes,roll.count),"psychRes"))==3),3,max(json.get(json.get(MagicItemRes,roll.count),"psychRes"),tpsychRes)),tpsychRes)]
    [h:tradRes=if(GivesBonusTest,if(or(json.get(json.get(MagicItemRes,roll.count),"radRes")==3,(tradRes+json.get(json.get(MagicItemRes,roll.count),"radRes"))==3),3,max(json.get(json.get(MagicItemRes,roll.count),"radRes"),tradRes)),tradRes)]
    [h:tthunRes=if(GivesBonusTest,if(or(json.get(json.get(MagicItemRes,roll.count),"thunRes")==3,(tthunRes+json.get(json.get(MagicItemRes,roll.count),"thunRes"))==3),3,max(json.get(json.get(MagicItemRes,roll.count),"thunRes"),tthunRes)),tthunRes)]
    [h:tabjRes=if(GivesBonusTest,if(or(json.get(json.get(MagicItemRes,roll.count),"abjRes")==3,(tabjRes+json.get(json.get(MagicItemRes,roll.count),"abjRes"))==3),3,max(json.get(json.get(MagicItemRes,roll.count),"abjRes"),tabjRes)),tabjRes)]
    [h:tconjRes=if(GivesBonusTest,if(or(json.get(json.get(MagicItemRes,roll.count),"conjRes")==3,(tconjRes+json.get(json.get(MagicItemRes,roll.count),"conjRes"))==3),3,max(json.get(json.get(MagicItemRes,roll.count),"conjRes"),tconjRes)),tconjRes)]
    [h:tdivRes=if(GivesBonusTest,if(or(json.get(json.get(MagicItemRes,roll.count),"divRes")==3,(tdivRes+json.get(json.get(MagicItemRes,roll.count),"divRes"))==3),3,max(json.get(json.get(MagicItemRes,roll.count),"divRes"),tdivRes)),tdivRes)]
    [h:tenchRes=if(GivesBonusTest,if(or(json.get(json.get(MagicItemRes,roll.count),"enchRes")==3,(tenchRes+json.get(json.get(MagicItemRes,roll.count),"enchRes"))==3),3,max(json.get(json.get(MagicItemRes,roll.count),"enchRes"),tenchRes)),tenchRes)]
    [h:tevocRes=if(GivesBonusTest,if(or(json.get(json.get(MagicItemRes,roll.count),"evocRes")==3,(tevocRes+json.get(json.get(MagicItemRes,roll.count),"evocRes"))==3),3,max(json.get(json.get(MagicItemRes,roll.count),"evocRes"),tevocRes)),tevocRes)]
    [h:tillRes=if(GivesBonusTest,if(or(json.get(json.get(MagicItemRes,roll.count),"illRes")==3,(tillRes+json.get(json.get(MagicItemRes,roll.count),"illRes"))==3),3,max(json.get(json.get(MagicItemRes,roll.count),"illRes"),tillRes)),tillRes)]
    [h:tnecRes=if(GivesBonusTest,if(or(json.get(json.get(MagicItemRes,roll.count),"necRes")==3,(tnecRes+json.get(json.get(MagicItemRes,roll.count),"necRes"))==3),3,max(json.get(json.get(MagicItemRes,roll.count),"necRes"),tnecRes)),tnecRes)]
    [h:ttranRes=if(GivesBonusTest,if(or(json.get(json.get(MagicItemRes,roll.count),"tranRes")==3,(ttranRes+json.get(json.get(MagicItemRes,roll.count),"tranRes"))==3),3,max(json.get(json.get(MagicItemRes,roll.count),"tranRes"),ttranRes)),ttranRes)]
}]}]

[h,if(ImmunTest),CODE:{
    [h:tbludgImmun=json.get(MagicItemStats,"ibludgImmun")]
    [h:tpierceImmun=json.get(MagicItemStats,"ipierceImmun")]
    [h:tslashImmun=json.get(MagicItemStats,"islashImmun")]
    [h:tacidImmun=json.get(MagicItemStats,"iacidImmun")]
    [h:tcoldImmun=json.get(MagicItemStats,"icoldImmun")]
    [h:tfireImmun=json.get(MagicItemStats,"ifireImmun")]
    [h:tforceImmun=json.get(MagicItemStats,"iforceImmun")]
    [h:tlightImmun=json.get(MagicItemStats,"ilightImmun")]
    [h:tnecroImmun=json.get(MagicItemStats,"inecroImmun")]
    [h:tpoisImmun=json.get(MagicItemStats,"ipoisImmun")]
    [h:tpsychImmun=json.get(MagicItemStats,"ipsychImmun")]
    [h:tradImmun=json.get(MagicItemStats,"iradImmun")]
    [h:tthunImmun=json.get(MagicItemStats,"ithunImmun")]
    [h:tabjImmun=json.get(MagicItemStats,"iabjImmun")]
    [h:tconjImmun=json.get(MagicItemStats,"iconjImmun")]
    [h:tdivImmun=json.get(MagicItemStats,"idivImmun")]
    [h:tenchImmun=json.get(MagicItemStats,"ienchImmun")]
    [h:tevocImmun=json.get(MagicItemStats,"ievocImmun")]
    [h:tillImmun=json.get(MagicItemStats,"iillImmun")]
    [h:tnecImmun=json.get(MagicItemStats,"inecImmun")]
    [h:ttranImmun=json.get(MagicItemStats,"itransImmun")]
};{
    [h:tbludgImmun=0]
    [h:tpierceImmun=0]
    [h:tslashImmun=0]
    [h:tacidImmun=0]
    [h:tcoldImmun=0]
    [h:tfireImmun=0]
    [h:tforceImmun=0]
    [h:tlightImmun=0]
    [h:tnecroImmun=0]
    [h:tpoisImmun=0]
    [h:tpsychImmun=0]
    [h:tradImmun=0]
    [h:tthunImmun=0]
    [h:tabjImmun=0]
    [h:tconjImmun=0]
    [h:tdivImmun=0]
    [h:tenchImmun=0]
    [h:tevocImmun=0]
    [h:tillImmun=0]
    [h:tnecImmun=0]
    [h:ttranImmun=0]
[h,count(json.length(MagicItemNames)),CODE:{
    
    [h:GivesBonusTest=if(and(or(json.get(json.get(MagicItemEquipment,roll.count),"reqEquip")==0,json.get(json.get(MagicItemEquipment,roll.count),"isEquipped")==1),or(json.get(json.get(MagicItemActivation,roll.count),"reqActive")==0,json.get(json.get(MagicItemActivation,roll.count),"isActive")==1),or(json.get(json.get(MagicItemAttuned,roll.count),"reqAttunement")==0,json.get(json.get(MagicItemAttuned,roll.count),"slotAttunement")>=1)),1,0)]
    
    [h:tbludgImmun=if(GivesBonusTest,if(or(json.get(json.get(MagicItemImmun,roll.count),"bludgImmun")==3,(tbludgImmun+json.get(json.get(MagicItemImmun,roll.count),"bludgImmun"))==3),3,max(json.get(json.get(MagicItemImmun,roll.count),"bludgImmun"),tbludgImmun)),tbludgImmun)]
    [h:tpierceImmun=if(GivesBonusTest,if(or(json.get(json.get(MagicItemImmun,roll.count),"pierceImmun")==3,(tpierceImmun+json.get(json.get(MagicItemImmun,roll.count),"pierceImmun"))==3),3,max(json.get(json.get(MagicItemImmun,roll.count),"pierceImmun"),tpierceImmun)),tpierceImmun)]
    [h:tslashImmun=if(GivesBonusTest,if(or(json.get(json.get(MagicItemImmun,roll.count),"slashImmun")==3,(tslashImmun+json.get(json.get(MagicItemImmun,roll.count),"slashImmun"))==3),3,max(json.get(json.get(MagicItemImmun,roll.count),"slashImmun"),tslashImmun)),tslashImmun)]
    [h:tacidImmun=if(GivesBonusTest,if(or(json.get(json.get(MagicItemImmun,roll.count),"acidImmun")==3,(tacidImmun+json.get(json.get(MagicItemImmun,roll.count),"acidImmun"))==3),3,max(json.get(json.get(MagicItemImmun,roll.count),"acidImmun"),tacidImmun)),tacidImmun)]
    [h:tcoldImmun=if(GivesBonusTest,if(or(json.get(json.get(MagicItemImmun,roll.count),"coldImmun")==3,(tcoldImmun+json.get(json.get(MagicItemImmun,roll.count),"coldImmun"))==3),3,max(json.get(json.get(MagicItemImmun,roll.count),"coldImmun"),tcoldImmun)),tcoldImmun)]
    [h:tfireImmun=if(GivesBonusTest,if(or(json.get(json.get(MagicItemImmun,roll.count),"fireImmun")==3,(tfireImmun+json.get(json.get(MagicItemImmun,roll.count),"fireImmun"))==3),3,max(json.get(json.get(MagicItemImmun,roll.count),"fireImmun"),tfireImmun)),tfireImmun)]
    [h:tforceImmun=if(GivesBonusTest,if(or(json.get(json.get(MagicItemImmun,roll.count),"forceImmun")==3,(tforceImmun+json.get(json.get(MagicItemImmun,roll.count),"forceImmun"))==3),3,max(json.get(json.get(MagicItemImmun,roll.count),"forceImmun"),tforceImmun)),tforceImmun)]
    [h:tlightImmun=if(GivesBonusTest,if(or(json.get(json.get(MagicItemImmun,roll.count),"lightImmun")==3,(tlightImmun+json.get(json.get(MagicItemImmun,roll.count),"lightImmun"))==3),3,max(json.get(json.get(MagicItemImmun,roll.count),"lightImmun"),tlightImmun)),tlightImmun)]
    [h:tnecroImmun=if(GivesBonusTest,if(or(json.get(json.get(MagicItemImmun,roll.count),"necroImmun")==3,(tnecroImmun+json.get(json.get(MagicItemImmun,roll.count),"necroImmun"))==3),3,max(json.get(json.get(MagicItemImmun,roll.count),"necroImmun"),tnecroImmun)),tnecroImmun)]
    [h:tpoisImmun=if(GivesBonusTest,if(or(json.get(json.get(MagicItemImmun,roll.count),"poisImmun")==3,(tpoisImmun+json.get(json.get(MagicItemImmun,roll.count),"poisImmun"))==3),3,max(json.get(json.get(MagicItemImmun,roll.count),"poisImmun"),tpoisImmun)),tpoisImmun)]
    [h:tpsychImmun=if(GivesBonusTest,if(or(json.get(json.get(MagicItemImmun,roll.count),"psychImmun")==3,(tpsychImmun+json.get(json.get(MagicItemImmun,roll.count),"psychImmun"))==3),3,max(json.get(json.get(MagicItemImmun,roll.count),"psychImmun"),tpsychImmun)),tpsychImmun)]
    [h:tradImmun=if(GivesBonusTest,if(or(json.get(json.get(MagicItemImmun,roll.count),"radImmun")==3,(tradImmun+json.get(json.get(MagicItemImmun,roll.count),"radImmun"))==3),3,max(json.get(json.get(MagicItemImmun,roll.count),"radImmun"),tradImmun)),tradImmun)]
    [h:tthunImmun=if(GivesBonusTest,if(or(json.get(json.get(MagicItemImmun,roll.count),"thunImmun")==3,(tthunImmun+json.get(json.get(MagicItemImmun,roll.count),"thunImmun"))==3),3,max(json.get(json.get(MagicItemImmun,roll.count),"thunImmun"),tthunImmun)),tthunImmun)]
    [h:tabjImmun=if(GivesBonusTest,if(or(json.get(json.get(MagicItemImmun,roll.count),"abjImmun")==3,(tabjImmun+json.get(json.get(MagicItemImmun,roll.count),"abjImmun"))==3),3,max(json.get(json.get(MagicItemImmun,roll.count),"abjImmun"),tabjImmun)),tabjImmun)]
    [h:tconjImmun=if(GivesBonusTest,if(or(json.get(json.get(MagicItemImmun,roll.count),"conjImmun")==3,(tconjImmun+json.get(json.get(MagicItemImmun,roll.count),"conjImmun"))==3),3,max(json.get(json.get(MagicItemImmun,roll.count),"conjImmun"),tconjImmun)),tconjImmun)]
    [h:tdivImmun=if(GivesBonusTest,if(or(json.get(json.get(MagicItemImmun,roll.count),"divImmun")==3,(tdivImmun+json.get(json.get(MagicItemImmun,roll.count),"divImmun"))==3),3,max(json.get(json.get(MagicItemImmun,roll.count),"divImmun"),tdivImmun)),tdivImmun)]
    [h:tenchImmun=if(GivesBonusTest,if(or(json.get(json.get(MagicItemImmun,roll.count),"enchImmun")==3,(tenchImmun+json.get(json.get(MagicItemImmun,roll.count),"enchImmun"))==3),3,max(json.get(json.get(MagicItemImmun,roll.count),"enchImmun"),tenchImmun)),tenchImmun)]
    [h:tevocImmun=if(GivesBonusTest,if(or(json.get(json.get(MagicItemImmun,roll.count),"evocImmun")==3,(tevocImmun+json.get(json.get(MagicItemImmun,roll.count),"evocImmun"))==3),3,max(json.get(json.get(MagicItemImmun,roll.count),"evocImmun"),tevocImmun)),tevocImmun)]
    [h:tillImmun=if(GivesBonusTest,if(or(json.get(json.get(MagicItemImmun,roll.count),"illImmun")==3,(tillImmun+json.get(json.get(MagicItemImmun,roll.count),"illImmun"))==3),3,max(json.get(json.get(MagicItemImmun,roll.count),"illImmun"),tillImmun)),tillImmun)]
    [h:tnecImmun=if(GivesBonusTest,if(or(json.get(json.get(MagicItemImmun,roll.count),"necImmun")==3,(tnecImmun+json.get(json.get(MagicItemImmun,roll.count),"necImmun"))==3),3,max(json.get(json.get(MagicItemImmun,roll.count),"necImmun"),tnecImmun)),tnecImmun)]
    [h:ttranImmun=if(GivesBonusTest,if(or(json.get(json.get(MagicItemImmun,roll.count),"tranImmun")==3,(ttranImmun+json.get(json.get(MagicItemImmun,roll.count),"tranImmun"))==3),3,max(json.get(json.get(MagicItemImmun,roll.count),"tranImmun"),ttranImmun)),ttranImmun)]
}]}]

[h,if(AbsorbTest),CODE:{
    [h:tbludgAbsorb=json.get(MagicItemStats,"ibludgAbsorb")]
    [h:tpierceAbsorb=json.get(MagicItemStats,"ipierceAbsorb")]
    [h:tslashAbsorb=json.get(MagicItemStats,"islashAbsorb")]
    [h:tacidAbsorb=json.get(MagicItemStats,"iacidAbsorb")]
    [h:tcoldAbsorb=json.get(MagicItemStats,"icoldAbsorb")]
    [h:tfireAbsorb=json.get(MagicItemStats,"ifireAbsorb")]
    [h:tforceAbsorb=json.get(MagicItemStats,"iforceAbsorb")]
    [h:tlightAbsorb=json.get(MagicItemStats,"ilightAbsorb")]
    [h:tnecroAbsorb=json.get(MagicItemStats,"inecroAbsorb")]
    [h:tpoisAbsorb=json.get(MagicItemStats,"ipoisAbsorb")]
    [h:tpsychAbsorb=json.get(MagicItemStats,"ipsychAbsorb")]
    [h:tradAbsorb=json.get(MagicItemStats,"iradAbsorb")]
    [h:tthunAbsorb=json.get(MagicItemStats,"ithunAbsorb")]
    [h:tabjAbsorb=json.get(MagicItemStats,"iabjAbsorb")]
    [h:tconjAbsorb=json.get(MagicItemStats,"iconjAbsorb")]
    [h:tdivAbsorb=json.get(MagicItemStats,"idivAbsorb")]
    [h:tenchAbsorb=json.get(MagicItemStats,"ienchAbsorb")]
    [h:tevocAbsorb=json.get(MagicItemStats,"ievocAbsorb")]
    [h:tillAbsorb=json.get(MagicItemStats,"iillAbsorb")]
    [h:tnecAbsorb=json.get(MagicItemStats,"inecAbsorb")]
    [h:ttranAbsorb=json.get(MagicItemStats,"itransAbsorb")]
};{
    [h:tbludgAbsorb=0]
    [h:tpierceAbsorb=0]
    [h:tslashAbsorb=0]
    [h:tacidAbsorb=0]
    [h:tcoldAbsorb=0]
    [h:tfireAbsorb=0]
    [h:tforceAbsorb=0]
    [h:tlightAbsorb=0]
    [h:tnecroAbsorb=0]
    [h:tpoisAbsorb=0]
    [h:tpsychAbsorb=0]
    [h:tradAbsorb=0]
    [h:tthunAbsorb=0]
    [h:tabjAbsorb=0]
    [h:tconjAbsorb=0]
    [h:tdivAbsorb=0]
    [h:tenchAbsorb=0]
    [h:tevocAbsorb=0]
    [h:tillAbsorb=0]
    [h:tnecAbsorb=0]
    [h:ttranAbsorb=0]
[h,count(json.length(MagicItemNames)),CODE:{
    
    [h:GivesBonusTest=if(and(or(json.get(json.get(MagicItemEquipment,roll.count),"reqEquip")==0,json.get(json.get(MagicItemEquipment,roll.count),"isEquipped")==1),or(json.get(json.get(MagicItemActivation,roll.count),"reqActive")==0,json.get(json.get(MagicItemActivation,roll.count),"isActive")==1),or(json.get(json.get(MagicItemAttuned,roll.count),"reqAttunement")==0,json.get(json.get(MagicItemAttuned,roll.count),"slotAttunement")>=1)),1,0)]
    
    [h:tbludgAbsorb=if(GivesBonusTest,if(or(json.get(json.get(MagicItemAbsorb,roll.count),"bludgAbsorb")==3,(tbludgAbsorb+json.get(json.get(MagicItemAbsorb,roll.count),"bludgAbsorb"))==3),3,max(json.get(json.get(MagicItemAbsorb,roll.count),"bludgAbsorb"),tbludgAbsorb)),tbludgAbsorb)]
    [h:tpierceAbsorb=if(GivesBonusTest,if(or(json.get(json.get(MagicItemAbsorb,roll.count),"pierceAbsorb")==3,(tpierceAbsorb+json.get(json.get(MagicItemAbsorb,roll.count),"pierceAbsorb"))==3),3,max(json.get(json.get(MagicItemAbsorb,roll.count),"pierceAbsorb"),tpierceAbsorb)),tpierceAbsorb)]
    [h:tslashAbsorb=if(GivesBonusTest,if(or(json.get(json.get(MagicItemAbsorb,roll.count),"slashAbsorb")==3,(tslashAbsorb+json.get(json.get(MagicItemAbsorb,roll.count),"slashAbsorb"))==3),3,max(json.get(json.get(MagicItemAbsorb,roll.count),"slashAbsorb"),tslashAbsorb)),tslashAbsorb)]
    [h:tacidAbsorb=if(GivesBonusTest,if(or(json.get(json.get(MagicItemAbsorb,roll.count),"acidAbsorb")==3,(tacidAbsorb+json.get(json.get(MagicItemAbsorb,roll.count),"acidAbsorb"))==3),3,max(json.get(json.get(MagicItemAbsorb,roll.count),"acidAbsorb"),tacidAbsorb)),tacidAbsorb)]
    [h:tcoldAbsorb=if(GivesBonusTest,if(or(json.get(json.get(MagicItemAbsorb,roll.count),"coldAbsorb")==3,(tcoldAbsorb+json.get(json.get(MagicItemAbsorb,roll.count),"coldAbsorb"))==3),3,max(json.get(json.get(MagicItemAbsorb,roll.count),"coldAbsorb"),tcoldAbsorb)),tcoldAbsorb)]
    [h:tfireAbsorb=if(GivesBonusTest,if(or(json.get(json.get(MagicItemAbsorb,roll.count),"fireAbsorb")==3,(tfireAbsorb+json.get(json.get(MagicItemAbsorb,roll.count),"fireAbsorb"))==3),3,max(json.get(json.get(MagicItemAbsorb,roll.count),"fireAbsorb"),tfireAbsorb)),tfireAbsorb)]
    [h:tforceAbsorb=if(GivesBonusTest,if(or(json.get(json.get(MagicItemAbsorb,roll.count),"forceAbsorb")==3,(tforceAbsorb+json.get(json.get(MagicItemAbsorb,roll.count),"forceAbsorb"))==3),3,max(json.get(json.get(MagicItemAbsorb,roll.count),"forceAbsorb"),tforceAbsorb)),tforceAbsorb)]
    [h:tlightAbsorb=if(GivesBonusTest,if(or(json.get(json.get(MagicItemAbsorb,roll.count),"lightAbsorb")==3,(tlightAbsorb+json.get(json.get(MagicItemAbsorb,roll.count),"lightAbsorb"))==3),3,max(json.get(json.get(MagicItemAbsorb,roll.count),"lightAbsorb"),tlightAbsorb)),tlightAbsorb)]
    [h:tnecroAbsorb=if(GivesBonusTest,if(or(json.get(json.get(MagicItemAbsorb,roll.count),"necroAbsorb")==3,(tnecroAbsorb+json.get(json.get(MagicItemAbsorb,roll.count),"necroAbsorb"))==3),3,max(json.get(json.get(MagicItemAbsorb,roll.count),"necroAbsorb"),tnecroAbsorb)),tnecroAbsorb)]
    [h:tpoisAbsorb=if(GivesBonusTest,if(or(json.get(json.get(MagicItemAbsorb,roll.count),"poisAbsorb")==3,(tpoisAbsorb+json.get(json.get(MagicItemAbsorb,roll.count),"poisAbsorb"))==3),3,max(json.get(json.get(MagicItemAbsorb,roll.count),"poisAbsorb"),tpoisAbsorb)),tpoisAbsorb)]
    [h:tpsychAbsorb=if(GivesBonusTest,if(or(json.get(json.get(MagicItemAbsorb,roll.count),"psychAbsorb")==3,(tpsychAbsorb+json.get(json.get(MagicItemAbsorb,roll.count),"psychAbsorb"))==3),3,max(json.get(json.get(MagicItemAbsorb,roll.count),"psychAbsorb"),tpsychAbsorb)),tpsychAbsorb)]
    [h:tradAbsorb=if(GivesBonusTest,if(or(json.get(json.get(MagicItemAbsorb,roll.count),"radAbsorb")==3,(tradAbsorb+json.get(json.get(MagicItemAbsorb,roll.count),"radAbsorb"))==3),3,max(json.get(json.get(MagicItemAbsorb,roll.count),"radAbsorb"),tradAbsorb)),tradAbsorb)]
    [h:tthunAbsorb=if(GivesBonusTest,if(or(json.get(json.get(MagicItemAbsorb,roll.count),"thunAbsorb")==3,(tthunAbsorb+json.get(json.get(MagicItemAbsorb,roll.count),"thunAbsorb"))==3),3,max(json.get(json.get(MagicItemAbsorb,roll.count),"thunAbsorb"),tthunAbsorb)),tthunAbsorb)]
    [h:tabjAbsorb=if(GivesBonusTest,if(or(json.get(json.get(MagicItemAbsorb,roll.count),"abjAbsorb")==3,(tabjAbsorb+json.get(json.get(MagicItemAbsorb,roll.count),"abjAbsorb"))==3),3,max(json.get(json.get(MagicItemAbsorb,roll.count),"abjAbsorb"),tabjAbsorb)),tabjAbsorb)]
    [h:tconjAbsorb=if(GivesBonusTest,if(or(json.get(json.get(MagicItemAbsorb,roll.count),"conjAbsorb")==3,(tconjAbsorb+json.get(json.get(MagicItemAbsorb,roll.count),"conjAbsorb"))==3),3,max(json.get(json.get(MagicItemAbsorb,roll.count),"conjAbsorb"),tconjAbsorb)),tconjAbsorb)]
    [h:tdivAbsorb=if(GivesBonusTest,if(or(json.get(json.get(MagicItemAbsorb,roll.count),"divAbsorb")==3,(tdivAbsorb+json.get(json.get(MagicItemAbsorb,roll.count),"divAbsorb"))==3),3,max(json.get(json.get(MagicItemAbsorb,roll.count),"divAbsorb"),tdivAbsorb)),tdivAbsorb)]
    [h:tenchAbsorb=if(GivesBonusTest,if(or(json.get(json.get(MagicItemAbsorb,roll.count),"enchAbsorb")==3,(tenchAbsorb+json.get(json.get(MagicItemAbsorb,roll.count),"enchAbsorb"))==3),3,max(json.get(json.get(MagicItemAbsorb,roll.count),"enchAbsorb"),tenchAbsorb)),tenchAbsorb)]
    [h:tevocAbsorb=if(GivesBonusTest,if(or(json.get(json.get(MagicItemAbsorb,roll.count),"evocAbsorb")==3,(tevocAbsorb+json.get(json.get(MagicItemAbsorb,roll.count),"evocAbsorb"))==3),3,max(json.get(json.get(MagicItemAbsorb,roll.count),"evocAbsorb"),tevocAbsorb)),tevocAbsorb)]
    [h:tillAbsorb=if(GivesBonusTest,if(or(json.get(json.get(MagicItemAbsorb,roll.count),"illAbsorb")==3,(tillAbsorb+json.get(json.get(MagicItemAbsorb,roll.count),"illAbsorb"))==3),3,max(json.get(json.get(MagicItemAbsorb,roll.count),"illAbsorb"),tillAbsorb)),tillAbsorb)]
    [h:tnecAbsorb=if(GivesBonusTest,if(or(json.get(json.get(MagicItemAbsorb,roll.count),"necAbsorb")==3,(tnecAbsorb+json.get(json.get(MagicItemAbsorb,roll.count),"necAbsorb"))==3),3,max(json.get(json.get(MagicItemAbsorb,roll.count),"necAbsorb"),tnecAbsorb)),tnecAbsorb)]
    [h:ttranAbsorb=if(GivesBonusTest,if(or(json.get(json.get(MagicItemAbsorb,roll.count),"tranAbsorb")==3,(ttranAbsorb+json.get(json.get(MagicItemAbsorb,roll.count),"tranAbsorb"))==3),3,max(json.get(json.get(MagicItemAbsorb,roll.count),"tranAbsorb"),ttranAbsorb)),ttranAbsorb)]
}]}]

[h,if(DRTest),CODE:{
    [h:tbludgDR=json.get(MagicItemStats,"ibludgDR")]
    [h:tpierceDR=json.get(MagicItemStats,"ipierceDR")]
    [h:tslashDR=json.get(MagicItemStats,"islashDR")]
    [h:tacidDR=json.get(MagicItemStats,"iacidDR")]
    [h:tcoldDR=json.get(MagicItemStats,"icoldDR")]
    [h:tfireDR=json.get(MagicItemStats,"ifireDR")]
    [h:tforceDR=json.get(MagicItemStats,"iforceDR")]
    [h:tlightDR=json.get(MagicItemStats,"ilightDR")]
    [h:tnecroDR=json.get(MagicItemStats,"inecroDR")]
    [h:tpoisDR=json.get(MagicItemStats,"ipoisDR")]
    [h:tpsychDR=json.get(MagicItemStats,"ipsychDR")]
    [h:tradDR=json.get(MagicItemStats,"iradDR")]
    [h:tthunDR=json.get(MagicItemStats,"ithunDR")]
    [h:tabjDR=json.get(MagicItemStats,"iabjDR")]
    [h:tconjDR=json.get(MagicItemStats,"iconjDR")]
    [h:tdivDR=json.get(MagicItemStats,"idivDR")]
    [h:tenchDR=json.get(MagicItemStats,"ienchDR")]
    [h:tevocDR=json.get(MagicItemStats,"ievocDR")]
    [h:tillDR=json.get(MagicItemStats,"iillDR")]
    [h:tnecDR=json.get(MagicItemStats,"inecDR")]
    [h:ttranDR=json.get(MagicItemStats,"itransDR")]
    [h:tbludgDRPhys=json.get(MagicItemStats,"ibludgDRPhys")]
    [h:tpierceDRPhys=json.get(MagicItemStats,"ipierceDRPhys")]
    [h:tslashDRPhys=json.get(MagicItemStats,"islashDRPhys")]
    [h:tacidDRPhys=json.get(MagicItemStats,"iacidDRPhys")]
    [h:tcoldDRPhys=json.get(MagicItemStats,"icoldDRPhys")]
    [h:tfireDRPhys=json.get(MagicItemStats,"ifireDRPhys")]
    [h:tforceDRPhys=json.get(MagicItemStats,"iforceDRPhys")]
    [h:tlightDRPhys=json.get(MagicItemStats,"ilightDRPhys")]
    [h:tnecroDRPhys=json.get(MagicItemStats,"inecroDRPhys")]
    [h:tpoisDRPhys=json.get(MagicItemStats,"ipoisDRPhys")]
    [h:tpsychDRPhys=json.get(MagicItemStats,"ipsychDRPhys")]
    [h:tradDRPhys=json.get(MagicItemStats,"iradDRPhys")]
    [h:tthunDRPhys=json.get(MagicItemStats,"ithunDRPhys")]
    [h:tabjDRPhys=json.get(MagicItemStats,"iabjDRPhys")]
    [h:tconjDRPhys=json.get(MagicItemStats,"iconjDRPhys")]
    [h:tdivDRPhys=json.get(MagicItemStats,"idivDRPhys")]
    [h:tenchDRPhys=json.get(MagicItemStats,"ienchDRPhys")]
    [h:tevocDRPhys=json.get(MagicItemStats,"ievocDRPhys")]
    [h:tillDRPhys=json.get(MagicItemStats,"iillDRPhys")]
    [h:tnecDRPhys=json.get(MagicItemStats,"inecDRPhys")]
    [h:ttranDRPhys=json.get(MagicItemStats,"itransDRPhys")]
    [h:tbludgDRMag=json.get(MagicItemStats,"ibludgDRMag")]
    [h:tpierceDRMag=json.get(MagicItemStats,"ipierceDRMag")]
    [h:tslashDRMag=json.get(MagicItemStats,"islashDRMag")]
    [h:tacidDRMag=json.get(MagicItemStats,"iacidDRMag")]
    [h:tcoldDRMag=json.get(MagicItemStats,"icoldDRMag")]
    [h:tfireDRMag=json.get(MagicItemStats,"ifireDRMag")]
    [h:tforceDRMag=json.get(MagicItemStats,"iforceDRMag")]
    [h:tlightDRMag=json.get(MagicItemStats,"ilightDRMag")]
    [h:tnecroDRMag=json.get(MagicItemStats,"inecroDRMag")]
    [h:tpoisDRMag=json.get(MagicItemStats,"ipoisDRMag")]
    [h:tpsychDRMag=json.get(MagicItemStats,"ipsychDRMag")]
    [h:tradDRMag=json.get(MagicItemStats,"iradDRMag")]
    [h:tthunDRMag=json.get(MagicItemStats,"ithunDRMag")]
    [h:tabjDRMag=json.get(MagicItemStats,"iabjDRMag")]
    [h:tconjDRMag=json.get(MagicItemStats,"iconjDRMag")]
    [h:tdivDRMag=json.get(MagicItemStats,"idivDRMag")]
    [h:tenchDRMag=json.get(MagicItemStats,"ienchDRMag")]
    [h:tevocDRMag=json.get(MagicItemStats,"ievocDRMag")]
    [h:tillDRMag=json.get(MagicItemStats,"iillDRMag")]
    [h:tnecDRMag=json.get(MagicItemStats,"inecDRMag")]
    [h:ttranDRMag=json.get(MagicItemStats,"itransDRMag")]

};{
    [h:tbludgDR=0]
    [h:tpierceDR=0]
    [h:tslashDR=0]
    [h:tacidDR=0]
    [h:tcoldDR=0]
    [h:tfireDR=0]
    [h:tforceDR=0]
    [h:tlightDR=0]
    [h:tnecroDR=0]
    [h:tpoisDR=0]
    [h:tpsychDR=0]
    [h:tradDR=0]
    [h:tthunDR=0]
    [h:tabjDR=0]
    [h:tconjDR=0]
    [h:tdivDR=0]
    [h:tenchDR=0]
    [h:tevocDR=0]
    [h:tillDR=0]
    [h:tnecDR=0]
    [h:ttranDR=0]
    [h:tbludgDRPhys=0]
    [h:tpierceDRPhys=0]
    [h:tslashDRPhys=0]
    [h:tacidDRPhys=0]
    [h:tcoldDRPhys=0]
    [h:tfireDRPhys=0]
    [h:tforceDRPhys=0]
    [h:tlightDRPhys=0]
    [h:tnecroDRPhys=0]
    [h:tpoisDRPhys=0]
    [h:tpsychDRPhys=0]
    [h:tradDRPhys=0]
    [h:tthunDRPhys=0]
    [h:tabjDRPhys=0]
    [h:tconjDRPhys=0]
    [h:tdivDRPhys=0]
    [h:tenchDRPhys=0]
    [h:tevocDRPhys=0]
    [h:tillDRPhys=0]
    [h:tnecDRPhys=0]
    [h:ttranDRPhys=0]
    [h:tbludgDRMag=0]
    [h:tpierceDRMag=0]
    [h:tslashDRMag=0]
    [h:tacidDRMag=0]
    [h:tcoldDRMag=0]
    [h:tfireDRMag=0]
    [h:tforceDRMag=0]
    [h:tlightDRMag=0]
    [h:tnecroDRMag=0]
    [h:tpoisDRMag=0]
    [h:tpsychDRMag=0]
    [h:tradDRMag=0]
    [h:tthunDRMag=0]
    [h:tabjDRMag=0]
    [h:tconjDRMag=0]
    [h:tdivDRMag=0]
    [h:tenchDRMag=0]
    [h:tevocDRMag=0]
    [h:tillDRMag=0]
    [h:tnecDRMag=0]
    [h:ttranDRMag=0]

[h,count(json.length(MagicItemNames)),CODE:{
    
    [h:GivesBonusTest=if(and(or(json.get(json.get(MagicItemEquipment,roll.count),"reqEquip")==0,json.get(json.get(MagicItemEquipment,roll.count),"isEquipped")==1),or(json.get(json.get(MagicItemActivation,roll.count),"reqActive")==0,json.get(json.get(MagicItemActivation,roll.count),"isActive")==1),or(json.get(json.get(MagicItemAttuned,roll.count),"reqAttunement")==0,json.get(json.get(MagicItemAttuned,roll.count),"slotAttunement")>=1)),1,0)]
    
    [h:tbludgDR=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"bludgDR")==3,(tbludgDR+json.get(json.get(MagicItemDRamnt,roll.count),"bludgDRamnt")),tbludgDR),tbludgDR)]
    [h:tpierceDR=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"pierceDR")==3,(tpierceDR+json.get(json.get(MagicItemDRamnt,roll.count),"pierceDRamnt")),tpierceDR),tpierceDR)]
    [h:tslashDR=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"slashDR")==3,(tslashDR+json.get(json.get(MagicItemDRamnt,roll.count),"slashDRamnt")),tslashDR),tslashDR)]
    [h:tacidDR=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"acidDR")==3,(tacidDR+json.get(json.get(MagicItemDRamnt,roll.count),"acidDRamnt")),tacidDR),tacidDR)]
    [h:tcoldDR=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"coldDR")==3,(tcoldDR+json.get(json.get(MagicItemDRamnt,roll.count),"coldDRamnt")),tcoldDR),tcoldDR)]
    [h:tfireDR=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"fireDR")==3,(tfireDR+json.get(json.get(MagicItemDRamnt,roll.count),"fireDRamnt")),tfireDR),tfireDR)]
    [h:tforceDR=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"forceDR")==3,(tforceDR+json.get(json.get(MagicItemDRamnt,roll.count),"forceDRamnt")),tforceDR),tforceDR)]
    [h:tlightDR=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"lightDR")==3,(tlightDR+json.get(json.get(MagicItemDRamnt,roll.count),"lightDRamnt")),tlightDR),tlightDR)]
    [h:tnecroDR=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"necroDR")==3,(tnecroDR+json.get(json.get(MagicItemDRamnt,roll.count),"necroDRamnt")),tnecroDR),tnecroDR)]
    [h:tpoisDR=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"poisDR")==3,(tpoisDR+json.get(json.get(MagicItemDRamnt,roll.count),"poisDRamnt")),tpoisDR),tpoisDR)]
    [h:tpsychDR=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"psychDR")==3,(tpsychDR+json.get(json.get(MagicItemDRamnt,roll.count),"psychDRamnt")),tpsychDR),tpsychDR)]
    [h:tradDR=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"radDR")==3,(tradDR+json.get(json.get(MagicItemDRamnt,roll.count),"radDRamnt")),tradDR),tradDR)]
    [h:tthunDR=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"thunDR")==3,(tthunDR+json.get(json.get(MagicItemDRamnt,roll.count),"thunDRamnt")),tthunDR),tthunDR)]
    [h:tabjDR=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"abjDR")==3,(tabjDR+json.get(json.get(MagicItemDRamnt,roll.count),"abjDRamnt")),tabjDR),tabjDR)]
    [h:tconjDR=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"conjDR")==3,(tconjDR+json.get(json.get(MagicItemDRamnt,roll.count),"conjDRamnt")),tconjDR),tconjDR)]
    [h:tdivDR=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"divDR")==3,(tdivDR+json.get(json.get(MagicItemDRamnt,roll.count),"divDRamnt")),tdivDR),tdivDR)]
    [h:tenchDR=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"enchDR")==3,(tenchDR+json.get(json.get(MagicItemDRamnt,roll.count),"enchDRamnt")),tenchDR),tenchDR)]
    [h:tevocDR=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"evocDR")==3,(tevocDR+json.get(json.get(MagicItemDRamnt,roll.count),"evocDRamnt")),tevocDR),tevocDR)]
    [h:tillDR=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"illDR")==3,(tillDR+json.get(json.get(MagicItemDRamnt,roll.count),"illDRamnt")),tillDR),tillDR)]
    [h:tnecDR=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"necDR")==3,(tnecDR+json.get(json.get(MagicItemDRamnt,roll.count),"necDRamnt")),tnecDR),tnecDR)]
    [h:ttranDR=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"tranDR")==3,(ttranDR+json.get(json.get(MagicItemDRamnt,roll.count),"tranDRamnt")),ttranDR),ttranDR)]
    
    [h:tbludgDRMag=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"bludgDR")==2,(tbludgDRMag+json.get(json.get(MagicItemDRamnt,roll.count),"bludgDRamnt")),tbludgDRMag),tbludgDRMag)]
    [h:tpierceDRMag=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"pierceDR")==2,(tpierceDRMag+json.get(json.get(MagicItemDRamnt,roll.count),"pierceDRamnt")),tpierceDRMag),tpierceDRMag)]
    [h:tslashDRMag=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"slashDR")==2,(tslashDRMag+json.get(json.get(MagicItemDRamnt,roll.count),"slashDRamnt")),tslashDRMag),tslashDRMag)]
    [h:tacidDRMag=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"acidDR")==2,(tacidDRMag+json.get(json.get(MagicItemDRamnt,roll.count),"acidDRamnt")),tacidDRMag),tacidDRMag)]
    [h:tcoldDRMag=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"coldDR")==2,(tcoldDRMag+json.get(json.get(MagicItemDRamnt,roll.count),"coldDRamnt")),tcoldDRMag),tcoldDRMag)]
    [h:tfireDRMag=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"fireDR")==2,(tfireDRMag+json.get(json.get(MagicItemDRamnt,roll.count),"fireDRamnt")),tfireDRMag),tfireDRMag)]
    [h:tforceDRMag=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"forceDR")==2,(tforceDRMag+json.get(json.get(MagicItemDRamnt,roll.count),"forceDRamnt")),tforceDRMag),tforceDRMag)]
    [h:tlightDRMag=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"lightDR")==2,(tlightDRMag+json.get(json.get(MagicItemDRamnt,roll.count),"lightDRamnt")),tlightDRMag),tlightDRMag)]
    [h:tnecroDRMag=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"necroDR")==2,(tnecroDRMag+json.get(json.get(MagicItemDRamnt,roll.count),"necroDRamnt")),tnecroDRMag),tnecroDRMag)]
    [h:tpoisDRMag=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"poisDR")==2,(tpoisDRMag+json.get(json.get(MagicItemDRamnt,roll.count),"poisDRamnt")),tpoisDRMag),tpoisDRMag)]
    [h:tpsychDRMag=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"psychDR")==2,(tpsychDRMag+json.get(json.get(MagicItemDRamnt,roll.count),"psychDRamnt")),tpsychDRMag),tpsychDRMag)]
    [h:tradDRMag=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"radDR")==2,(tradDRMag+json.get(json.get(MagicItemDRamnt,roll.count),"radDRamnt")),tradDRMag),tradDRMag)]
    [h:tthunDRMag=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"thunDR")==2,(tthunDRMag+json.get(json.get(MagicItemDRamnt,roll.count),"thunDRamnt")),tthunDRMag),tthunDRMag)]
    [h:tabjDRMag=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"abjDR")==2,(tabjDRMag+json.get(json.get(MagicItemDRamnt,roll.count),"abjDRamnt")),tabjDRMag),tabjDRMag)]
    [h:tconjDRMag=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"conjDR")==2,(tconjDRMag+json.get(json.get(MagicItemDRamnt,roll.count),"conjDRamnt")),tconjDRMag),tconjDRMag)]
    [h:tdivDRMag=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"divDR")==2,(tdivDRMag+json.get(json.get(MagicItemDRamnt,roll.count),"divDRamnt")),tdivDRMag),tdivDRMag)]
    [h:tenchDRMag=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"enchDR")==2,(tenchDRMag+json.get(json.get(MagicItemDRamnt,roll.count),"enchDRamnt")),tenchDRMag),tenchDRMag)]
    [h:tevocDRMag=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"evocDR")==2,(tevocDRMag+json.get(json.get(MagicItemDRamnt,roll.count),"evocDRamnt")),tevocDRMag),tevocDRMag)]
    [h:tillDRMag=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"illDR")==2,(tillDRMag+json.get(json.get(MagicItemDRamnt,roll.count),"illDRamnt")),tillDRMag),tillDRMag)]
    [h:tnecDRMag=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"necDR")==2,(tnecDRMag+json.get(json.get(MagicItemDRamnt,roll.count),"necDRamnt")),tnecDRMag),tnecDRMag)]
    [h:ttranDRMag=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"tranDR")==2,(ttranDRMag+json.get(json.get(MagicItemDRamnt,roll.count),"tranDRamnt")),ttranDRMag),ttranDRMag)]
    
    [h:tbludgDRPhys=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"bludgDR")==1,(tbludgDRPhys+json.get(json.get(MagicItemDRamnt,roll.count),"bludgDRamnt")),tbludgDRPhys),tbludgDRPhys)]
    [h:tpierceDRPhys=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"pierceDR")==1,(tpierceDRPhys+json.get(json.get(MagicItemDRamnt,roll.count),"pierceDRamnt")),tpierceDRPhys),tpierceDRPhys)]
    [h:tslashDRPhys=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"slashDR")==1,(tslashDRPhys+json.get(json.get(MagicItemDRamnt,roll.count),"slashDRamnt")),tslashDRPhys),tslashDRPhys)]
    [h:tacidDRPhys=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"acidDR")==1,(tacidDRPhys+json.get(json.get(MagicItemDRamnt,roll.count),"acidDRamnt")),tacidDRPhys),tacidDRPhys)]
    [h:tcoldDRPhys=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"coldDR")==1,(tcoldDRPhys+json.get(json.get(MagicItemDRamnt,roll.count),"coldDRamnt")),tcoldDRPhys),tcoldDRPhys)]
    [h:tfireDRPhys=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"fireDR")==1,(tfireDRPhys+json.get(json.get(MagicItemDRamnt,roll.count),"fireDRamnt")),tfireDRPhys),tfireDRPhys)]
    [h:tforceDRPhys=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"forceDR")==1,(tforceDRPhys+json.get(json.get(MagicItemDRamnt,roll.count),"forceDRamnt")),tforceDRPhys),tforceDRPhys)]
    [h:tlightDRPhys=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"lightDR")==1,(tlightDRPhys+json.get(json.get(MagicItemDRamnt,roll.count),"lightDRamnt")),tlightDRPhys),tlightDRPhys)]
    [h:tnecroDRPhys=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"necroDR")==1,(tnecroDRPhys+json.get(json.get(MagicItemDRamnt,roll.count),"necroDRamnt")),tnecroDRPhys),tnecroDRPhys)]
    [h:tpoisDRPhys=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"poisDR")==1,(tpoisDRPhys+json.get(json.get(MagicItemDRamnt,roll.count),"poisDRamnt")),tpoisDRPhys),tpoisDRPhys)]
    [h:tpsychDRPhys=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"psychDR")==1,(tpsychDRPhys+json.get(json.get(MagicItemDRamnt,roll.count),"psychDRamnt")),tpsychDRPhys),tpsychDRPhys)]
    [h:tradDRPhys=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"radDR")==1,(tradDRPhys+json.get(json.get(MagicItemDRamnt,roll.count),"radDRamnt")),tradDRPhys),tradDRPhys)]
    [h:tthunDRPhys=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"thunDR")==1,(tthunDRPhys+json.get(json.get(MagicItemDRamnt,roll.count),"thunDRamnt")),tthunDRPhys),tthunDRPhys)]
    [h:tabjDRPhys=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"abjDR")==1,(tabjDRPhys+json.get(json.get(MagicItemDRamnt,roll.count),"abjDRamnt")),tabjDRPhys),tabjDRPhys)]
    [h:tconjDRPhys=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"conjDR")==1,(tconjDRPhys+json.get(json.get(MagicItemDRamnt,roll.count),"conjDRamnt")),tconjDRPhys),tconjDRPhys)]
    [h:tdivDRPhys=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"divDR")==1,(tdivDRPhys+json.get(json.get(MagicItemDRamnt,roll.count),"divDRamnt")),tdivDRPhys),tdivDRPhys)]
    [h:tenchDRPhys=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"enchDR")==1,(tenchDRPhys+json.get(json.get(MagicItemDRamnt,roll.count),"enchDRamnt")),tenchDRPhys),tenchDRPhys)]
    [h:tevocDRPhys=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"evocDR")==1,(tevocDRPhys+json.get(json.get(MagicItemDRamnt,roll.count),"evocDRamnt")),tevocDRPhys),tevocDRPhys)]
    [h:tillDRPhys=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"illDR")==1,(tillDRPhys+json.get(json.get(MagicItemDRamnt,roll.count),"illDRamnt")),tillDRPhys),tillDRPhys)]
    [h:tnecDRPhys=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"necDR")==1,(tnecDRPhys+json.get(json.get(MagicItemDRamnt,roll.count),"necDRamnt")),tnecDRPhys),tnecDRPhys)]
    [h:ttranDRPhys=if(GivesBonusTest,if(json.get(json.get(MagicItemDR,roll.count),"tranDR")==1,(ttranDRPhys+json.get(json.get(MagicItemDRamnt,roll.count),"tranDRamnt")),ttranDRPhys),ttranDRPhys)]

}]}]

[h,if(CondImmunTest),CODE:{
    [h:tblindCondImmun=json.get(MagicItemStats,"iblindCondImmun")]
    [h:tcharmCondImmun=json.get(MagicItemStats,"icharmCondImmun")]
    [h:tconfuseCondImmun=json.get(MagicItemStats,"iconfuseCondImmun")]
    [h:tdeafCondImmun=json.get(MagicItemStats,"ideafCondImmun")]
    [h:tdiseaseCondImmun=json.get(MagicItemStats,"idiseaseCondImmun")]
    [h:tfrightCondImmun=json.get(MagicItemStats,"ifrightCondImmun")]
    [h:tgrappleCondImmun=json.get(MagicItemStats,"igrappleCondImmun")]
    [h:tincapCondImmun=json.get(MagicItemStats,"iincapCondImmun")]
    [h:tparaCondImmun=json.get(MagicItemStats,"iparaCondImmun")]
    [h:tpetrifyCondImmun=json.get(MagicItemStats,"ipetrifyCondImmun")]
    [h:tpoisCondImmun=json.get(MagicItemStats,"ipoisCondImmun")]
    [h:tproneCondImmun=json.get(MagicItemStats,"iproneCondImmun")]
    [h:trestrCondImmun=json.get(MagicItemStats,"irestrCondImmun")]
    [h:tstunCondImmun=json.get(MagicItemStats,"istunCondImmun")]
    [h:tsurpCondImmun=json.get(MagicItemStats,"isurpCondImmun")]
    [h:tturnCondImmun=json.get(MagicItemStats,"iturnCondImmun")]
    [h:tunconcCondImmun=json.get(MagicItemStats,"iunconcCondImmun")]
    };{
    [h:tblindCondImmun=0]
    [h:tcharmCondImmun=0]
    [h:tconfuseCondImmun=0]
    [h:tdeafCondImmun=0]
    [h:tdiseaseCondImmun=0]
    [h:tfrightCondImmun=0]
    [h:tgrappleCondImmun=0]
    [h:tincapCondImmun=0]
    [h:tparaCondImmun=0]
    [h:tpetrifyCondImmun=0]
    [h:tpoisCondImmun=0]
    [h:tproneCondImmun=0]
    [h:trestrCondImmun=0]
    [h:tstunCondImmun=0]
    [h:tsurpCondImmun=0]
    [h:tturnCondImmun=0]
    [h:tunconcCondImmun=0]
[h,count(json.length(MagicItemNames)),CODE:{
    
    [h:GivesBonusTest=if(and(or(json.get(json.get(MagicItemEquipment,roll.count),"reqEquip")==0,json.get(json.get(MagicItemEquipment,roll.count),"isEquipped")==1),or(json.get(json.get(MagicItemActivation,roll.count),"reqActive")==0,json.get(json.get(MagicItemActivation,roll.count),"isActive")==1),or(json.get(json.get(MagicItemAttuned,roll.count),"reqAttunement")==0,json.get(json.get(MagicItemAttuned,roll.count),"slotAttunement")>=1)),1,0)]
    
    [h:tblindCondImmun=if(GivesBonusTest,max(json.get(json.get(MagicItemCondImmun,roll.count),"blindCondImmun"),tblindCondImmun),tblindCondImmun)]
    [h:tcharmCondImmun=if(GivesBonusTest,max(json.get(json.get(MagicItemCondImmun,roll.count),"charmCondImmun"),tcharmCondImmun),tcharmCondImmun)]
    [h:tconfuseCondImmun=if(GivesBonusTest,max(json.get(json.get(MagicItemCondImmun,roll.count),"confuseCondImmun"),tconfuseCondImmun),tconfuseCondImmun)]
    [h:tdeafCondImmun=if(GivesBonusTest,max(json.get(json.get(MagicItemCondImmun,roll.count),"deafCondImmun"),tdeafCondImmun),tdeafCondImmun)]
    [h:tdiseaseCondImmun=if(GivesBonusTest,max(json.get(json.get(MagicItemCondImmun,roll.count),"diseaseCondImmun"),tdiseaseCondImmun),tdiseaseCondImmun)]
    [h:tfrightCondImmun=if(GivesBonusTest,max(json.get(json.get(MagicItemCondImmun,roll.count),"frightCondImmun"),tfrightCondImmun),tfrightCondImmun)]
    [h:tgrappleCondImmun=if(GivesBonusTest,max(json.get(json.get(MagicItemCondImmun,roll.count),"grappleCondImmun"),tgrappleCondImmun),tgrappleCondImmun)]
    [h:tincapCondImmun=if(GivesBonusTest,max(json.get(json.get(MagicItemCondImmun,roll.count),"incapCondImmun"),tincapCondImmun),tincapCondImmun)]
    [h:tparaCondImmun=if(GivesBonusTest,max(json.get(json.get(MagicItemCondImmun,roll.count),"paraCondImmun"),tparaCondImmun),tparaCondImmun)]
    [h:tpetrifyCondImmun=if(GivesBonusTest,max(json.get(json.get(MagicItemCondImmun,roll.count),"petrifyCondImmun"),tpetrifyCondImmun),tpetrifyCondImmun)]
    [h:tpoisCondImmun=if(GivesBonusTest,max(json.get(json.get(MagicItemCondImmun,roll.count),"poisCondImmun"),tpoisCondImmun),tpoisCondImmun)]
    [h:tproneCondImmun=if(GivesBonusTest,max(json.get(json.get(MagicItemCondImmun,roll.count),"proneCondImmun"),tproneCondImmun),tproneCondImmun)]
    [h:trestrCondImmun=if(GivesBonusTest,max(json.get(json.get(MagicItemCondImmun,roll.count),"restrCondImmun"),trestrCondImmun),trestrCondImmun)]
    [h:tstunCondImmun=if(GivesBonusTest,max(json.get(json.get(MagicItemCondImmun,roll.count),"stunCondImmun"),tstunCondImmun),tstunCondImmun)]
    [h:tsurpCondImmun=if(GivesBonusTest,max(json.get(json.get(MagicItemCondImmun,roll.count),"surpCondImmun"),tsurpCondImmun),tsurpCondImmun)]
    [h:tturnCondImmun=if(GivesBonusTest,max(json.get(json.get(MagicItemCondImmun,roll.count),"turnCondImmun"),tturnCondImmun),tturnCondImmun)]
    [h:tunconcCondImmun=if(GivesBonusTest,max(json.get(json.get(MagicItemCondImmun,roll.count),"unconcCondImmun"),tunconcCondImmun),tunconcCondImmun)]}]}]

[h,if(CheckAdvTest),CODE:{
    [h:tStrCheckAdv=json.get(MagicItemStats,"iStrCheckAdv")]
    [h:tDexCheckAdv=json.get(MagicItemStats,"iDexCheckAdv")]
    [h:tConCheckAdv=json.get(MagicItemStats,"iConCheckAdv")]
    [h:tIntCheckAdv=json.get(MagicItemStats,"iIntCheckAdv")]
    [h:tWisCheckAdv=json.get(MagicItemStats,"iWisCheckAdv")]
    [h:tChaCheckAdv=json.get(MagicItemStats,"iChaCheckAdv")]
    [h:tAcbCheckAdv=json.get(MagicItemStats,"iAcbCheckAdv")]
    [h:tAnHCheckAdv=json.get(MagicItemStats,"iAnHCheckAdv")]
    [h:tArcCheckAdv=json.get(MagicItemStats,"iArcCheckAdv")]
    [h:tAthCheckAdv=json.get(MagicItemStats,"iAthCheckAdv")]
    [h:tDcpCheckAdv=json.get(MagicItemStats,"iDcpCheckAdv")]
    [h:tHstCheckAdv=json.get(MagicItemStats,"iHstCheckAdv")]
    [h:tInsCheckAdv=json.get(MagicItemStats,"iInsCheckAdv")]
    [h:tImdCheckAdv=json.get(MagicItemStats,"iImdCheckAdv")]
    [h:tInvCheckAdv=json.get(MagicItemStats,"iInvCheckAdv")]
    [h:tMedCheckAdv=json.get(MagicItemStats,"iMedCheckAdv")]
    [h:tNtrCheckAdv=json.get(MagicItemStats,"iNtrCheckAdv")]
    [h:tPcpCheckAdv=json.get(MagicItemStats,"iPcpCheckAdv")]
    [h:tPfmCheckAdv=json.get(MagicItemStats,"iPfmCheckAdv")]
    [h:tPrsCheckAdv=json.get(MagicItemStats,"iPrsCheckAdv")]
    [h:tRlgCheckAdv=json.get(MagicItemStats,"iRlgCheckAdv")]
    [h:tSoHCheckAdv=json.get(MagicItemStats,"iSoHCheckAdv")]
    [h:tStlCheckAdv=json.get(MagicItemStats,"iStlCheckAdv")]
    [h:tSrvCheckAdv=json.get(MagicItemStats,"iSrvCheckAdv")]
    };{
    [h:tStrCheckAdv=""]
    [h:tDexCheckAdv=""]
    [h:tConCheckAdv=""]
    [h:tIntCheckAdv=""]
    [h:tWisCheckAdv=""]
    [h:tChaCheckAdv=""]
    [h:tAcbCheckAdv=""]
    [h:tAnHCheckAdv=""]
    [h:tArcCheckAdv=""]
    [h:tAthCheckAdv=""]
    [h:tDcpCheckAdv=""]
    [h:tHstCheckAdv=""]
    [h:tInsCheckAdv=""]
    [h:tImdCheckAdv=""]
    [h:tInvCheckAdv=""]
    [h:tMedCheckAdv=""]
    [h:tNtrCheckAdv=""]
    [h:tPcpCheckAdv=""]
    [h:tPfmCheckAdv=""]
    [h:tPrsCheckAdv=""]
    [h:tRlgCheckAdv=""]
    [h:tSoHCheckAdv=""]
    [h:tStlCheckAdv=""]
    [h:tSrvCheckAdv=""]
[h,count(json.length(MagicItemNames)),CODE:{
    
    [h:GivesBonusTest=if(and(or(json.get(json.get(MagicItemEquipment,roll.count),"reqEquip")==0,json.get(json.get(MagicItemEquipment,roll.count),"isEquipped")==1),or(json.get(json.get(MagicItemActivation,roll.count),"reqActive")==0,json.get(json.get(MagicItemActivation,roll.count),"isActive")==1),or(json.get(json.get(MagicItemAttuned,roll.count),"reqAttunement")==0,json.get(json.get(MagicItemAttuned,roll.count),"slotAttunement")>=1)),1,0)]
    
    [h:tStrCheckAdv=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckAdv,roll.count),"StrCheckAdv")),json.append(tStrCheckAdv,json.get(MagicItemNames,roll.count)),tStrCheckAdv)]
    [h:tDexCheckAdv=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckAdv,roll.count),"DexCheckAdv")),json.append(tDexCheckAdv,json.get(MagicItemNames,roll.count)),tDexCheckAdv)]
    [h:tConCheckAdv=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckAdv,roll.count),"ConCheckAdv")),json.append(tConCheckAdv,json.get(MagicItemNames,roll.count)),tConCheckAdv)]
    [h:tIntCheckAdv=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckAdv,roll.count),"IntCheckAdv")),json.append(tIntCheckAdv,json.get(MagicItemNames,roll.count)),tIntCheckAdv)]
    [h:tWisCheckAdv=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckAdv,roll.count),"WisCheckAdv")),json.append(tWisCheckAdv,json.get(MagicItemNames,roll.count)),tWisCheckAdv)]
    [h:tChaCheckAdv=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckAdv,roll.count),"ChaCheckAdv")),json.append(tChaCheckAdv,json.get(MagicItemNames,roll.count)),tChaCheckAdv)]
    [h:tAcbCheckAdv=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckAdv,roll.count),"AcbCheckAdv")),json.append(tAcbCheckAdv,json.get(MagicItemNames,roll.count)),tAcbCheckAdv)]
    [h:tAnHCheckAdv=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckAdv,roll.count),"AnHCheckAdv")),json.append(tAnHCheckAdv,json.get(MagicItemNames,roll.count)),tAnHCheckAdv)]
    [h:tArcCheckAdv=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckAdv,roll.count),"ArcCheckAdv")),json.append(tArcCheckAdv,json.get(MagicItemNames,roll.count)),tArcCheckAdv)]
    [h:tAthCheckAdv=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckAdv,roll.count),"AthCheckAdv")),json.append(tAthCheckAdv,json.get(MagicItemNames,roll.count)),tAthCheckAdv)]
    [h:tDcpCheckAdv=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckAdv,roll.count),"DcpCheckAdv")),json.append(tDcpCheckAdv,json.get(MagicItemNames,roll.count)),tDcpCheckAdv)]
    [h:tHstCheckAdv=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckAdv,roll.count),"HstCheckAdv")),json.append(tHstCheckAdv,json.get(MagicItemNames,roll.count)),tHstCheckAdv)]
    [h:tInsCheckAdv=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckAdv,roll.count),"InsCheckAdv")),json.append(tInsCheckAdv,json.get(MagicItemNames,roll.count)),tInsCheckAdv)]
    [h:tImdCheckAdv=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckAdv,roll.count),"ImdCheckAdv")),json.append(tImdCheckAdv,json.get(MagicItemNames,roll.count)),tImdCheckAdv)]
    [h:tInvCheckAdv=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckAdv,roll.count),"InvCheckAdv")),json.append(tInvCheckAdv,json.get(MagicItemNames,roll.count)),tInvCheckAdv)]
    [h:tMedCheckAdv=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckAdv,roll.count),"MedCheckAdv")),json.append(tMedCheckAdv,json.get(MagicItemNames,roll.count)),tMedCheckAdv)]
    [h:tNtrCheckAdv=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckAdv,roll.count),"NtrCheckAdv")),json.append(tNtrCheckAdv,json.get(MagicItemNames,roll.count)),tNtrCheckAdv)]
    [h:tPcpCheckAdv=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckAdv,roll.count),"PcpCheckAdv")),json.append(tPcpCheckAdv,json.get(MagicItemNames,roll.count)),tPcpCheckAdv)]
    [h:tPfmCheckAdv=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckAdv,roll.count),"PfmCheckAdv")),json.append(tPfmCheckAdv,json.get(MagicItemNames,roll.count)),tPfmCheckAdv)]
    [h:tPrsCheckAdv=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckAdv,roll.count),"PrsCheckAdv")),json.append(tPrsCheckAdv,json.get(MagicItemNames,roll.count)),tPrsCheckAdv)]
    [h:tRlgCheckAdv=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckAdv,roll.count),"RlgCheckAdv")),json.append(tRlgCheckAdv,json.get(MagicItemNames,roll.count)),tRlgCheckAdv)]
    [h:tSoHCheckAdv=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckAdv,roll.count),"SoHCheckAdv")),json.append(tSoHCheckAdv,json.get(MagicItemNames,roll.count)),tSoHCheckAdv)]
    [h:tStlCheckAdv=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckAdv,roll.count),"StlCheckAdv")),json.append(tStlCheckAdv,json.get(MagicItemNames,roll.count)),tStlCheckAdv)]
    [h:tSrvCheckAdv=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckAdv,roll.count),"SrvCheckAdv")),json.append(tSrvCheckAdv,json.get(MagicItemNames,roll.count)),tSrvCheckAdv)]
}]
    }]
    
[h,if(CheckDisTest),CODE:{
    [h:tStrCheckDis=json.get(MagicItemStats,"iStrCheckDis")]
    [h:tDexCheckDis=json.get(MagicItemStats,"iDexCheckDis")]
    [h:tConCheckDis=json.get(MagicItemStats,"iConCheckDis")]
    [h:tIntCheckDis=json.get(MagicItemStats,"iIntCheckDis")]
    [h:tWisCheckDis=json.get(MagicItemStats,"iWisCheckDis")]
    [h:tChaCheckDis=json.get(MagicItemStats,"iChaCheckDis")]
    [h:tAcbCheckDis=json.get(MagicItemStats,"iAcbCheckDis")]
    [h:tAnHCheckDis=json.get(MagicItemStats,"iAnHCheckDis")]
    [h:tArcCheckDis=json.get(MagicItemStats,"iArcCheckDis")]
    [h:tAthCheckDis=json.get(MagicItemStats,"iAthCheckDis")]
    [h:tDcpCheckDis=json.get(MagicItemStats,"iDcpCheckDis")]
    [h:tHstCheckDis=json.get(MagicItemStats,"iHstCheckDis")]
    [h:tInsCheckDis=json.get(MagicItemStats,"iInsCheckDis")]
    [h:tImdCheckDis=json.get(MagicItemStats,"iImdCheckDis")]
    [h:tInvCheckDis=json.get(MagicItemStats,"iInvCheckDis")]
    [h:tMedCheckDis=json.get(MagicItemStats,"iMedCheckDis")]
    [h:tNtrCheckDis=json.get(MagicItemStats,"iNtrCheckDis")]
    [h:tPcpCheckDis=json.get(MagicItemStats,"iPcpCheckDis")]
    [h:tPfmCheckDis=json.get(MagicItemStats,"iPfmCheckDis")]
    [h:tPrsCheckDis=json.get(MagicItemStats,"iPrsCheckDis")]
    [h:tRlgCheckDis=json.get(MagicItemStats,"iRlgCheckDis")]
    [h:tSoHCheckDis=json.get(MagicItemStats,"iSoHCheckDis")]
    [h:tStlCheckDis=json.get(MagicItemStats,"iStlCheckDis")]
    [h:tSrvCheckDis=json.get(MagicItemStats,"iSrvCheckDis")]
    };{
    [h:tStrCheckDis=""]
    [h:tDexCheckDis=""]
    [h:tConCheckDis=""]
    [h:tIntCheckDis=""]
    [h:tWisCheckDis=""]
    [h:tChaCheckDis=""]
    [h:tAcbCheckDis=""]
    [h:tAnHCheckDis=""]
    [h:tArcCheckDis=""]
    [h:tAthCheckDis=""]
    [h:tDcpCheckDis=""]
    [h:tHstCheckDis=""]
    [h:tInsCheckDis=""]
    [h:tImdCheckDis=""]
    [h:tInvCheckDis=""]
    [h:tMedCheckDis=""]
    [h:tNtrCheckDis=""]
    [h:tPcpCheckDis=""]
    [h:tPfmCheckDis=""]
    [h:tPrsCheckDis=""]
    [h:tRlgCheckDis=""]
    [h:tSoHCheckDis=""]
    [h:tStlCheckDis=""]
    [h:tSrvCheckDis=""]
[h,count(json.length(MagicItemNames)),CODE:{
    
    [h:GivesBonusTest=if(and(or(json.get(json.get(MagicItemEquipment,roll.count),"reqEquip")==0,json.get(json.get(MagicItemEquipment,roll.count),"isEquipped")==1),or(json.get(json.get(MagicItemActivation,roll.count),"reqActive")==0,json.get(json.get(MagicItemActivation,roll.count),"isActive")==1),or(json.get(json.get(MagicItemAttuned,roll.count),"reqAttunement")==0,json.get(json.get(MagicItemAttuned,roll.count),"slotAttunement")>=1)),1,0)]
    
    [h:tStrCheckDis=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckDis,roll.count),"StrCheckDis")),json.append(tStrCheckDis,json.get(MagicItemNames,roll.count)),tStrCheckDis)]
    [h:tDexCheckDis=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckDis,roll.count),"DexCheckDis")),json.append(tDexCheckDis,json.get(MagicItemNames,roll.count)),tDexCheckDis)]
    [h:tConCheckDis=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckDis,roll.count),"ConCheckDis")),json.append(tConCheckDis,json.get(MagicItemNames,roll.count)),tConCheckDis)]
    [h:tIntCheckDis=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckDis,roll.count),"IntCheckDis")),json.append(tIntCheckDis,json.get(MagicItemNames,roll.count)),tIntCheckDis)]
    [h:tWisCheckDis=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckDis,roll.count),"WisCheckDis")),json.append(tWisCheckDis,json.get(MagicItemNames,roll.count)),tWisCheckDis)]
    [h:tChaCheckDis=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckDis,roll.count),"ChaCheckDis")),json.append(tChaCheckDis,json.get(MagicItemNames,roll.count)),tChaCheckDis)]
    [h:tAcbCheckDis=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckDis,roll.count),"AcbCheckDis")),json.append(tAcbCheckDis,json.get(MagicItemNames,roll.count)),tAcbCheckDis)]
    [h:tAnHCheckDis=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckDis,roll.count),"AnHCheckDis")),json.append(tAnHCheckDis,json.get(MagicItemNames,roll.count)),tAnHCheckDis)]
    [h:tArcCheckDis=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckDis,roll.count),"ArcCheckDis")),json.append(tArcCheckDis,json.get(MagicItemNames,roll.count)),tArcCheckDis)]
    [h:tAthCheckDis=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckDis,roll.count),"AthCheckDis")),json.append(tAthCheckDis,json.get(MagicItemNames,roll.count)),tAthCheckDis)]
    [h:tDcpCheckDis=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckDis,roll.count),"DcpCheckDis")),json.append(tDcpCheckDis,json.get(MagicItemNames,roll.count)),tDcpCheckDis)]
    [h:tHstCheckDis=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckDis,roll.count),"HstCheckDis")),json.append(tHstCheckDis,json.get(MagicItemNames,roll.count)),tHstCheckDis)]
    [h:tInsCheckDis=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckDis,roll.count),"InsCheckDis")),json.append(tInsCheckDis,json.get(MagicItemNames,roll.count)),tInsCheckDis)]
    [h:tImdCheckDis=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckDis,roll.count),"ImdCheckDis")),json.append(tImdCheckDis,json.get(MagicItemNames,roll.count)),tImdCheckDis)]
    [h:tInvCheckDis=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckDis,roll.count),"InvCheckDis")),json.append(tInvCheckDis,json.get(MagicItemNames,roll.count)),tInvCheckDis)]
    [h:tMedCheckDis=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckDis,roll.count),"MedCheckDis")),json.append(tMedCheckDis,json.get(MagicItemNames,roll.count)),tMedCheckDis)]
    [h:tNtrCheckDis=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckDis,roll.count),"NtrCheckDis")),json.append(tNtrCheckDis,json.get(MagicItemNames,roll.count)),tNtrCheckDis)]
    [h:tPcpCheckDis=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckDis,roll.count),"PcpCheckDis")),json.append(tPcpCheckDis,json.get(MagicItemNames,roll.count)),tPcpCheckDis)]
    [h:tPfmCheckDis=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckDis,roll.count),"PfmCheckDis")),json.append(tPfmCheckDis,json.get(MagicItemNames,roll.count)),tPfmCheckDis)]
    [h:tPrsCheckDis=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckDis,roll.count),"PrsCheckDis")),json.append(tPrsCheckDis,json.get(MagicItemNames,roll.count)),tPrsCheckDis)]
    [h:tRlgCheckDis=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckDis,roll.count),"RlgCheckDis")),json.append(tRlgCheckDis,json.get(MagicItemNames,roll.count)),tRlgCheckDis)]
    [h:tSoHCheckDis=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckDis,roll.count),"SoHCheckDis")),json.append(tSoHCheckDis,json.get(MagicItemNames,roll.count)),tSoHCheckDis)]
    [h:tStlCheckDis=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckDis,roll.count),"StlCheckDis")),json.append(tStlCheckDis,json.get(MagicItemNames,roll.count)),tStlCheckDis)]
    [h:tSrvCheckDis=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckDis,roll.count),"SrvCheckDis")),json.append(tSrvCheckDis,json.get(MagicItemNames,roll.count)),tSrvCheckDis)]
}]}]
   
[h,if(CheckBonusTest),CODE:{
    [h:tStrCheckBonus=json.get(MagicItemStats,"iStrCheckBonus")]
    [h:tDexCheckBonus=json.get(MagicItemStats,"iDexCheckBonus")]
    [h:tConCheckBonus=json.get(MagicItemStats,"iConCheckBonus")]
    [h:tIntCheckBonus=json.get(MagicItemStats,"iIntCheckBonus")]
    [h:tWisCheckBonus=json.get(MagicItemStats,"iWisCheckBonus")]
    [h:tChaCheckBonus=json.get(MagicItemStats,"iChaCheckBonus")]
    [h:tAcbCheckBonus=json.get(MagicItemStats,"iAcbCheckBonus")]
    [h:tAnHCheckBonus=json.get(MagicItemStats,"iAnHCheckBonus")]
    [h:tArcCheckBonus=json.get(MagicItemStats,"iArcCheckBonus")]
    [h:tAthCheckBonus=json.get(MagicItemStats,"iAthCheckBonus")]
    [h:tDcpCheckBonus=json.get(MagicItemStats,"iDcpCheckBonus")]
    [h:tHstCheckBonus=json.get(MagicItemStats,"iHstCheckBonus")]
    [h:tInsCheckBonus=json.get(MagicItemStats,"iInsCheckBonus")]
    [h:tImdCheckBonus=json.get(MagicItemStats,"iImdCheckBonus")]
    [h:tInvCheckBonus=json.get(MagicItemStats,"iInvCheckBonus")]
    [h:tMedCheckBonus=json.get(MagicItemStats,"iMedCheckBonus")]
    [h:tNtrCheckBonus=json.get(MagicItemStats,"iNtrCheckBonus")]
    [h:tPcpCheckBonus=json.get(MagicItemStats,"iPcpCheckBonus")]
    [h:tPfmCheckBonus=json.get(MagicItemStats,"iPfmCheckBonus")]
    [h:tPrsCheckBonus=json.get(MagicItemStats,"iPrsCheckBonus")]
    [h:tRlgCheckBonus=json.get(MagicItemStats,"iRlgCheckBonus")]
    [h:tSoHCheckBonus=json.get(MagicItemStats,"iSoHCheckBonus")]
    [h:tStlCheckBonus=json.get(MagicItemStats,"iStlCheckBonus")]
    [h:tSrvCheckBonus=json.get(MagicItemStats,"iSrvCheckBonus")]
    };{
    [h:tStrCheckBonus=""]
    [h:tDexCheckBonus=""]
    [h:tConCheckBonus=""]
    [h:tIntCheckBonus=""]
    [h:tWisCheckBonus=""]
    [h:tChaCheckBonus=""]
    [h:tAcbCheckBonus=""]
    [h:tAnHCheckBonus=""]
    [h:tArcCheckBonus=""]
    [h:tAthCheckBonus=""]
    [h:tDcpCheckBonus=""]
    [h:tHstCheckBonus=""]
    [h:tInsCheckBonus=""]
    [h:tImdCheckBonus=""]
    [h:tInvCheckBonus=""]
    [h:tMedCheckBonus=""]
    [h:tNtrCheckBonus=""]
    [h:tPcpCheckBonus=""]
    [h:tPfmCheckBonus=""]
    [h:tPrsCheckBonus=""]
    [h:tRlgCheckBonus=""]
    [h:tSoHCheckBonus=""]
    [h:tStlCheckBonus=""]
    [h:tSrvCheckBonus=""]

[h,count(json.length(MagicItemNames)),CODE:{
    
    [h:GivesBonusTest=if(and(or(json.get(json.get(MagicItemEquipment,roll.count),"reqEquip")==0,json.get(json.get(MagicItemEquipment,roll.count),"isEquipped")==1),or(json.get(json.get(MagicItemActivation,roll.count),"reqActive")==0,json.get(json.get(MagicItemActivation,roll.count),"isActive")==1),or(json.get(json.get(MagicItemAttuned,roll.count),"reqAttunement")==0,json.get(json.get(MagicItemAttuned,roll.count),"slotAttunement")>=1)),1,0)]
    
    [h:tStrCheckBonus=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckBonus,roll.count),"StrCheckBonus")!=0),json.append(tStrCheckBonus,json.get(json.get(MagicItemCheckBonus,roll.count),"StrCheckBonus")),tStrCheckBonus)]
    [h:tDexCheckBonus=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckBonus,roll.count),"DexCheckBonus")!=0),json.append(tDexCheckBonus,json.get(json.get(MagicItemCheckBonus,roll.count),"DexCheckBonus")),tDexCheckBonus)]
    [h:tConCheckBonus=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckBonus,roll.count),"ConCheckBonus")!=0),json.append(tConCheckBonus,json.get(json.get(MagicItemCheckBonus,roll.count),"ConCheckBonus")),tConCheckBonus)]
    [h:tIntCheckBonus=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckBonus,roll.count),"IntCheckBonus")!=0),json.append(tIntCheckBonus,json.get(json.get(MagicItemCheckBonus,roll.count),"IntCheckBonus")),tIntCheckBonus)]
    [h:tWisCheckBonus=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckBonus,roll.count),"WisCheckBonus")!=0),json.append(tWisCheckBonus,json.get(json.get(MagicItemCheckBonus,roll.count),"WisCheckBonus")),tWisCheckBonus)]
    [h:tChaCheckBonus=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckBonus,roll.count),"ChaCheckBonus")!=0),json.append(tChaCheckBonus,json.get(json.get(MagicItemCheckBonus,roll.count),"ChaCheckBonus")),tChaCheckBonus)]
    [h:tAcbCheckBonus=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckBonus,roll.count),"AcbCheckBonus")!=0),json.append(tAcbCheckBonus,json.get(json.get(MagicItemCheckBonus,roll.count),"AcbCheckBonus")),tAcbCheckBonus)]
    [h:tAnHCheckBonus=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckBonus,roll.count),"AnHCheckBonus")!=0),json.append(tAnHCheckBonus,json.get(json.get(MagicItemCheckBonus,roll.count),"AnHCheckBonus")),tAnHCheckBonus)]
    [h:tArcCheckBonus=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckBonus,roll.count),"ArcCheckBonus")!=0),json.append(tArcCheckBonus,json.get(json.get(MagicItemCheckBonus,roll.count),"ArcCheckBonus")),tArcCheckBonus)]
    [h:tAthCheckBonus=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckBonus,roll.count),"AthCheckBonus")!=0),json.append(tAthCheckBonus,json.get(json.get(MagicItemCheckBonus,roll.count),"AthCheckBonus")),tAthCheckBonus)]
    [h:tDcpCheckBonus=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckBonus,roll.count),"DcpCheckBonus")!=0),json.append(tDcpCheckBonus,json.get(json.get(MagicItemCheckBonus,roll.count),"DcpCheckBonus")),tDcpCheckBonus)]
    [h:tHstCheckBonus=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckBonus,roll.count),"HstCheckBonus")!=0),json.append(tHstCheckBonus,json.get(json.get(MagicItemCheckBonus,roll.count),"HstCheckBonus")),tHstCheckBonus)]
    [h:tInsCheckBonus=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckBonus,roll.count),"InsCheckBonus")!=0),json.append(tInsCheckBonus,json.get(json.get(MagicItemCheckBonus,roll.count),"InsCheckBonus")),tInsCheckBonus)]
    [h:tImdCheckBonus=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckBonus,roll.count),"ImdCheckBonus")!=0),json.append(tImdCheckBonus,json.get(json.get(MagicItemCheckBonus,roll.count),"ImdCheckBonus")),tImdCheckBonus)]
    [h:tInvCheckBonus=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckBonus,roll.count),"InvCheckBonus")!=0),json.append(tInvCheckBonus,json.get(json.get(MagicItemCheckBonus,roll.count),"InvCheckBonus")),tInvCheckBonus)]
    [h:tMedCheckBonus=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckBonus,roll.count),"MedCheckBonus")!=0),json.append(tMedCheckBonus,json.get(json.get(MagicItemCheckBonus,roll.count),"MedCheckBonus")),tMedCheckBonus)]
    [h:tNtrCheckBonus=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckBonus,roll.count),"NtrCheckBonus")!=0),json.append(tNtrCheckBonus,json.get(json.get(MagicItemCheckBonus,roll.count),"NtrCheckBonus")),tNtrCheckBonus)]
    [h:tPcpCheckBonus=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckBonus,roll.count),"PcpCheckBonus")!=0),json.append(tPcpCheckBonus,json.get(json.get(MagicItemCheckBonus,roll.count),"PcpCheckBonus")),tPcpCheckBonus)]
    [h:tPfmCheckBonus=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckBonus,roll.count),"PfmCheckBonus")!=0),json.append(tPfmCheckBonus,json.get(json.get(MagicItemCheckBonus,roll.count),"PfmCheckBonus")),tPfmCheckBonus)]
    [h:tPrsCheckBonus=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckBonus,roll.count),"PrsCheckBonus")!=0),json.append(tPrsCheckBonus,json.get(json.get(MagicItemCheckBonus,roll.count),"PrsCheckBonus")),tPrsCheckBonus)]
    [h:tRlgCheckBonus=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckBonus,roll.count),"RlgCheckBonus")!=0),json.append(tRlgCheckBonus,json.get(json.get(MagicItemCheckBonus,roll.count),"RlgCheckBonus")),tRlgCheckBonus)]
    [h:tSoHCheckBonus=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckBonus,roll.count),"SoHCheckBonus")!=0),json.append(tSoHCheckBonus,json.get(json.get(MagicItemCheckBonus,roll.count),"SoHCheckBonus")),tSoHCheckBonus)]
    [h:tStlCheckBonus=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckBonus,roll.count),"StlCheckBonus")!=0),json.append(tStlCheckBonus,json.get(json.get(MagicItemCheckBonus,roll.count),"StlCheckBonus")),tStlCheckBonus)]
    [h:tSrvCheckBonus=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckBonus,roll.count),"SrvCheckBonus")!=0),json.append(tSrvCheckBonus,json.get(json.get(MagicItemCheckBonus,roll.count),"SrvCheckBonus")),tSrvCheckBonus)]
}]}]
    
[h,if(CheckProfTest),CODE:{
    [h:tStrCheckProf=json.get(MagicItemStats,"iStrCheckProf")]
    [h:tDexCheckProf=json.get(MagicItemStats,"iDexCheckProf")]
    [h:tConCheckProf=json.get(MagicItemStats,"iConCheckProf")]
    [h:tIntCheckProf=json.get(MagicItemStats,"iIntCheckProf")]
    [h:tWisCheckProf=json.get(MagicItemStats,"iWisCheckProf")]
    [h:tChaCheckProf=json.get(MagicItemStats,"iChaCheckProf")]
    [h:tAcbCheckProf=json.get(MagicItemStats,"iAcbCheckProf")]
    [h:tAnHCheckProf=json.get(MagicItemStats,"iAnHCheckProf")]
    [h:tArcCheckProf=json.get(MagicItemStats,"iArcCheckProf")]
    [h:tAthCheckProf=json.get(MagicItemStats,"iAthCheckProf")]
    [h:tDcpCheckProf=json.get(MagicItemStats,"iDcpCheckProf")]
    [h:tHstCheckProf=json.get(MagicItemStats,"iHstCheckProf")]
    [h:tInsCheckProf=json.get(MagicItemStats,"iInsCheckProf")]
    [h:tImdCheckProf=json.get(MagicItemStats,"iImdCheckProf")]
    [h:tInvCheckProf=json.get(MagicItemStats,"iInvCheckProf")]
    [h:tMedCheckProf=json.get(MagicItemStats,"iMedCheckProf")]
    [h:tNtrCheckProf=json.get(MagicItemStats,"iNtrCheckProf")]
    [h:tPcpCheckProf=json.get(MagicItemStats,"iPcpCheckProf")]
    [h:tPfmCheckProf=json.get(MagicItemStats,"iPfmCheckProf")]
    [h:tPrsCheckProf=json.get(MagicItemStats,"iPrsCheckProf")]
    [h:tRlgCheckProf=json.get(MagicItemStats,"iRlgCheckProf")]
    [h:tSoHCheckProf=json.get(MagicItemStats,"iSoHCheckProf")]
    [h:tStlCheckProf=json.get(MagicItemStats,"iStlCheckProf")]
    [h:tSrvCheckProf=json.get(MagicItemStats,"iSrvCheckProf")]
    };{
    [h:tStrCheckProf=0]
    [h:tDexCheckProf=0]
    [h:tConCheckProf=0]
    [h:tIntCheckProf=0]
    [h:tWisCheckProf=0]
    [h:tChaCheckProf=0]
    [h:tAcbCheckProf=0]
    [h:tAnHCheckProf=0]
    [h:tArcCheckProf=0]
    [h:tAthCheckProf=0]
    [h:tDcpCheckProf=0]
    [h:tHstCheckProf=0]
    [h:tInsCheckProf=0]
    [h:tImdCheckProf=0]
    [h:tInvCheckProf=0]
    [h:tMedCheckProf=0]
    [h:tNtrCheckProf=0]
    [h:tPcpCheckProf=0]
    [h:tPfmCheckProf=0]
    [h:tPrsCheckProf=0]
    [h:tRlgCheckProf=0]
    [h:tSoHCheckProf=0]
    [h:tStlCheckProf=0]
    [h:tSrvCheckProf=0]
[h,count(json.length(MagicItemNames)),CODE:{
    
    [h:GivesBonusTest=if(and(or(json.get(json.get(MagicItemEquipment,roll.count),"reqEquip")==0,json.get(json.get(MagicItemEquipment,roll.count),"isEquipped")==1),or(json.get(json.get(MagicItemActivation,roll.count),"reqActive")==0,json.get(json.get(MagicItemActivation,roll.count),"isActive")==1),or(json.get(json.get(MagicItemAttuned,roll.count),"reqAttunement")==0,json.get(json.get(MagicItemAttuned,roll.count),"slotAttunement")>=1)),1,0)]
    
    [h:tStrCheckProf=if(GivesBonusTest,if(json.get(json.get(MagicItemCheckProf,roll.count),"StrCheckProf")==3,if(tStrCheckProf>0,tStrCheckProf,json.get(json.get(MagicItemCheckProf,roll.count),"StrCheckProf")),json.get(json.get(MagicItemCheckProf,roll.count),"StrCheckProf")+tStrCheckProf),tStrCheckProf)]
    [h:tDexCheckProf=if(GivesBonusTest,if(json.get(json.get(MagicItemCheckProf,roll.count),"DexCheckProf")==3,if(tDexCheckProf>0,tDexCheckProf,json.get(json.get(MagicItemCheckProf,roll.count),"DexCheckProf")),json.get(json.get(MagicItemCheckProf,roll.count),"DexCheckProf")+tDexCheckProf),tDexCheckProf)]
    [h:tConCheckProf=if(GivesBonusTest,if(json.get(json.get(MagicItemCheckProf,roll.count),"ConCheckProf")==3,if(tConCheckProf>0,tConCheckProf,json.get(json.get(MagicItemCheckProf,roll.count),"ConCheckProf")),json.get(json.get(MagicItemCheckProf,roll.count),"ConCheckProf")+tConCheckProf),tConCheckProf)]
    [h:tIntCheckProf=if(GivesBonusTest,if(json.get(json.get(MagicItemCheckProf,roll.count),"IntCheckProf")==3,if(tIntCheckProf>0,tIntCheckProf,json.get(json.get(MagicItemCheckProf,roll.count),"IntCheckProf")),json.get(json.get(MagicItemCheckProf,roll.count),"IntCheckProf")+tIntCheckProf),tIntCheckProf)]
    [h:tWisCheckProf=if(GivesBonusTest,if(json.get(json.get(MagicItemCheckProf,roll.count),"WisCheckProf")==3,if(tWisCheckProf>0,tWisCheckProf,json.get(json.get(MagicItemCheckProf,roll.count),"WisCheckProf")),json.get(json.get(MagicItemCheckProf,roll.count),"WisCheckProf")+tWisCheckProf),tWisCheckProf)]
    [h:tChaCheckProf=if(GivesBonusTest,if(json.get(json.get(MagicItemCheckProf,roll.count),"ChaCheckProf")==3,if(tChaCheckProf>0,tChaCheckProf,json.get(json.get(MagicItemCheckProf,roll.count),"ChaCheckProf")),json.get(json.get(MagicItemCheckProf,roll.count),"ChaCheckProf")+tChaCheckProf),tChaCheckProf)]
    [h:tAcbCheckProf=if(GivesBonusTest,if(json.get(json.get(MagicItemCheckProf,roll.count),"AcbCheckProf")==3,if(tAcbCheckProf>0,tAcbCheckProf,json.get(json.get(MagicItemCheckProf,roll.count),"AcbCheckProf")),json.get(json.get(MagicItemCheckProf,roll.count),"AcbCheckProf")+tAcbCheckProf),tAcbCheckProf)]
    [h:tAnHCheckProf=if(GivesBonusTest,if(json.get(json.get(MagicItemCheckProf,roll.count),"AnHCheckProf")==3,if(tAnHCheckProf>0,tAnHCheckProf,json.get(json.get(MagicItemCheckProf,roll.count),"AnHCheckProf")),json.get(json.get(MagicItemCheckProf,roll.count),"AnHCheckProf")+tAnHCheckProf),tAnHCheckProf)]
    [h:tArcCheckProf=if(GivesBonusTest,if(json.get(json.get(MagicItemCheckProf,roll.count),"ArcCheckProf")==3,if(tArcCheckProf>0,tArcCheckProf,json.get(json.get(MagicItemCheckProf,roll.count),"ArcCheckProf")),json.get(json.get(MagicItemCheckProf,roll.count),"ArcCheckProf")+tArcCheckProf),tArcCheckProf)]
    [h:tAthCheckProf=if(GivesBonusTest,if(json.get(json.get(MagicItemCheckProf,roll.count),"AthCheckProf")==3,if(tAthCheckProf>0,tAthCheckProf,json.get(json.get(MagicItemCheckProf,roll.count),"AthCheckProf")),json.get(json.get(MagicItemCheckProf,roll.count),"AthCheckProf")+tAthCheckProf),tAthCheckProf)]
    [h:tDcpCheckProf=if(GivesBonusTest,if(json.get(json.get(MagicItemCheckProf,roll.count),"DcpCheckProf")==3,if(tDcpCheckProf>0,tDcpCheckProf,json.get(json.get(MagicItemCheckProf,roll.count),"DcpCheckProf")),json.get(json.get(MagicItemCheckProf,roll.count),"DcpCheckProf")+tDcpCheckProf),tDcpCheckProf)]
    [h:tHstCheckProf=if(GivesBonusTest,if(json.get(json.get(MagicItemCheckProf,roll.count),"HstCheckProf")==3,if(tHstCheckProf>0,tHstCheckProf,json.get(json.get(MagicItemCheckProf,roll.count),"HstCheckProf")),json.get(json.get(MagicItemCheckProf,roll.count),"HstCheckProf")+tHstCheckProf),tHstCheckProf)]
    [h:tInsCheckProf=if(GivesBonusTest,if(json.get(json.get(MagicItemCheckProf,roll.count),"InsCheckProf")==3,if(tInsCheckProf>0,tInsCheckProf,json.get(json.get(MagicItemCheckProf,roll.count),"InsCheckProf")),json.get(json.get(MagicItemCheckProf,roll.count),"InsCheckProf")+tInsCheckProf),tInsCheckProf)]
    [h:tImdCheckProf=if(GivesBonusTest,if(json.get(json.get(MagicItemCheckProf,roll.count),"ImdCheckProf")==3,if(tImdCheckProf>0,tImdCheckProf,json.get(json.get(MagicItemCheckProf,roll.count),"ImdCheckProf")),json.get(json.get(MagicItemCheckProf,roll.count),"ImdCheckProf")+tImdCheckProf),tImdCheckProf)]
    [h:tInvCheckProf=if(GivesBonusTest,if(json.get(json.get(MagicItemCheckProf,roll.count),"InvCheckProf")==3,if(tInvCheckProf>0,tInvCheckProf,json.get(json.get(MagicItemCheckProf,roll.count),"InvCheckProf")),json.get(json.get(MagicItemCheckProf,roll.count),"InvCheckProf")+tInvCheckProf),tInvCheckProf)]
    [h:tMedCheckProf=if(GivesBonusTest,if(json.get(json.get(MagicItemCheckProf,roll.count),"MedCheckProf")==3,if(tMedCheckProf>0,tMedCheckProf,json.get(json.get(MagicItemCheckProf,roll.count),"MedCheckProf")),json.get(json.get(MagicItemCheckProf,roll.count),"MedCheckProf")+tMedCheckProf),tMedCheckProf)]
    [h:tNtrCheckProf=if(GivesBonusTest,if(json.get(json.get(MagicItemCheckProf,roll.count),"NtrCheckProf")==3,if(tNtrCheckProf>0,tNtrCheckProf,json.get(json.get(MagicItemCheckProf,roll.count),"NtrCheckProf")),json.get(json.get(MagicItemCheckProf,roll.count),"NtrCheckProf")+tNtrCheckProf),tNtrCheckProf)]
    [h:tPcpCheckProf=if(GivesBonusTest,if(json.get(json.get(MagicItemCheckProf,roll.count),"PcpCheckProf")==3,if(tPcpCheckProf>0,tPcpCheckProf,json.get(json.get(MagicItemCheckProf,roll.count),"PcpCheckProf")),json.get(json.get(MagicItemCheckProf,roll.count),"PcpCheckProf")+tPcpCheckProf),tPcpCheckProf)]
    [h:tPfmCheckProf=if(GivesBonusTest,if(json.get(json.get(MagicItemCheckProf,roll.count),"PfmCheckProf")==3,if(tPfmCheckProf>0,tPfmCheckProf,json.get(json.get(MagicItemCheckProf,roll.count),"PfmCheckProf")),json.get(json.get(MagicItemCheckProf,roll.count),"PfmCheckProf")+tPfmCheckProf),tPfmCheckProf)]
    [h:tPrsCheckProf=if(GivesBonusTest,if(json.get(json.get(MagicItemCheckProf,roll.count),"PrsCheckProf")==3,if(tPrsCheckProf>0,tPrsCheckProf,json.get(json.get(MagicItemCheckProf,roll.count),"PrsCheckProf")),json.get(json.get(MagicItemCheckProf,roll.count),"PrsCheckProf")+tPrsCheckProf),tPrsCheckProf)]
    [h:tRlgCheckProf=if(GivesBonusTest,if(json.get(json.get(MagicItemCheckProf,roll.count),"RlgCheckProf")==3,if(tRlgCheckProf>0,tRlgCheckProf,json.get(json.get(MagicItemCheckProf,roll.count),"RlgCheckProf")),json.get(json.get(MagicItemCheckProf,roll.count),"RlgCheckProf")+tRlgCheckProf),tRlgCheckProf)]
    [h:tSoHCheckProf=if(GivesBonusTest,if(json.get(json.get(MagicItemCheckProf,roll.count),"SoHCheckProf")==3,if(tSoHCheckProf>0,tSoHCheckProf,json.get(json.get(MagicItemCheckProf,roll.count),"SoHCheckProf")),json.get(json.get(MagicItemCheckProf,roll.count),"SoHCheckProf")+tSoHCheckProf),tSoHCheckProf)]
    [h:tStlCheckProf=if(GivesBonusTest,if(json.get(json.get(MagicItemCheckProf,roll.count),"StlCheckProf")==3,if(tStlCheckProf>0,tStlCheckProf,json.get(json.get(MagicItemCheckProf,roll.count),"StlCheckProf")),json.get(json.get(MagicItemCheckProf,roll.count),"StlCheckProf")+tStlCheckProf),tStlCheckProf)]
    [h:tSrvCheckProf=if(GivesBonusTest,if(json.get(json.get(MagicItemCheckProf,roll.count),"SrvCheckProf")==3,if(tSrvCheckProf>0,tSrvCheckProf,json.get(json.get(MagicItemCheckProf,roll.count),"SrvCheckProf")),json.get(json.get(MagicItemCheckProf,roll.count),"SrvCheckProf")+tSrvCheckProf),tSrvCheckProf)]
}]}]
    
[h,if(CheckMessageTest),CODE:{
    [h:tStrCheckMessage=json.get(MagicItemStats,"iStrCheckMessage")]
    [h:tDexCheckMessage=json.get(MagicItemStats,"iDexCheckMessage")]
    [h:tConCheckMessage=json.get(MagicItemStats,"iConCheckMessage")]
    [h:tIntCheckMessage=json.get(MagicItemStats,"iIntCheckMessage")]
    [h:tWisCheckMessage=json.get(MagicItemStats,"iWisCheckMessage")]
    [h:tChaCheckMessage=json.get(MagicItemStats,"iChaCheckMessage")]
    [h:tAcbCheckMessage=json.get(MagicItemStats,"iAcbCheckMessage")]
    [h:tAnHCheckMessage=json.get(MagicItemStats,"iAnHCheckMessage")]
    [h:tArcCheckMessage=json.get(MagicItemStats,"iArcCheckMessage")]
    [h:tAthCheckMessage=json.get(MagicItemStats,"iAthCheckMessage")]
    [h:tDcpCheckMessage=json.get(MagicItemStats,"iDcpCheckMessage")]
    [h:tHstCheckMessage=json.get(MagicItemStats,"iHstCheckMessage")]
    [h:tInsCheckMessage=json.get(MagicItemStats,"iInsCheckMessage")]
    [h:tImdCheckMessage=json.get(MagicItemStats,"iImdCheckMessage")]
    [h:tInvCheckMessage=json.get(MagicItemStats,"iInvCheckMessage")]
    [h:tMedCheckMessage=json.get(MagicItemStats,"iMedCheckMessage")]
    [h:tNtrCheckMessage=json.get(MagicItemStats,"iNtrCheckMessage")]
    [h:tPcpCheckMessage=json.get(MagicItemStats,"iPcpCheckMessage")]
    [h:tPfmCheckMessage=json.get(MagicItemStats,"iPfmCheckMessage")]
    [h:tPrsCheckMessage=json.get(MagicItemStats,"iPrsCheckMessage")]
    [h:tRlgCheckMessage=json.get(MagicItemStats,"iRlgCheckMessage")]
    [h:tSoHCheckMessage=json.get(MagicItemStats,"iSoHCheckMessage")]
    [h:tStlCheckMessage=json.get(MagicItemStats,"iStlCheckMessage")]
    [h:tSrvCheckMessage=json.get(MagicItemStats,"iSrvCheckMessage")]
    };{
    [h:tStrCheckMessage=""]
    [h:tDexCheckMessage=""]
    [h:tConCheckMessage=""]
    [h:tIntCheckMessage=""]
    [h:tWisCheckMessage=""]
    [h:tChaCheckMessage=""]
    [h:tAcbCheckMessage=""]
    [h:tAnHCheckMessage=""]
    [h:tArcCheckMessage=""]
    [h:tAthCheckMessage=""]
    [h:tDcpCheckMessage=""]
    [h:tHstCheckMessage=""]
    [h:tInsCheckMessage=""]
    [h:tImdCheckMessage=""]
    [h:tInvCheckMessage=""]
    [h:tMedCheckMessage=""]
    [h:tNtrCheckMessage=""]
    [h:tPcpCheckMessage=""]
    [h:tPfmCheckMessage=""]
    [h:tPrsCheckMessage=""]
    [h:tRlgCheckMessage=""]
    [h:tSoHCheckMessage=""]
    [h:tStlCheckMessage=""]
    [h:tSrvCheckMessage=""]

[h,count(json.length(MagicItemNames)),CODE:{
    
    [h:GivesBonusTest=if(and(or(json.get(json.get(MagicItemEquipment,roll.count),"reqEquip")==0,json.get(json.get(MagicItemEquipment,roll.count),"isEquipped")==1),or(json.get(json.get(MagicItemActivation,roll.count),"reqActive")==0,json.get(json.get(MagicItemActivation,roll.count),"isActive")==1),or(json.get(json.get(MagicItemAttuned,roll.count),"reqAttunement")==0,json.get(json.get(MagicItemAttuned,roll.count),"slotAttunement")>=1)),1,0)]
    
    [h:tStrCheckMessage=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckMessage,roll.count),"StrCheckMessage")!=("<tr><td>&#8226;</td><td> <b>"+json.get(MagicItemNames,roll.count)+":</b> 0</td></tr>")),json.append(tStrCheckMessage,json.get(json.get(MagicItemCheckMessage,roll.count),"StrCheckMessage")),tStrCheckMessage)]
    [h:tDexCheckMessage=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckMessage,roll.count),"DexCheckMessage")!=("<tr><td>&#8226;</td><td> <b>"+json.get(MagicItemNames,roll.count)+":</b> 0</td></tr>")),json.append(tDexCheckMessage,json.get(json.get(MagicItemCheckMessage,roll.count),"DexCheckMessage")),tDexCheckMessage)]
    [h:tConCheckMessage=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckMessage,roll.count),"ConCheckMessage")!=("<tr><td>&#8226;</td><td> <b>"+json.get(MagicItemNames,roll.count)+":</b> 0</td></tr>")),json.append(tConCheckMessage,json.get(json.get(MagicItemCheckMessage,roll.count),"ConCheckMessage")),tConCheckMessage)]
    [h:tIntCheckMessage=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckMessage,roll.count),"IntCheckMessage")!=("<tr><td>&#8226;</td><td> <b>"+json.get(MagicItemNames,roll.count)+":</b> 0</td></tr>")),json.append(tIntCheckMessage,json.get(json.get(MagicItemCheckMessage,roll.count),"IntCheckMessage")),tIntCheckMessage)]
    [h:tWisCheckMessage=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckMessage,roll.count),"WisCheckMessage")!=("<tr><td>&#8226;</td><td> <b>"+json.get(MagicItemNames,roll.count)+":</b> 0</td></tr>")),json.append(tWisCheckMessage,json.get(json.get(MagicItemCheckMessage,roll.count),"WisCheckMessage")),tWisCheckMessage)]
    [h:tChaCheckMessage=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckMessage,roll.count),"ChaCheckMessage")!=("<tr><td>&#8226;</td><td> <b>"+json.get(MagicItemNames,roll.count)+":</b> 0</td></tr>")),json.append(tChaCheckMessage,json.get(json.get(MagicItemCheckMessage,roll.count),"ChaCheckMessage")),tChaCheckMessage)]
    [h:tAcbCheckMessage=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckMessage,roll.count),"AcbCheckMessage")!=("<tr><td>&#8226;</td><td> <b>"+json.get(MagicItemNames,roll.count)+":</b> 0</td></tr>")),json.append(tAcbCheckMessage,json.get(json.get(MagicItemCheckMessage,roll.count),"AcbCheckMessage")),tAcbCheckMessage)]
    [h:tAnHCheckMessage=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckMessage,roll.count),"AnHCheckMessage")!=("<tr><td>&#8226;</td><td> <b>"+json.get(MagicItemNames,roll.count)+":</b> 0</td></tr>")),json.append(tAnHCheckMessage,json.get(json.get(MagicItemCheckMessage,roll.count),"AnHCheckMessage")),tAnHCheckMessage)]
    [h:tArcCheckMessage=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckMessage,roll.count),"ArcCheckMessage")!=("<tr><td>&#8226;</td><td> <b>"+json.get(MagicItemNames,roll.count)+":</b> 0</td></tr>")),json.append(tArcCheckMessage,json.get(json.get(MagicItemCheckMessage,roll.count),"ArcCheckMessage")),tArcCheckMessage)]
    [h:tAthCheckMessage=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckMessage,roll.count),"AthCheckMessage")!=("<tr><td>&#8226;</td><td> <b>"+json.get(MagicItemNames,roll.count)+":</b> 0</td></tr>")),json.append(tAthCheckMessage,json.get(json.get(MagicItemCheckMessage,roll.count),"AthCheckMessage")),tAthCheckMessage)]
    [h:tDcpCheckMessage=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckMessage,roll.count),"DcpCheckMessage")!=("<tr><td>&#8226;</td><td> <b>"+json.get(MagicItemNames,roll.count)+":</b> 0</td></tr>")),json.append(tDcpCheckMessage,json.get(json.get(MagicItemCheckMessage,roll.count),"DcpCheckMessage")),tDcpCheckMessage)]
    [h:tHstCheckMessage=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckMessage,roll.count),"HstCheckMessage")!=("<tr><td>&#8226;</td><td> <b>"+json.get(MagicItemNames,roll.count)+":</b> 0</td></tr>")),json.append(tHstCheckMessage,json.get(json.get(MagicItemCheckMessage,roll.count),"HstCheckMessage")),tHstCheckMessage)]
    [h:tInsCheckMessage=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckMessage,roll.count),"InsCheckMessage")!=("<tr><td>&#8226;</td><td> <b>"+json.get(MagicItemNames,roll.count)+":</b> 0</td></tr>")),json.append(tInsCheckMessage,json.get(json.get(MagicItemCheckMessage,roll.count),"InsCheckMessage")),tInsCheckMessage)]
    [h:tImdCheckMessage=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckMessage,roll.count),"ImdCheckMessage")!=("<tr><td>&#8226;</td><td> <b>"+json.get(MagicItemNames,roll.count)+":</b> 0</td></tr>")),json.append(tImdCheckMessage,json.get(json.get(MagicItemCheckMessage,roll.count),"ImdCheckMessage")),tImdCheckMessage)]
    [h:tInvCheckMessage=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckMessage,roll.count),"InvCheckMessage")!=("<tr><td>&#8226;</td><td> <b>"+json.get(MagicItemNames,roll.count)+":</b> 0</td></tr>")),json.append(tInvCheckMessage,json.get(json.get(MagicItemCheckMessage,roll.count),"InvCheckMessage")),tInvCheckMessage)]
    [h:tMedCheckMessage=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckMessage,roll.count),"MedCheckMessage")!=("<tr><td>&#8226;</td><td> <b>"+json.get(MagicItemNames,roll.count)+":</b> 0</td></tr>")),json.append(tMedCheckMessage,json.get(json.get(MagicItemCheckMessage,roll.count),"MedCheckMessage")),tMedCheckMessage)]
    [h:tNtrCheckMessage=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckMessage,roll.count),"NtrCheckMessage")!=("<tr><td>&#8226;</td><td> <b>"+json.get(MagicItemNames,roll.count)+":</b> 0</td></tr>")),json.append(tNtrCheckMessage,json.get(json.get(MagicItemCheckMessage,roll.count),"NtrCheckMessage")),tNtrCheckMessage)]
    [h:tPcpCheckMessage=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckMessage,roll.count),"PcpCheckMessage")!=("<tr><td>&#8226;</td><td> <b>"+json.get(MagicItemNames,roll.count)+":</b> 0</td></tr>")),json.append(tPcpCheckMessage,json.get(json.get(MagicItemCheckMessage,roll.count),"PcpCheckMessage")),tPcpCheckMessage)]
    [h:tPfmCheckMessage=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckMessage,roll.count),"PfmCheckMessage")!=("<tr><td>&#8226;</td><td> <b>"+json.get(MagicItemNames,roll.count)+":</b> 0</td></tr>")),json.append(tPfmCheckMessage,json.get(json.get(MagicItemCheckMessage,roll.count),"PfmCheckMessage")),tPfmCheckMessage)]
    [h:tPrsCheckMessage=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckMessage,roll.count),"PrsCheckMessage")!=("<tr><td>&#8226;</td><td> <b>"+json.get(MagicItemNames,roll.count)+":</b> 0</td></tr>")),json.append(tPrsCheckMessage,json.get(json.get(MagicItemCheckMessage,roll.count),"PrsCheckMessage")),tPrsCheckMessage)]
    [h:tRlgCheckMessage=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckMessage,roll.count),"RlgCheckMessage")!=("<tr><td>&#8226;</td><td> <b>"+json.get(MagicItemNames,roll.count)+":</b> 0</td></tr>")),json.append(tRlgCheckMessage,json.get(json.get(MagicItemCheckMessage,roll.count),"RlgCheckMessage")),tRlgCheckMessage)]
    [h:tSoHCheckMessage=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckMessage,roll.count),"SoHCheckMessage")!=("<tr><td>&#8226;</td><td> <b>"+json.get(MagicItemNames,roll.count)+":</b> 0</td></tr>")),json.append(tSoHCheckMessage,json.get(json.get(MagicItemCheckMessage,roll.count),"SoHCheckMessage")),tSoHCheckMessage)]
    [h:tStlCheckMessage=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckMessage,roll.count),"StlCheckMessage")!=("<tr><td>&#8226;</td><td> <b>"+json.get(MagicItemNames,roll.count)+":</b> 0</td></tr>")),json.append(tStlCheckMessage,json.get(json.get(MagicItemCheckMessage,roll.count),"StlCheckMessage")),tStlCheckMessage)]
    [h:tSrvCheckMessage=if(and(GivesBonusTest,json.get(json.get(MagicItemCheckMessage,roll.count),"SrvCheckMessage")!=("<tr><td>&#8226;</td><td> <b>"+json.get(MagicItemNames,roll.count)+":</b> 0</td></tr>")),json.append(tSrvCheckMessage,json.get(json.get(MagicItemCheckMessage,roll.count),"SrvCheckMessage")),tSrvCheckMessage)]
}]}]

[h,if(SaveTest),CODE:{
    [h:tStrSaveAdv=json.get(MagicItemStats,"iStrSaveAdv")]
    [h:tDexSaveAdv=json.get(MagicItemStats,"iDexSaveAdv")]
    [h:tConSaveAdv=json.get(MagicItemStats,"iConSaveAdv")]
    [h:tIntSaveAdv=json.get(MagicItemStats,"iIntSaveAdv")]
    [h:tWisSaveAdv=json.get(MagicItemStats,"iWisSaveAdv")]
    [h:tChaSaveAdv=json.get(MagicItemStats,"iChaSaveAdv")]
    [h:tStrSaveDis=json.get(MagicItemStats,"iStrSaveDis")]
    [h:tDexSaveDis=json.get(MagicItemStats,"iDexSaveDis")]
    [h:tConSaveDis=json.get(MagicItemStats,"iConSaveDis")]
    [h:tIntSaveDis=json.get(MagicItemStats,"iIntSaveDis")]
    [h:tWisSaveDis=json.get(MagicItemStats,"iWisSaveDis")]
    [h:tChaSaveDis=json.get(MagicItemStats,"iChaSaveDis")]
    [h:tStrSaveBonus=json.get(MagicItemStats,"iStrSaveBonus")]
    [h:tDexSaveBonus=json.get(MagicItemStats,"iDexSaveBonus")]
    [h:tConSaveBonus=json.get(MagicItemStats,"iConSaveBonus")]
    [h:tIntSaveBonus=json.get(MagicItemStats,"iIntSaveBonus")]
    [h:tWisSaveBonus=json.get(MagicItemStats,"iWisSaveBonus")]
    [h:tChaSaveBonus=json.get(MagicItemStats,"iChaSaveBonus")]
    [h:tStrSaveProf=json.get(MagicItemStats,"iStrSaveProf")]
    [h:tDexSaveProf=json.get(MagicItemStats,"iDexSaveProf")]
    [h:tConSaveProf=json.get(MagicItemStats,"iConSaveProf")]
    [h:tIntSaveProf=json.get(MagicItemStats,"iIntSaveProf")]
    [h:tWisSaveProf=json.get(MagicItemStats,"iWisSaveProf")]
    [h:tChaSaveProf=json.get(MagicItemStats,"iChaSaveProf")]
    [h:tStrSaveMessage=json.get(MagicItemStats,"iStrSaveMessage")]
    [h:tDexSaveMessage=json.get(MagicItemStats,"iDexSaveMessage")]
    [h:tConSaveMessage=json.get(MagicItemStats,"iConSaveMessage")]
    [h:tIntSaveMessage=json.get(MagicItemStats,"iIntSaveMessage")]
    [h:tWisSaveMessage=json.get(MagicItemStats,"iWisSaveMessage")]
    [h:tChaSaveMessage=json.get(MagicItemStats,"iChaSaveMessage")]
};{
    [h:tStrSaveAdv=""]
    [h:tDexSaveAdv=""]
    [h:tConSaveAdv=""]
    [h:tIntSaveAdv=""]
    [h:tWisSaveAdv=""]
    [h:tChaSaveAdv=""]
    [h:tStrSaveDis=""]
    [h:tDexSaveDis=""]
    [h:tConSaveDis=""]
    [h:tIntSaveDis=""]
    [h:tWisSaveDis=""]
    [h:tChaSaveDis=""]
    [h:tStrSaveBonus=""]
    [h:tDexSaveBonus=""]
    [h:tConSaveBonus=""]
    [h:tIntSaveBonus=""]
    [h:tWisSaveBonus=""]
    [h:tChaSaveBonus=""]
    [h:tStrSaveProf=0]
    [h:tDexSaveProf=0]
    [h:tConSaveProf=0]
    [h:tIntSaveProf=0]
    [h:tWisSaveProf=0]
    [h:tChaSaveProf=0]
    [h:tStrSaveMessage=""]
    [h:tDexSaveMessage=""]
    [h:tConSaveMessage=""]
    [h:tIntSaveMessage=""]
    [h:tWisSaveMessage=""]
    [h:tChaSaveMessage=""]
    
[h,count(json.length(MagicItemNames)),CODE:{
    
    [h:GivesBonusTest=if(and(or(json.get(json.get(MagicItemEquipment,roll.count),"reqEquip")==0,json.get(json.get(MagicItemEquipment,roll.count),"isEquipped")==1),or(json.get(json.get(MagicItemActivation,roll.count),"reqActive")==0,json.get(json.get(MagicItemActivation,roll.count),"isActive")==1),or(json.get(json.get(MagicItemAttuned,roll.count),"reqAttunement")==0,json.get(json.get(MagicItemAttuned,roll.count),"slotAttunement")>=1)),1,0)]
    
    [h:tStrSaveAdv=if(and(GivesBonusTest,json.get(json.get(MagicItemSaves,roll.count),"StrSaveAdv")),json.append(tStrSaveAdv,json.get(MagicItemNames,roll.count)),tStrSaveAdv)]
    [h:tDexSaveAdv=if(and(GivesBonusTest,json.get(json.get(MagicItemSaves,roll.count),"DexSaveAdv")),json.append(tDexSaveAdv,json.get(MagicItemNames,roll.count)),tDexSaveAdv)]
    [h:tConSaveAdv=if(and(GivesBonusTest,json.get(json.get(MagicItemSaves,roll.count),"ConSaveAdv")),json.append(tConSaveAdv,json.get(MagicItemNames,roll.count)),tConSaveAdv)]
    [h:tIntSaveAdv=if(and(GivesBonusTest,json.get(json.get(MagicItemSaves,roll.count),"IntSaveAdv")),json.append(tIntSaveAdv,json.get(MagicItemNames,roll.count)),tIntSaveAdv)]
    [h:tWisSaveAdv=if(and(GivesBonusTest,json.get(json.get(MagicItemSaves,roll.count),"WisSaveAdv")),json.append(tWisSaveAdv,json.get(MagicItemNames,roll.count)),tWisSaveAdv)]
    [h:tChaSaveAdv=if(and(GivesBonusTest,json.get(json.get(MagicItemSaves,roll.count),"ChaSaveAdv")),json.append(tChaSaveAdv,json.get(MagicItemNames,roll.count)),tChaSaveAdv)]
    [h:tStrSaveDis=if(and(GivesBonusTest,json.get(json.get(MagicItemSaves,roll.count),"StrSaveDis")),json.append(tStrSaveDis,json.get(MagicItemNames,roll.count)),tStrSaveDis)]
    [h:tDexSaveDis=if(and(GivesBonusTest,json.get(json.get(MagicItemSaves,roll.count),"DexSaveDis")),json.append(tDexSaveDis,json.get(MagicItemNames,roll.count)),tDexSaveDis)]
    [h:tConSaveDis=if(and(GivesBonusTest,json.get(json.get(MagicItemSaves,roll.count),"ConSaveDis")),json.append(tConSaveDis,json.get(MagicItemNames,roll.count)),tConSaveDis)]
    [h:tIntSaveDis=if(and(GivesBonusTest,json.get(json.get(MagicItemSaves,roll.count),"IntSaveDis")),json.append(tIntSaveDis,json.get(MagicItemNames,roll.count)),tIntSaveDis)]
    [h:tWisSaveDis=if(and(GivesBonusTest,json.get(json.get(MagicItemSaves,roll.count),"WisSaveDis")),json.append(tWisSaveDis,json.get(MagicItemNames,roll.count)),tWisSaveDis)]
    [h:tChaSaveDis=if(and(GivesBonusTest,json.get(json.get(MagicItemSaves,roll.count),"ChaSaveDis")),json.append(tChaSaveDis,json.get(MagicItemNames,roll.count)),tChaSaveDis)]
    [h:tStrSaveBonus=if(and(GivesBonusTest,json.get(json.get(MagicItemSaves,roll.count),"StrSaveBonus")!=0),json.append(tStrSaveBonus,json.get(json.get(MagicItemSaves,roll.count),"StrSaveBonus")),tStrSaveBonus)]
    [h:tDexSaveBonus=if(and(GivesBonusTest,json.get(json.get(MagicItemSaves,roll.count),"DexSaveBonus")!=0),json.append(tDexSaveBonus,json.get(json.get(MagicItemSaves,roll.count),"DexSaveBonus")),tDexSaveBonus)]
    [h:tConSaveBonus=if(and(GivesBonusTest,json.get(json.get(MagicItemSaves,roll.count),"ConSaveBonus")!=0),json.append(tConSaveBonus,json.get(json.get(MagicItemSaves,roll.count),"ConSaveBonus")),tConSaveBonus)]
    [h:tIntSaveBonus=if(and(GivesBonusTest,json.get(json.get(MagicItemSaves,roll.count),"IntSaveBonus")!=0),json.append(tIntSaveBonus,json.get(json.get(MagicItemSaves,roll.count),"IntSaveBonus")),tIntSaveBonus)]
    [h:tWisSaveBonus=if(and(GivesBonusTest,json.get(json.get(MagicItemSaves,roll.count),"WisSaveBonus")!=0),json.append(tWisSaveBonus,json.get(json.get(MagicItemSaves,roll.count),"WisSaveBonus")),tWisSaveBonus)]
    [h:tChaSaveBonus=if(and(GivesBonusTest,json.get(json.get(MagicItemSaves,roll.count),"ChaSaveBonus")!=0),json.append(tChaSaveBonus,json.get(json.get(MagicItemSaves,roll.count),"ChaSaveBonus")),tChaSaveBonus)]
    [h:tStrSaveProf=if(GivesBonusTest,if(json.get(json.get(MagicItemSaves,roll.count),"StrSaveProf")==3,if(tStrSaveProf>0,tStrSaveProf,json.get(json.get(MagicItemSaves,roll.count),"StrSaveProf")),json.get(json.get(MagicItemSaves,roll.count),"StrSaveProf")+tStrSaveProf),tStrSaveProf)]
    [h:tDexSaveProf=if(GivesBonusTest,if(json.get(json.get(MagicItemSaves,roll.count),"DexSaveProf")==3,if(tDexSaveProf>0,tDexSaveProf,json.get(json.get(MagicItemSaves,roll.count),"DexSaveProf")),json.get(json.get(MagicItemSaves,roll.count),"DexSaveProf")+tDexSaveProf),tDexSaveProf)]
    [h:tConSaveProf=if(GivesBonusTest,if(json.get(json.get(MagicItemSaves,roll.count),"ConSaveProf")==3,if(tConSaveProf>0,tConSaveProf,json.get(json.get(MagicItemSaves,roll.count),"ConSaveProf")),json.get(json.get(MagicItemSaves,roll.count),"ConSaveProf")+tConSaveProf),tConSaveProf)]
    [h:tIntSaveProf=if(GivesBonusTest,if(json.get(json.get(MagicItemSaves,roll.count),"IntSaveProf")==3,if(tIntSaveProf>0,tIntSaveProf,json.get(json.get(MagicItemSaves,roll.count),"IntSaveProf")),json.get(json.get(MagicItemSaves,roll.count),"IntSaveProf")+tIntSaveProf),tIntSaveProf)]
    [h:tWisSaveProf=if(GivesBonusTest,if(json.get(json.get(MagicItemSaves,roll.count),"WisSaveProf")==3,if(tWisSaveProf>0,tWisSaveProf,json.get(json.get(MagicItemSaves,roll.count),"WisSaveProf")),json.get(json.get(MagicItemSaves,roll.count),"WisSaveProf")+tWisSaveProf),tWisSaveProf)]
    [h:tChaSaveProf=if(GivesBonusTest,if(json.get(json.get(MagicItemSaves,roll.count),"ChaSaveProf")==3,if(tChaSaveProf>0,tChaSaveProf,json.get(json.get(MagicItemSaves,roll.count),"ChaSaveProf")),json.get(json.get(MagicItemSaves,roll.count),"ChaSaveProf")+tChaSaveProf),tChaSaveProf)]
    [h:tStrSaveMessage=if(and(GivesBonusTest,json.get(json.get(MagicItemSaves,roll.count),"StrSaveMessage")!=("<br>&#8226; <b>"+json.get(MagicItemNames,roll.count)+":</b> 0")),json.append(tStrSaveMessage,json.get(json.get(MagicItemSaves,roll.count),"StrSaveMessage")),tStrSaveMessage)]
    [h:tDexSaveMessage=if(and(GivesBonusTest,json.get(json.get(MagicItemSaves,roll.count),"DexSaveMessage")!=("<br>&#8226; <b>"+json.get(MagicItemNames,roll.count)+":</b> 0")),json.append(tDexSaveMessage,json.get(json.get(MagicItemSaves,roll.count),"DexSaveMessage")),tDexSaveMessage)]
    [h:tConSaveMessage=if(and(GivesBonusTest,json.get(json.get(MagicItemSaves,roll.count),"ConSaveMessage")!=("<br>&#8226; <b>"+json.get(MagicItemNames,roll.count)+":</b> 0")),json.append(tConSaveMessage,json.get(json.get(MagicItemSaves,roll.count),"ConSaveMessage")),tConSaveMessage)]
    [h:tIntSaveMessage=if(and(GivesBonusTest,json.get(json.get(MagicItemSaves,roll.count),"IntSaveMessage")!=("<br>&#8226; <b>"+json.get(MagicItemNames,roll.count)+":</b> 0")),json.append(tIntSaveMessage,json.get(json.get(MagicItemSaves,roll.count),"IntSaveMessage")),tIntSaveMessage)]
    [h:tWisSaveMessage=if(and(GivesBonusTest,json.get(json.get(MagicItemSaves,roll.count),"WisSaveMessage")!=("<br>&#8226; <b>"+json.get(MagicItemNames,roll.count)+":</b> 0")),json.append(tWisSaveMessage,json.get(json.get(MagicItemSaves,roll.count),"WisSaveMessage")),tWisSaveMessage)]
    [h:tChaSaveMessage=if(and(GivesBonusTest,json.get(json.get(MagicItemSaves,roll.count),"ChaSaveMessage")!=("<br>&#8226; <b>"+json.get(MagicItemNames,roll.count)+":</b> 0")),json.append(tChaSaveMessage,json.get(json.get(MagicItemSaves,roll.count),"ChaSaveMessage")),tChaSaveMessage)]
}]}]

[h,if(HPTest),CODE:{
    [h:tMaxHPBonus=json.get(MagicItemStats,"bMaxHP")]
    [h:tMaxHPSet=json.get(MagicItemStats,"sMaxHP")]
    [h:tMaxHPSetOverride=json.get(MagicItemStats,"soMaxHP")]
    };{
    [h:tMaxHPBonus=0]
    [h:tMaxHPSet=0]
    [h:tMaxHPSetOverride=-1]
[h,count(json.length(MagicItemNames)),CODE:{
    
    [h:GivesBonusTest=if(and(or(json.get(json.get(MagicItemEquipment,roll.count),"reqEquip")==0,json.get(json.get(MagicItemEquipment,roll.count),"isEquipped")==1),or(json.get(json.get(MagicItemActivation,roll.count),"reqActive")==0,json.get(json.get(MagicItemActivation,roll.count),"isActive")==1),or(json.get(json.get(MagicItemAttuned,roll.count),"reqAttunement")==0,json.get(json.get(MagicItemAttuned,roll.count),"slotAttunement")>=1)),1,0)]
    
    [h:tMaxHPBonus=if(GivesBonusTest,json.get(json.get(MagicItemHP,roll.count),"MaxHPBonus")+tMaxHPBonus,tMaxHPBonus)]
    [h:tMaxHPSet=if(GivesBonusTest,max(json.get(json.get(MagicItemHP,roll.count),"MaxHPSet"),tMaxHPSet),tMaxHPSet)]
}]
[h,count(json.length(MagicItemNames)),CODE:{
    
    [h:GivesBonusTest=if(and(or(json.get(json.get(MagicItemEquipment,roll.count),"reqEquip")==0,json.get(json.get(MagicItemEquipment,roll.count),"isEquipped")==1),or(json.get(json.get(MagicItemActivation,roll.count),"reqActive")==0,json.get(json.get(MagicItemActivation,roll.count),"isActive")==1),or(json.get(json.get(MagicItemAttuned,roll.count),"reqAttunement")==0,json.get(json.get(MagicItemAttuned,roll.count),"slotAttunement")>=1)),1,0)]
    
    [h:tMaxHPSetOverride=if(GivesBonusTest,if(tMaxHPSetOverride==-1,min(json.get(json.get(MagicItemHP,roll.count),"MaxHPSetOverride"),max(baseMaxHP+tMaxHPBonus,tMaxHPSet)),min(json.get(json.get(MagicItemHP,roll.count),"MaxHPSetOverride"),tMaxHPSetOverride)),tMaxHPSetOverride)]
}]
}]

[h,if(ACTest),CODE:{
    [h:tACBonus=json.get(MagicItemStats,"bAC")]
    [h:tACSet=json.get(MagicItemStats,"sAC")]
    [h:tACSetOverride=json.get(MagicItemStats,"soAC")]
    };{
    [h:tACBonus=0]
    [h:tACSet=0]
    [h:tACSetOverride=-1]
[h,count(json.length(MagicItemNames)),CODE:{
    
    [h:GivesBonusTest=if(and(or(json.get(json.get(MagicItemEquipment,roll.count),"reqEquip")==0,json.get(json.get(MagicItemEquipment,roll.count),"isEquipped")==1),or(json.get(json.get(MagicItemActivation,roll.count),"reqActive")==0,json.get(json.get(MagicItemActivation,roll.count),"isActive")==1),or(json.get(json.get(MagicItemAttuned,roll.count),"reqAttunement")==0,json.get(json.get(MagicItemAttuned,roll.count),"slotAttunement")>=1)),1,0)]
    
    [h:tACBonus=if(GivesBonusTest,json.get(json.get(MagicItemAC,roll.count),"ACBonus")+tACBonus,tACBonus)]
    [h:tACSet=if(GivesBonusTest,max(json.get(json.get(MagicItemAC,roll.count),"ACSet"),tACSet),tACSet)]
}]
[h,count(json.length(MagicItemNames)),CODE:{
    
    [h:GivesBonusTest=if(and(or(json.get(json.get(MagicItemEquipment,roll.count),"reqEquip")==0,json.get(json.get(MagicItemEquipment,roll.count),"isEquipped")==1),or(json.get(json.get(MagicItemActivation,roll.count),"reqActive")==0,json.get(json.get(MagicItemActivation,roll.count),"isActive")==1),or(json.get(json.get(MagicItemAttuned,roll.count),"reqAttunement")==0,json.get(json.get(MagicItemAttuned,roll.count),"slotAttunement")>=1)),1,0)]
    
    [h:tACSetOverride=if(GivesBonusTest,if(tACSetOverride==-1,min(json.get(json.get(MagicItemAC,roll.count),"ACSetOverride"),max(baseAC+tACBonus,tACSet)),min(json.get(json.get(MagicItemAC,roll.count),"ACSetOverride"),tACSetOverride)),tACSetOverride)]
}]
}]

[h,if(InitTest),CODE:{
    [h:tInitAdv=json.get(MagicItemStats,"iInitAdv")]
    [h:tInitDis=json.get(MagicItemStats,"iInitDis")]
    [h:tInitBonus=json.get(MagicItemStats,"iInitBonus")]
    [h:tInitProf=json.get(MagicItemStats,"iInitProf")]
    [h:tInitMessage=json.get(MagicItemStats,"iInitMessage")]
    };{
    [h:tInitAdv=""]
    [h:tInitDis=""]
    [h:tInitBonus=""]
    [h:tInitProf=0]
    [h:tInitMessage=""]
[h,count(json.length(MagicItemNames)),CODE:{
    
    [h:GivesBonusTest=if(and(or(json.get(json.get(MagicItemEquipment,roll.count),"reqEquip")==0,json.get(json.get(MagicItemEquipment,roll.count),"isEquipped")==1),or(json.get(json.get(MagicItemActivation,roll.count),"reqActive")==0,json.get(json.get(MagicItemActivation,roll.count),"isActive")==1),or(json.get(json.get(MagicItemAttuned,roll.count),"reqAttunement")==0,json.get(json.get(MagicItemAttuned,roll.count),"slotAttunement")>=1)),1,0)]
    
    [h:tInitAdv=if(and(GivesBonusTest,json.get(json.get(MagicItemInit,roll.count),"InitAdv")),json.append(tInitAdv,json.get(MagicItemNames,roll.count)),tInitAdv)]
    [h:tInitDis=if(and(GivesBonusTest,json.get(json.get(MagicItemInit,roll.count),"InitDis")),json.append(tInitDis,json.get(MagicItemNames,roll.count)),tInitDis)]
    [h:tInitBonus=if(and(GivesBonusTest,json.get(json.get(MagicItemInit,roll.count),"InitBonus")!=0),json.append(tInitBonus,json.get(json.get(MagicItemInit,roll.count),"InitBonus")),tInitBonus)]
    [h:tInitProf=if(GivesBonusTest,if(json.get(json.get(MagicItemInit,roll.count),"InitProf")==3,if(tInitProf>0,tInitProf,json.get(json.get(MagicItemInit,roll.count),"InitProf")),json.get(json.get(MagicItemInit,roll.count),"InitProf")+tInitProf),tInitProf)]
    [h:tInitMessage=if(and(GivesBonusTest,json.get(json.get(MagicItemInit,roll.count),"InitMessage")!=("<br>&#8226; <b>"+json.get(MagicItemNames,roll.count)+":</b> 0")),json.append(tInitMessage,json.get(json.get(MagicItemInit,roll.count),"InitMessage")),tInitMessage)]
}]}]

[h,if(ConcTest),CODE:{
    [h:tConcAdv=json.get(MagicItemStats,"iConcAdv")]
    [h:tConcDis=json.get(MagicItemStats,"iConcDis")]
    [h:tConcBonus=json.get(MagicItemStats,"iConcBonus")]
    [h:tConcProf=json.get(MagicItemStats,"iConcProf")]
    [h:tConcMessage=json.get(MagicItemStats,"iConcMessage")]
    };{
    [h:tConcAdv=""]
    [h:tConcDis=""]
    [h:tConcBonus=""]
    [h:tConcProf=0]
    [h:tConcMessage=""]
[h,count(json.length(MagicItemNames)),CODE:{
    
    [h:GivesBonusTest=if(and(or(json.get(json.get(MagicItemEquipment,roll.count),"reqEquip")==0,json.get(json.get(MagicItemEquipment,roll.count),"isEquipped")==1),or(json.get(json.get(MagicItemActivation,roll.count),"reqActive")==0,json.get(json.get(MagicItemActivation,roll.count),"isActive")==1),or(json.get(json.get(MagicItemAttuned,roll.count),"reqAttunement")==0,json.get(json.get(MagicItemAttuned,roll.count),"slotAttunement")>=1)),1,0)]
    
    [h:tConcAdv=if(and(GivesBonusTest,json.get(json.get(MagicItemConc,roll.count),"ConcAdv")),json.append(tConcAdv,json.get(MagicItemNames,roll.count)),tConcAdv)]
    [h:tConcDis=if(and(GivesBonusTest,json.get(json.get(MagicItemConc,roll.count),"ConcDis")),json.append(tConcDis,json.get(MagicItemNames,roll.count)),tConcDis)]
    [h:tConcBonus=if(and(GivesBonusTest,json.get(json.get(MagicItemConc,roll.count),"ConcBonus")!=0),json.append(tConcBonus,json.get(json.get(MagicItemConc,roll.count),"ConcBonus")),tConcBonus)]
    [h:tConcProf=if(GivesBonusTest,if(json.get(json.get(MagicItemConc,roll.count),"ConcProf")==3,if(tConcProf>0,tConcProf,json.get(json.get(MagicItemConc,roll.count),"ConcProf")),json.get(json.get(MagicItemConc,roll.count),"ConcProf")+tConcProf),tConcProf)]
    [h:tConcMessage=if(and(GivesBonusTest,json.get(json.get(MagicItemConc,roll.count),"ConcMessage")!=("<br>&#8226; <b>"+json.get(MagicItemNames,roll.count)+":</b> 0")),json.append(tConcMessage,json.get(json.get(MagicItemConc,roll.count),"ConcMessage")),tConcMessage)]
}]}]

[h,if(DeathTest),CODE:{
    [h:tDeathAdv=json.get(MagicItemStats,"iDeathAdv")]
    [h:tDeathDis=json.get(MagicItemStats,"iDeathDis")]
    [h:tDeathBonus=json.get(MagicItemStats,"iDeathBonus")]
    [h:tDeathProf=json.get(MagicItemStats,"iDeathProf")]
    [h:tDeathMessage=json.get(MagicItemStats,"iDeathMessage")]
    };{
    [h:tDeathAdv=""]
    [h:tDeathDis=""]
    [h:tDeathBonus=""]
    [h:tDeathProf=0]
    [h:tDeathMessage=""]
[h,count(json.length(MagicItemNames)),CODE:{
    
    [h:GivesBonusTest=if(and(or(json.get(json.get(MagicItemEquipment,roll.count),"reqEquip")==0,json.get(json.get(MagicItemEquipment,roll.count),"isEquipped")==1),or(json.get(json.get(MagicItemActivation,roll.count),"reqActive")==0,json.get(json.get(MagicItemActivation,roll.count),"isActive")==1),or(json.get(json.get(MagicItemAttuned,roll.count),"reqAttunement")==0,json.get(json.get(MagicItemAttuned,roll.count),"slotAttunement")>=1)),1,0)]
    
    [h:tDeathAdv=if(and(GivesBonusTest,json.get(json.get(MagicItemDeath,roll.count),"DeathAdv")),json.append(tDeathAdv,json.get(MagicItemNames,roll.count)),tDeathAdv)]
    [h:tDeathDis=if(and(GivesBonusTest,json.get(json.get(MagicItemDeath,roll.count),"DeathDis")),json.append(tDeathDis,json.get(MagicItemNames,roll.count)),tDeathDis)]
    [h:tDeathBonus=if(and(GivesBonusTest,json.get(json.get(MagicItemDeath,roll.count),"DeathBonus")!=0),json.append(tDeathBonus,json.get(json.get(MagicItemDeath,roll.count),"DeathBonus")),tDeathBonus)]
    [h:tDeathProf=if(GivesBonusTest,if(json.get(json.get(MagicItemDeath,roll.count),"DeathProf")==3,if(tDeathProf>0,tDeathProf,json.get(json.get(MagicItemDeath,roll.count),"DeathProf")),json.get(json.get(MagicItemDeath,roll.count),"DeathProf")+tDeathProf),tDeathProf)]
    [h:tDeathMessage=if(and(GivesBonusTest,json.get(json.get(MagicItemDeath,roll.count),"DeathMessage")!=("<br>&#8226; <b>"+json.get(MagicItemNames,roll.count)+":</b> 0")),json.append(tDeathMessage,json.get(json.get(MagicItemDeath,roll.count),"DeathMessage")),tDeathMessage)]
}]}]

[h,if(MoveTest),CODE:{
    [h:tSpeedBonus=json.get(MagicItemStats,"iSpeedBonus")]
    [h:tSpeedMultiplier=json.get(MagicItemStats,"iSpeedMultiplier")]
    [h:tSpeedSet=json.get(MagicItemStats,"iSpeedSet")]
    [h:tSpeedSetOverride=json.get(MagicItemStats,"iSpeedSetOverride")]
    [h:tIsBurrow=json.get(MagicItemStats,"iIsBurrow")]
    [h:tBurrowBonus=json.get(MagicItemStats,"iBurrowBonus")]
    [h:tBurrowMultiplier=json.get(MagicItemStats,"iBurrowMultiplier")]
    [h:tBurrowSet=json.get(MagicItemStats,"iBurrowSet")]
    [h:tBurrowSetOverride=json.get(MagicItemStats,"iBurrowSetOverride")]
    [h:tIsClimb=json.get(MagicItemStats,"iIsClimb")]
    [h:tClimbBonus=json.get(MagicItemStats,"iClimbBonus")]
    [h:tClimbMultiplier=json.get(MagicItemStats,"iClimbMultiplier")]
    [h:tClimbSet=json.get(MagicItemStats,"iClimbSet")]
    [h:tClimbSetOverride=json.get(MagicItemStats,"iClimbSetOverride")]
    [h:tIsFly=json.get(MagicItemStats,"iIsFly")]
    [h:tFlyBonus=json.get(MagicItemStats,"iFlyBonus")]
    [h:tFlyMultiplier=json.get(MagicItemStats,"iFlyMultiplier")]
    [h:tFlySet=json.get(MagicItemStats,"iFlySet")]
    [h:tFlySetOverride=json.get(MagicItemStats,"iFlySetOverride")]
    [h:tIsHover=json.get(MagicItemStats,"iIsHover")]
    [h:tIsSwim=json.get(MagicItemStats,"iIsSwim")]
    [h:tSwimBonus=json.get(MagicItemStats,"iSwimBonus")]
    [h:tSwimMultiplier=json.get(MagicItemStats,"iSwimMultiplier")]
    [h:tSwimSet=json.get(MagicItemStats,"iSwimSet")]
    [h:tSwimSetOverride=json.get(MagicItemStats,"iSwimSetOverride")]	
};{
    [h:tSpeedBonus=0]
    [h:tSpeedMultiplier=1]
    [h:tSpeedSet=0]
    [h:tSpeedSetOverride=-1]
    [h:tIsBurrow=0]
    [h:tBurrowBonus=0]
    [h:tBurrowMultiplier=1]
    [h:tBurrowSet=0]
    [h:tBurrowSetOverride=-1]
    [h:tIsClimb=0]
    [h:tClimbBonus=0]
    [h:tClimbMultiplier=1]
    [h:tClimbSet=0]
    [h:tClimbSetOverride=-1]
    [h:tIsFly=0]
    [h:tFlyBonus=0]
    [h:tFlyMultiplier=1]
    [h:tFlySet=0]
    [h:tFlySetOverride=-1]
    [h:tIsHover=0]
    [h:tIsSwim=0]
    [h:tSwimBonus=0]
    [h:tSwimMultiplier=1]
    [h:tSwimSet=0]
    [h:tSwimSetOverride=-1]

    [h,count(json.length(MagicItemNames)),CODE:{
    	[h:GivesBonusTest=if(and(or(json.get(json.get(MagicItemEquipment,roll.count),"reqEquip")==0,json.get(json.get(MagicItemEquipment,roll.count),"isEquipped")==1),or(json.get(json.get(MagicItemActivation,roll.count),"reqActive")==0,json.get(json.get(MagicItemActivation,roll.count),"isActive")==1),or(json.get(json.get(MagicItemAttuned,roll.count),"reqAttunement")==0,json.get(json.get(MagicItemAttuned,roll.count),"slotAttunement")>=1)),1,0)]

        [h:tSpeedBonus=if(GivesBonusTest,(json.get(json.get(MagicItemMovement,roll.count),"SpeedBonus")+tSpeedBonus),tSpeedBonus)]
        [h:tSpeedSet=if(GivesBonusTest,max(json.get(json.get(MagicItemMovement,roll.count),"SpeedSet"),tSpeedBonus),tSpeedBonus)]
        [h:tSpeedMultiplier=if(GivesBonusTest,(json.get(json.get(MagicItemMovement,roll.count),"SpeedMultiplier")*tSpeedMultiplier),tSpeedMultiplier)]
        [h:tSpeedSetOverride=if(GivesBonusTest,if(json.get(json.get(MagicItemMovement,roll.count),"SpeedSetOverride")==-1,tSpeedSetOverride,if(tSpeedSetOverride==-1,json.get(json.get(MagicItemMovement,roll.count),"SpeedSetOverride"),min(json.get(json.get(MagicItemMovement,roll.count),"SpeedSetOverride"),tSpeedSetOverride))),tSpeedSetOverride)]
        
        [h:tIsBurrow=if(GivesBonusTest,max(json.get(json.get(MagicItemMovement,roll.count),"IsBurrow"),tIsBurrow),tIsBurrow)]
        [h:tBurrowBonus=if(GivesBonusTest,(json.get(json.get(MagicItemMovement,roll.count),"BurrowBonus")+tBurrowBonus),tBurrowBonus)]
        [h:tBurrowSet=if(GivesBonusTest,max(json.get(json.get(MagicItemMovement,roll.count),"BurrowSet"),tBurrowSet),tBurrowSet)]
        [h:tBurrowMultiplier=if(GivesBonusTest,(json.get(json.get(MagicItemMovement,roll.count),"BurrowMultiplier")*tBurrowMultiplier),tBurrowMultiplier)]
        [h:tBurrowSetOverride=if(GivesBonusTest,if(json.get(json.get(MagicItemMovement,roll.count),"BurrowSetOverride")==-1,tBurrowSetOverride,if(tBurrowSetOverride==-1,json.get(json.get(MagicItemMovement,roll.count),"BurrowSetOverride"),min(json.get(json.get(MagicItemMovement,roll.count),"BurrowSetOverride"),tBurrowSetOverride))),tBurrowSetOverride)]

        [h:tIsClimb=if(GivesBonusTest,max(json.get(json.get(MagicItemMovement,roll.count),"IsClimb"),tIsClimb),tIsClimb)]
        [h:tClimbBonus=if(GivesBonusTest,(json.get(json.get(MagicItemMovement,roll.count),"ClimbBonus")+tClimbBonus),tClimbBonus)]
        [h:tClimbSet=if(GivesBonusTest,max(json.get(json.get(MagicItemMovement,roll.count),"ClimbSet"),tClimbSet),tClimbSet)]
        [h:tClimbMultiplier=if(GivesBonusTest,(json.get(json.get(MagicItemMovement,roll.count),"ClimbMultiplier")*tClimbMultiplier),tClimbMultiplier)]
        [h:tClimbSetOverride=if(GivesBonusTest,if(json.get(json.get(MagicItemMovement,roll.count),"ClimbSetOverride")==-1,tClimbSetOverride,if(tClimbSetOverride==-1,json.get(json.get(MagicItemMovement,roll.count),"ClimbSetOverride"),min(json.get(json.get(MagicItemMovement,roll.count),"ClimbSetOverride"),tClimbSetOverride))),tClimbSetOverride)]

        [h:tIsFly=if(GivesBonusTest,max(json.get(json.get(MagicItemMovement,roll.count),"IsFly"),tIsFly),tIsFly)]
        [h:tFlyBonus=if(GivesBonusTest,(json.get(json.get(MagicItemMovement,roll.count),"FlyBonus")+tFlyBonus),tFlyBonus)]
        [h:tFlySet=if(GivesBonusTest,max(json.get(json.get(MagicItemMovement,roll.count),"FlySet"),tFlySet),tFlySet)]
        [h:tFlyMultiplier=if(GivesBonusTest,(json.get(json.get(MagicItemMovement,roll.count),"FlyMultiplier")*tFlyMultiplier),tFlyMultiplier)]
        [h:tFlySetOverride=if(GivesBonusTest,if(json.get(json.get(MagicItemMovement,roll.count),"FlySetOverride")==-1,tFlySetOverride,if(tFlySetOverride==-1,json.get(json.get(MagicItemMovement,roll.count),"FlySetOverride"),min(json.get(json.get(MagicItemMovement,roll.count),"FlySetOverride"),tFlySetOverride))),tFlySetOverride)]
        [h:tIsHover=if(GivesBonusTest,max(json.get(json.get(MagicItemMovement,roll.count),"IsHover"),tIsHover),tIsHover)]
        
        [h:tIsSwim=if(GivesBonusTest,max(json.get(json.get(MagicItemMovement,roll.count),"IsSwim"),tIsSwim),tIsSwim)]
        [h:tSwimBonus=if(GivesBonusTest,(json.get(json.get(MagicItemMovement,roll.count),"SwimBonus")+tSwimBonus),tSwimBonus)]
        [h:tSwimSet=if(GivesBonusTest,max(json.get(json.get(MagicItemMovement,roll.count),"SwimSet"),tSwimSet),tSwimSet)]
        [h:tSwimMultiplier=if(GivesBonusTest,(json.get(json.get(MagicItemMovement,roll.count),"SwimMultiplier")*tSwimMultiplier),tSwimMultiplier)]
        [h:tSwimSetOverride=if(GivesBonusTest,if(json.get(json.get(MagicItemMovement,roll.count),"SwimSetOverride")==-1,tSwimSetOverride,if(tSwimSetOverride==-1,json.get(json.get(MagicItemMovement,roll.count),"SwimSetOverride"),min(json.get(json.get(MagicItemMovement,roll.count),"SwimSetOverride"),tSwimSetOverride))),tSwimSetOverride)]

    }]
}]

[h:MagicItemStats=json.set("",
"bStr",tStrBonus,"bDex",tDexBonus,"bCon",tConBonus,"bInt",tIntBonus,"bWis",tWisBonus,"bCha",tChaBonus,"sStr",tStrSet,"sDex",tDexSet,"sCon",tConSet,"sInt",tIntSet,"sWis",tWisSet,"sCha",tChaSet,"soStr",tStrSetOverride,"soDex",tDexSetOverride,"soCon",tConSetOverride,"soInt",tIntSetOverride,"soWis",tWisSetOverride,"soCha",tChaSetOverride,"ibludgVuln",tbludgVuln,"ipierceVuln",tpierceVuln,"islashVuln",tslashVuln,"iacidVuln",tacidVuln,"icoldVuln",tcoldVuln,"ifireVuln",tfireVuln,"iforceVuln",tforceVuln,"ilightVuln",tlightVuln,"inecroVuln",tnecroVuln,"ipoisVuln",tpoisVuln,"ipsychVuln",tpsychVuln,"iradVuln",tradVuln,"ithunVuln",tthunVuln,"iabjVuln",tabjVuln,"iconjVuln",tconjVuln,"idivVuln",tdivVuln,"ienchVuln",tenchVuln,"ievocVuln",tevocVuln,"iillVuln",tillVuln,"inecVuln",tnecVuln,"itranVuln",ttranVuln,"ibludgRes",tbludgRes,"ipierceRes",tpierceRes,"islashRes",tslashRes,"iacidRes",tacidRes,"icoldRes",tcoldRes,"ifireRes",tfireRes,"iforceRes",tforceRes,"ilightRes",tlightRes,"inecroRes",tnecroRes,"ipoisRes",tpoisRes,"ipsychRes",tpsychRes,"iradRes",tradRes,"ithunRes",tthunRes,"iabjRes",tabjRes,"iconjRes",tconjRes,"idivRes",tdivRes,"ienchRes",tenchRes,"ievocRes",tevocRes,"iillRes",tillRes,"inecRes",tnecRes,"itranRes",ttranRes,"ibludgImmun",tbludgImmun,"ipierceImmun",tpierceImmun,"islashImmun",tslashImmun,"iacidImmun",tacidImmun,"icoldImmun",tcoldImmun,"ifireImmun",tfireImmun,"iforceImmun",tforceImmun,"ilightImmun",tlightImmun,"inecroImmun",tnecroImmun,"ipoisImmun",tpoisImmun,"ipsychImmun",tpsychImmun,"iradImmun",tradImmun,"ithunImmun",tthunImmun,"iabjImmun",tabjImmun,"iconjImmun",tconjImmun,"idivImmun",tdivImmun,"ienchImmun",tenchImmun,"ievocImmun",tevocImmun,"iillImmun",tillImmun,"inecImmun",tnecImmun,"itranImmun",ttranImmun,"ibludgAbsorb",tbludgAbsorb,"ipierceAbsorb",tpierceAbsorb,"islashAbsorb",tslashAbsorb,"iacidAbsorb",tacidAbsorb,"icoldAbsorb",tcoldAbsorb,"ifireAbsorb",tfireAbsorb,"iforceAbsorb",tforceAbsorb,"ilightAbsorb",tlightAbsorb,"inecroAbsorb",tnecroAbsorb,"ipoisAbsorb",tpoisAbsorb,"ipsychAbsorb",tpsychAbsorb,"iradAbsorb",tradAbsorb,"ithunAbsorb",tthunAbsorb,"iabjAbsorb",tabjAbsorb,"iconjAbsorb",tconjAbsorb,"idivAbsorb",tdivAbsorb,"ienchAbsorb",tenchAbsorb,"ievocAbsorb",tevocAbsorb,"iillAbsorb",tillAbsorb,"inecAbsorb",tnecAbsorb,"itranAbsorb",ttranAbsorb,"ibludgDR",tbludgDR,"ipierceDR",tpierceDR,"islashDR",tslashDR,"iacidDR",tacidDR,"icoldDR",tcoldDR,"ifireDR",tfireDR,"iforceDR",tforceDR,"ilightDR",tlightDR,"inecroDR",tnecroDR,"ipoisDR",tpoisDR,"ipsychDR",tpsychDR,"iradDR",tradDR,"ithunDR",tthunDR,"iabjDR",tabjDR,"iconjDR",tconjDR,"idivDR",tdivDR,"ienchDR",tenchDR,"ievocDR",tevocDR,"iillDR",tillDR,"inecDR",tnecDR,"itranDR",ttranDR,"ibludgDRMag",tbludgDRMag,"ipierceDRMag",tpierceDRMag,"islashDRMag",tslashDRMag,"iacidDRMag",tacidDRMag,"icoldDRMag",tcoldDRMag,"ifireDRMag",tfireDRMag,"iforceDRMag",tforceDRMag,"ilightDRMag",tlightDRMag,"inecroDRMag",tnecroDRMag,"ipoisDRMag",tpoisDRMag,"ipsychDRMag",tpsychDRMag,"iradDRMag",tradDRMag,"ithunDRMag",tthunDRMag,"iabjDRMag",tabjDRMag,"iconjDRMag",tconjDRMag,"idivDRMag",tdivDRMag,"ienchDRMag",tenchDRMag,"ievocDRMag",tevocDRMag,"iillDRMag",tillDRMag,"inecDRMag",tnecDRMag,"itranDRMag",ttranDRMag,"ibludgDRPhys",tbludgDRPhys,"ipierceDRPhys",tpierceDRPhys,"islashDRPhys",tslashDRPhys,"iacidDRPhys",tacidDRPhys,"icoldDRPhys",tcoldDRPhys,"ifireDRPhys",tfireDRPhys,"iforceDRPhys",tforceDRPhys,"ilightDRPhys",tlightDRPhys,"inecroDRPhys",tnecroDRPhys,"ipoisDRPhys",tpoisDRPhys,"ipsychDRPhys",tpsychDRPhys,"iradDRPhys",tradDRPhys,"ithunDRPhys",tthunDRPhys,"iabjDRPhys",tabjDRPhys,"iconjDRPhys",tconjDRPhys,"idivDRPhys",tdivDRPhys,"ienchDRPhys",tenchDRPhys,"ievocDRPhys",tevocDRPhys,"iillDRPhys",tillDRPhys,"inecDRPhys",tnecDRPhys,"itranDRPhys",ttranDRPhys,"iblindCondImmun",tblindCondImmun,"icharmCondImmun",tcharmCondImmun,"iconfuseCondImmun",tconfuseCondImmun,"ideafCondImmun",tdeafCondImmun,"idiseaseCondImmun",tdiseaseCondImmun,"ifrightCondImmun",tfrightCondImmun,"igrappleCondImmun",tgrappleCondImmun,"iincapCondImmun",tincapCondImmun,"iparaCondImmun",tparaCondImmun,"ipetrifyCondImmun",tpetrifyCondImmun,"ipoisCondImmun",tpoisCondImmun,"iproneCondImmun",tproneCondImmun,"irestrCondImmun",trestrCondImmun,"istunCondImmun",tstunCondImmun,"isurpCondImmun",tsurpCondImmun,"iturnCondImmun",tturnCondImmun,"iunconcCondImmun",tunconcCondImmun,"bMaxHP",tMaxHPBonus,"sMaxHP",tMaxHPSet,"soMaxHP",tMaxHPSetOverride,"bAC",tACBonus,"sAC",tACSet,"soAC",tACSetOverride,"iStrCheckAdv",tStrCheckAdv,"iDexCheckAdv",tDexCheckAdv,"iConCheckAdv",tConCheckAdv,"iIntCheckAdv",tIntCheckAdv,"iWisCheckAdv",tWisCheckAdv,"iChaCheckAdv",tChaCheckAdv,"iAcbCheckAdv",tAcbCheckAdv,"iAnHCheckAdv",tAnHCheckAdv,"iArcCheckAdv",tArcCheckAdv,"iAthCheckAdv",tAthCheckAdv,"iDcpCheckAdv",tDcpCheckAdv,"iHstCheckAdv",tHstCheckAdv,"iInsCheckAdv",tInsCheckAdv,"iImdCheckAdv",tImdCheckAdv,"iInvCheckAdv",tInvCheckAdv,"iMedCheckAdv",tMedCheckAdv,"iNtrCheckAdv",tNtrCheckAdv,"iPcpCheckAdv",tPcpCheckAdv,"iPfmCheckAdv",tPfmCheckAdv,"iPrsCheckAdv",tPrsCheckAdv,"iRlgCheckAdv",tRlgCheckAdv,"iSoHCheckAdv",tSoHCheckAdv,"iStlCheckAdv",tStlCheckAdv,"iSrvCheckAdv",tSrvCheckAdv,"iStrCheckDis",tStrCheckDis,"iDexCheckDis",tDexCheckDis,"iConCheckDis",tConCheckDis,"iIntCheckDis",tIntCheckDis,"iWisCheckDis",tWisCheckDis,"iChaCheckDis",tChaCheckDis,"iAcbCheckDis",tAcbCheckDis,"iAnHCheckDis",tAnHCheckDis,"iArcCheckDis",tArcCheckDis,"iAthCheckDis",tAthCheckDis,"iDcpCheckDis",tDcpCheckDis,"iHstCheckDis",tHstCheckDis,"iInsCheckDis",tInsCheckDis,"iImdCheckDis",tImdCheckDis,"iInvCheckDis",tInvCheckDis,"iMedCheckDis",tMedCheckDis,"iNtrCheckDis",tNtrCheckDis,"iPcpCheckDis",tPcpCheckDis,"iPfmCheckDis",tPfmCheckDis,"iPrsCheckDis",tPrsCheckDis,"iRlgCheckDis",tRlgCheckDis,"iSoHCheckDis",tSoHCheckDis,"iStlCheckDis",tStlCheckDis,"iSrvCheckDis",tSrvCheckDis,"iStrCheckBonus",tStrCheckBonus,"iDexCheckBonus",tDexCheckBonus,"iConCheckBonus",tConCheckBonus,"iIntCheckBonus",tIntCheckBonus,"iWisCheckBonus",tWisCheckBonus,"iChaCheckBonus",tChaCheckBonus,"iAcbCheckBonus",tAcbCheckBonus,"iAnHCheckBonus",tAnHCheckBonus,"iArcCheckBonus",tArcCheckBonus,"iAthCheckBonus",tAthCheckBonus,"iDcpCheckBonus",tDcpCheckBonus,"iHstCheckBonus",tHstCheckBonus,"iInsCheckBonus",tInsCheckBonus,"iImdCheckBonus",tImdCheckBonus,"iInvCheckBonus",tInvCheckBonus,"iMedCheckBonus",tMedCheckBonus,"iNtrCheckBonus",tNtrCheckBonus,"iPcpCheckBonus",tPcpCheckBonus,"iPfmCheckBonus",tPfmCheckBonus,"iPrsCheckBonus",tPrsCheckBonus,"iRlgCheckBonus",tRlgCheckBonus,"iSoHCheckBonus",tSoHCheckBonus,"iStlCheckBonus",tStlCheckBonus,"iSrvCheckBonus",tSrvCheckBonus,"iStrCheckProf",tStrCheckProf,"iDexCheckProf",tDexCheckProf,"iConCheckProf",tConCheckProf,"iIntCheckProf",tIntCheckProf,"iWisCheckProf",tWisCheckProf,"iChaCheckProf",tChaCheckProf,"iAcbCheckProf",tAcbCheckProf,"iAnHCheckProf",tAnHCheckProf,"iArcCheckProf",tArcCheckProf,"iAthCheckProf",tAthCheckProf,"iDcpCheckProf",tDcpCheckProf,"iHstCheckProf",tHstCheckProf,"iInsCheckProf",tInsCheckProf,"iImdCheckProf",tImdCheckProf,"iInvCheckProf",tInvCheckProf,"iMedCheckProf",tMedCheckProf,"iNtrCheckProf",tNtrCheckProf,"iPcpCheckProf",tPcpCheckProf,"iPfmCheckProf",tPfmCheckProf,"iPrsCheckProf",tPrsCheckProf,"iRlgCheckProf",tRlgCheckProf,"iSoHCheckProf",tSoHCheckProf,"iStlCheckProf",tStlCheckProf,"iSrvCheckProf",tSrvCheckProf,"iStrCheckMessage",tStrCheckMessage,"iDexCheckMessage",tDexCheckMessage,"iConCheckMessage",tConCheckMessage,"iIntCheckMessage",tIntCheckMessage,"iWisCheckMessage",tWisCheckMessage,"iChaCheckMessage",tChaCheckMessage,"iAcbCheckMessage",tAcbCheckMessage,"iAnHCheckMessage",tAnHCheckMessage,"iArcCheckMessage",tArcCheckMessage,"iAthCheckMessage",tAthCheckMessage,"iDcpCheckMessage",tDcpCheckMessage,"iHstCheckMessage",tHstCheckMessage,"iInsCheckMessage",tInsCheckMessage,"iImdCheckMessage",tImdCheckMessage,"iInvCheckMessage",tInvCheckMessage,"iMedCheckMessage",tMedCheckMessage,"iNtrCheckMessage",tNtrCheckMessage,"iPcpCheckMessage",tPcpCheckMessage,"iPfmCheckMessage",tPfmCheckMessage,"iPrsCheckMessage",tPrsCheckMessage,"iRlgCheckMessage",tRlgCheckMessage,"iSoHCheckMessage",tSoHCheckMessage,"iStlCheckMessage",tStlCheckMessage,"iSrvCheckMessage",tSrvCheckMessage,"iStrSaveAdv",tStrSaveAdv,"iDexSaveAdv",tDexSaveAdv,"iConSaveAdv",tConSaveAdv,"iIntSaveAdv",tIntSaveAdv,"iWisSaveAdv",tWisSaveAdv,"iChaSaveAdv",tChaSaveAdv,"iStrSaveDis",tStrSaveDis,"iDexSaveDis",tDexSaveDis,"iConSaveDis",tConSaveDis,"iIntSaveDis",tIntSaveDis,"iWisSaveDis",tWisSaveDis,"iChaSaveDis",tChaSaveDis,"iStrSaveBonus",tStrSaveBonus,"iDexSaveBonus",tDexSaveBonus,"iConSaveBonus",tConSaveBonus,"iIntSaveBonus",tIntSaveBonus,"iWisSaveBonus",tWisSaveBonus,"iChaSaveBonus",tChaSaveBonus,"iStrSaveProf",tStrSaveProf,"iDexSaveProf",tDexSaveProf,"iConSaveProf",tConSaveProf,"iIntSaveProf",tIntSaveProf,"iWisSaveProf",tWisSaveProf,"iChaSaveProf",tChaSaveProf,"iStrSaveMessage",tStrSaveMessage,"iDexSaveMessage",tDexSaveMessage,"iConSaveMessage",tConSaveMessage,"iIntSaveMessage",tIntSaveMessage,"iWisSaveMessage",tWisSaveMessage,"iChaSaveMessage",tChaSaveMessage,"iInitAdv",tInitAdv,"iInitDis",tInitDis,"iInitBonus",tInitBonus,"iInitProf",tInitProf,"iInitMessage",tInitMessage,"iConcAdv",tConcAdv,"iConcDis",tConcDis,"iConcBonus",tConcBonus,"iConcProf",tConcProf,"iConcMessage",tConcMessage,"iDeathAdv",tDeathAdv,"iDeathDis",tDeathDis,"iDeathBonus",tDeathBonus,"iDeathProf",tDeathProf,"iDeathMessage",tDeathMessage,"iSpeedBonus",tSpeedBonus,"iSpeedMultiplier",tSpeedMultiplier,"iSpeedSet",tSpeedSet,"iSpeedSetOverride",tSpeedSetOverride,"iIsBurrow",tIsBurrow,"iBurrowBonus",tBurrowBonus,"iBurrowMultiplier",tBurrowMultiplier,"iBurrowSet",tBurrowSet,"iBurrowSetOverride",tBurrowSetOverride,"iIsClimb",tIsClimb,"iClimbBonus",tClimbBonus,"iClimbMultiplier",tClimbMultiplier,"iClimbSet",tClimbSet,"iClimbSetOverride",tClimbSetOverride,"iIsFly",tIsFly,"iFlyBonus",tFlyBonus,"iFlyMultiplier",tFlyMultiplier,"iFlySet",tFlySet,"iFlySetOverride",tFlySetOverride,"iIsHover",tIsHover,"iIsSwim",tIsSwim,"iSwimBonus",tSwimBonus,"iSwimMultiplier",tSwimMultiplier,"iSwimSet",tSwimSet,"iSwimSetOverride",tSwimSetOverride
)]